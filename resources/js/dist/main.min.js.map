{"version":3,"sources":["main.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","footerLinkToggle","undefined","_jquery","_jquery2","linkToggle","footerLinks","on","toggleClass","hasClass","find","attr","./../vendor/jquery/dist/jquery","2","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","sum","b","arguments","square","variable","MyClass","credentials","this","name","enrollmentNo","3","init","fn","slick","_rdslick2","runImportedFunctions","_navigation","navigation","_slider","slider","_footer","removeClass","closest","addClass","each","prepend","_rdslick","document","ready","./../vendor/mmenu.min","./../vendor/slick/rdslick.js","./footer","./import","./navigation","./slider","4","navBtn","navBtnClose","nav","preventDefault","5","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","dots","arrows","6","_typeof","Symbol","iterator","constructor","global","factory","w","window","noGlobal","isArrayLike","type","jQuery","isWindow","winnow","elements","qualifier","not","isFunction","grep","elem","nodeType","risSimple","test","filter","indexOf","sibling","cur","dir","createOptions","options","object","match","rnotwhite","_","flag","completed","removeEventListener","Data","expando","uid","dataAttr","data","replace","rmultiDash","toLowerCase","getAttribute","rbrace","parseJSON","dataUser","set","adjustCSS","prop","valueParts","tween","adjusted","scale","maxIterations","currentValue","css","initial","unit","cssNumber","initialInUnit","rcssNum","exec","style","start","end","getAll","context","tag","ret","getElementsByTagName","querySelectorAll","nodeName","merge","setGlobalEval","elems","refElements","dataPriv","get","buildFragment","scripts","selection","ignored","tmp","wrap","contains","j","fragment","createDocumentFragment","nodes","rhtml","appendChild","createElement","rtagName","wrapMap","_default","innerHTML","htmlPrefilter","lastChild","childNodes","firstChild","textContent","push","createTextNode","inArray","ownerDocument","rscriptType","returnTrue","returnFalse","safeActiveElement","activeElement","err","_on","types","selector","one","origFn","event","off","apply","guid","add","manipulationTarget","content","disableScript","restoreScript","rscriptTypeMasked","removeAttribute","cloneCopyEvent","src","dest","pdataOld","pdataCur","udataOld","udataCur","events","hasData","access","handle","extend","fixInput","rcheckableType","checked","defaultValue","domManip","collection","args","callback","concat","first","hasScripts","node","doc","iNoClone","support","checkClone","rchecked","index","self","eq","html","map","clone","_evalUrl","globalEval","rcleanScript","_remove","keepData","cleanData","parentNode","removeChild","actualDisplay","appendTo","body","display","detach","defaultDisplay","elemdisplay","iframe","documentElement","contentDocument","write","close","curCSS","computed","width","minWidth","maxWidth","getStyles","getPropertyValue","pixelMarginRight","rnumnonpx","rmargin","addGetHookIf","conditionFn","hookFn","vendorPropName","emptyStyle","capName","toUpperCase","slice","cssPrefixes","setPositiveNumber","subtract","matches","Math","max","augmentWidthOrHeight","extra","isBorderBox","styles","val","cssExpand","getWidthOrHeight","valueIsBorderBox","offsetWidth","offsetHeight","msFullscreenElement","top","getClientRects","round","getBoundingClientRect","boxSizingReliable","parseFloat","showHide","show","hidden","values","isHidden","Tween","easing","createFxNow","setTimeout","fxNow","now","genFx","includeWidth","which","attrs","height","opacity","createTween","animation","Animation","tweeners","defaultPrefilter","opts","toggle","hooks","oldfire","checkDisplay","anim","orig","dataShow","queue","_queueHooks","unqueued","empty","fire","always","overflow","overflowX","overflowY","rfxtypes","isEmptyObject","done","hide","remove","propFilter","specialEasing","camelCase","isArray","cssHooks","expand","properties","result","stopped","prefilters","deferred","Deferred","tick","currentTime","remaining","startTime","duration","temp","percent","tweens","run","notifyWith","resolveWith","promise","originalProperties","originalOptions","stop","gotoEnd","rejectWith","proxy","fx","timer","progress","complete","fail","getClass","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataType","dataTypes","unshift","inspectPrefiltersOrTransports","jqXHR","inspect","selected","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","deep","flatOptions","ajaxSettings","ajaxHandleResponses","responses","ct","finalDataType","firstDataType","contents","shift","mimeType","getResponseHeader","converters","ajaxConvert","response","isSuccess","conv2","current","conv","prev","responseFields","dataFilter","split","state","error","buildParams","prefix","traditional","v","rbracket","getWindow","defaultView","arr","_slice","class2type","toString","hasOwn","hasOwnProperty","version","rtrim","rmsPrefix","rdashAlpha","fcamelCase","all","letter","jquery","toArray","num","pushStack","prevObject","last","len","sort","splice","copy","copyIsArray","isPlainObject","random","isReady","msg","noop","Array","isNumeric","realStringObj","script","indirect","eval","trim","text","head","string","makeArray","results","second","invert","callbackInverse","callbackExpect","arg","Date","Sizzle","seed","m","nid","nidselect","groups","newSelector","newContext","preferredDoc","setDocument","documentIsHTML","rquickExpr","getElementById","id","getElementsByClassName","qsa","compilerCache","rbuggyQSA","rescape","setAttribute","tokenize","ridentifier","toSelector","join","rsibling","testContext","qsaError","select","createCache","cache","keys","Expr","cacheLength","markFunction","assert","div","addHandle","handler","attrHandle","siblingCheck","diff","sourceIndex","MAX_NEGATIVE","nextSibling","createInputPseudo","createButtonPseudo","createPositionalPseudo","argument","matchIndexes","setFilters","tokens","addCombinator","matcher","combinator","base","checkNonElements","doneName","xml","oldCache","uniqueCache","outerCache","newCache","dirruns","uniqueID","elementMatcher","matchers","multipleContexts","contexts","condense","unmatched","newUnmatched","mapped","setMatcher","preFilter","postFilter","postFinder","postSelector","preMap","postMap","preexisting","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","pop","uniqueSort","getText","isXML","compile","sortInput","hasDuplicate","docElem","rbuggyMatches","classCache","tokenCache","sortOrder","push_native","list","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","runescape","funescape","escaped","escapedWhitespace","high","String","fromCharCode","unloadHandler","els","hasCompare","parent","addEventListener","attachEvent","className","createComment","getById","getElementsByName","attrId","getAttributeNode","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","expr","specified","duplicates","detectDuplicates","sortStable","nodeValue","selectors","createPseudo",">"," ","+","~","excess","unquoted","nodeNameSelector","pattern","operator","check","what","simple","forward","ofType","nodeIndex","useCache","pseudo","idx","matched","has","innerText","lang","elemLang","hash","location","root","focus","hasFocus","href","tabIndex","enabled","disabled","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","filters","parseOnly","soFar","preFilters","cached","token","compiled","div1","unique","isXMLDoc","_dir","until","truncate","is","_siblings","rneedsContext","rsingleTag","rootjQuery","parseHTML","rparentsprev","guaranteedUnique","children","next","targets","pos","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","reverse","Callbacks","firing","memory","_fired","_locked","firingIndex","once","stopOnFalse","disable","lock","locked","fireWith","fired","tuples","_state","_promise","then","fns","newDefer","tuple","returned","notify","resolve","reject","pipe","stateString","when","subordinate","progressValues","progressContexts","resolveContexts","resolveValues","updateFunc","readyList","readyWait","holdReady","hold","wait","triggerHandler","readyState","doScroll","chainable","emptyGet","raw","bulk","acceptData","owner","register","stored","camel","_data","removeData","_removeData","camelKey","dequeue","startLength","setter","clearQueue","count","defer","pnum","source","el","option","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","handleObjIn","eventHandle","handleObj","special","handlers","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","fix","handlerQueue","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","stopPropagation","postDispatch","_handlers","sel","isNaN","fixHooks","keyHooks","original","charCode","keyCode","mouseHooks","eventDoc","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","originalEvent","fixHook","Event","load","noBubble","trigger","blur","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","timeStamp","stopImmediatePropagation","mouseenter","mouseleave","pointerenter","pointerleave","related","relatedTarget","rxhtmlTag","rnoInnerhtml","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","append","insertBefore","before","after","replaceWith","replaceChild","prependTo","insertAfter","replaceAll","insert","HTML","BODY","view","opener","getComputedStyle","swap","old","computeStyleTests","cssText","container","divStyle","pixelPositionVal","reliableMarginLeftVal","marginLeft","boxSizingReliableVal","marginRight","pixelMarginRightVal","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginLeft","reliableMarginRight","marginDiv","rdisplayswap","cssShow","position","visibility","cssNormalTransform","letterSpacing","fontWeight","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","cssProps","float","origName","isFinite","left","margin","padding","border","suffix","expanded","parts","propHooks","eased","step","linear","p","swing","cos","PI","timerId","rrun","*","tweener","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","interval","setInterval","clearInterval","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","optDisabled","radioValue","boolHook","removeAttr","nType","attrHooks","propName","attrNames","propFix","getter","rfocusable","rclickable","removeProp","tabindex","parseInt","for","class","rclass","classes","curValue","clazz","finalValue","stateVal","classNames","rreturn","rspaces","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","parentWindow","simulate","isSimulated","hover","fnOver","fnOut","focusin","attaches","nonce","rquery","JSON","parse","parseXML","DOMParser","parseFromString","rhash","rts","rheaders","rlocalProtocol","rnoContent","rprotocol","allTypes","originAnchor","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","status","nativeStatusText","headers","success","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","_statusCode","fireGlobals","globalEventContext","completeDeferred","responseHeaders","urlAnchor","requestHeaders","requestHeadersNames","strAbort","getAllResponseHeaders","setRequestHeader","lname","overrideMimeType","abort","finalText","method","crossDomain","host","param","hasContent","beforeSend","send","getJSON","getScript","throws","wrapAll","firstElementChild","wrapInner","unwrap","visible","r20","rCRLF","rsubmitterTypes","rsubmittable","encodeURIComponent","serialize","serializeArray","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","_callback","errorCallback","open","username","xhrFields","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","text script","_callback2","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","keepScripts","parsed","_load","params","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","win","box","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","bind","unbind","delegate","undelegate","size","andSelf","define","amd","_jQuery","_$","$","noConflict","7","glbl","$wndw","$html","$body","mm","umm","_c","_d","_e","$menu","_api","conf","vars","cbck","___deprecated","_initMenu","_initAnchors","panelNodetype","_initAddons","___debug","addons","uniqueId","defaults","extensions","navbar","title","titleLink","onClick","setSelected","slidingSubmenus","configuration","divider","inset","panel","spacer","vertical","openingInterval","transitionDuration","nopanel","_initPanels","update","listview","openPanel","subopened","opened","highest","csstransitions","closePanel","closeAllPanels","togglePanel","getInstance","offCanvas","wrapper","menu","__findAddBack","__refactorClass","nolistview","d","__getUniqueId","sub","fullsubopen","_url","btn","hasnavbar","c","clickAnchor","h","__valueOrFn","blockUI","blocking","__api","__filterListItems","__transitionend","transitionend","webkitTransitionEnd","touch","navigator","msMaxTouchPoints","Modernizr","charAt","substr","zposition","pageSelector","pageNodetype","$allMenus","offcanvas","setPage","$page","_initBlocker","menuInjectMethod","menuWrapperSelector","modal","moveBackground","wrapPageIfNeeded","_openSetup","_openFinish","closeAllOthers","resize","background","opening","page","slideout","keydown","$blck","blocker","touchstart","touchmove","mousedown","./jquery/dist/jquery","8","noUiSlider","element","adaptiveHeight","appendArrows","appendDots","asNavFor","prevArrow","nextArrow","cssEase","customPaging","dotsClass","hashLink","sliderIDData","draggable","edgeFriction","fade","focusOnSelect","infinite","initialSlide","lazyLoad","lazyLoadData","lazyLoadCB","mobileFirst","pauseOnHover","pauseOnDotsHover","respondTo","responsive","rows","slide","slidesPerRow","swipe","swipeToSlide","touchMove","touchThreshold","useCSS","useTransform","variableWidth","verticalSwiping","waitForAnimate","pagination","paginationClass","appendPagination","initials","animating","dragging","autoPlayTimer","currentDirection","currentLeft","currentSlide","direction","$dots","$pagination","listWidth","listHeight","loadIndex","$nextArrow","$prevArrow","slideCount","slideWidth","$slideTrack","$slides","sliding","slideOffset","swipeLeft","$list","touchObject","transformsEnabled","unslicked","activeBreakpoint","animType","animProp","breakpoints","breakpointSettings","breakpointCallbacks","cssTransitions","paused","positionProp","rowCount","shouldClick","$slider","$slidesCache","transformType","transitionType","visibilityChange","windowWidth","windowTimer","dataSettings","mozHidden","webkitHidden","autoPlay","autoPlayClear","autoPlayIterator","changeSlide","clickHandler","selectHandler","setPosition","swipeHandler","disableTransition","focusHandler","hashHandle","instanceUid","htmlExpr","registerBreakpoints","checkResponsive","creation","buildRows","buildOut","setProps","startLoad","loadSlider","initializeEvents","updateArrows","updateDots","updatePagination","buildActions","newSlides","numOfSlides","originalSlides","slidesPerSection","ceil","aIndex","bIndex","row","cIndex","setupInfinite","buildArrows","buildDots","buildPagination","setSlideClasses","slideIndex","infiniteCount","dotString","getDotCount","pagString","paginationObject","numbers","bodyStyle","WebkitTransition","MozTransition","msTransition","OTransform","perspectiveProperty","webkitPerspective","MozTransform","MozPerspective","webkitTransform","msTransform","transform","initUI","progressiveLazyLoad","updates","floor","allSlides","indexOffset","remainder","setDimensions","setHeight","setCSS","getLeft","setFade","outerHeight","outerWidth","targetHeight","positionProps","x","y","targetLeft","breakpoint","currentBreakpoint","responsiveSettings","forceUpdate","targetBreakpoint","respondToWidth","triggerBreakpoint","sliderWidth","innerWidth","min","unslick","refresh","util","verticalHeight","targetSlide","verticalOffset","offsetLeft","checkNavigable","navigables","prevNavigable","getNavigableIndexes","breakPoint","counter","indexes","getSlideCount","slidesTraversed","swipedSlide","abs","pagerQty","rdslick","slideHandler","swipeDirection","xDist","yDist","swipeAngle","startX","curX","startY","curY","atan2","destroy","cleanUpEvents","cleanUpRows","fromBreakpoint","initializing","firstVisible","message","unload","reinit","initArrowEvents","initDotEvents","initPaginationEvents","getIndexFromID","slickID","action","setPaused","orientationChange","pangnation","$pangnation","fingerCount","touches","minSwipe","swipeStart","swipeMove","swipeEnd","swipeLength","positionOffset","sqrt","pow","edgeHit","sync","dontAnimate","animSlide","oldSlide","slideLeft","animateSlide","postSlide","fadeSlideOut","fadeSlide","animateHeight","targetElement","windowDelay","sf","isPlay","indexID","slideControllers","unevenOffset","$target","animProps","applyTransition","transition","slickMethods","addSlide","markup","addBefore","removeSlide","removeBefore","removeAll","getCurrent","getOption","setOption","item","goTo","goToID","slideID","pause","play","getSlick","loadRange","cloneRange","rangeStart","rangeEnd","loadSlides","slides","lazyCB","resetSlide","Slick","keyHandler","slickAdd","slickRemove","slickCurrentSlide","slickGetOption","slickSetOption","slickGoTo","slickPause","slickPlay","slickPrev","slickNext","slickGoToID","create","./../../vendor/jquery/dist/jquery"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.footerLinkToggle = undefined;\n\nvar _jquery = require(\"./../vendor/jquery/dist/jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar footerLinkToggle = function footerLinkToggle() {\n\n\tvar linkToggle = (0, _jquery2.default)(\".links-toggle\"),\n\t    footerLinks = (0, _jquery2.default)(\".footer__links\");\n\n\tlinkToggle.on(\"click\", function () {\n\n\t\tfooterLinks.toggleClass(\"isHidden\");\n\n\t\tif (footerLinks.hasClass(\"isHidden\")) {\n\t\t\tlinkToggle.find('use').attr('xlink:href', '#arrows-bold-right');\n\t\t} else {\n\t\t\tlinkToggle.find('use').attr('xlink:href', '#arrows-bold-down');\n\t\t}\n\t});\n};\n\nexports.footerLinkToggle = footerLinkToggle;\n\n},{\"./../vendor/jquery/dist/jquery\":6}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar sum = function sum(a) {\n    var b = arguments.length <= 1 || arguments[1] === undefined ? 6 : arguments[1];\n    return a + b;\n};\n\nvar square = function square(b) {\n    return b * b;\n};\n\nvar variable = 8;\n\nvar MyClass = function () {\n    function MyClass(credentials) {\n        _classCallCheck(this, MyClass);\n\n        this.name = credentials.name;\n        this.enrollmentNo = credentials.enrollmentNo;\n    }\n\n    _createClass(MyClass, [{\n        key: \"getName\",\n        value: function getName() {\n            return this.name;\n        }\n    }]);\n\n    return MyClass;\n}();\n\nexports.sum = sum;\nexports.square = square;\nexports.variable = variable;\nexports.MyClass = MyClass;\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nvar _jquery = require(\"./../vendor/jquery/dist/jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _import = require(\"./import\");\n\nrequire(\"./../vendor/mmenu.min\");\n\nvar _rdslick = require(\"./../vendor/slick/rdslick.js\");\n\nvar _rdslick2 = _interopRequireDefault(_rdslick);\n\nvar _navigation = require(\"./navigation\");\n\nvar _slider = require(\"./slider\");\n\nvar _footer = require(\"./footer\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _jquery2.default)(document).ready(init);\n\nfunction init() {\n\t_jquery2.default.fn.slick = _rdslick2.default;\n\trunImportedFunctions();\n}\n\nfunction runImportedFunctions() {\n\n\t(0, _navigation.navigation)();\n\t(0, _slider.slider)();\n\t(0, _footer.footerLinkToggle)();\n\n\t(0, _jquery2.default)(\".portlet-faq\").on(\"click\", function (e) {\n\t\t(0, _jquery2.default)(\".portlet-faq\").removeClass(\"isActive\");\n\t\t(0, _jquery2.default)(e.target).closest(\".portlet-faq\").addClass(\"isActive\");\n\t});\n\n\t(0, _jquery2.default)(\".about-us, .bill, .account\").find('.page-sidebar ul li').each(function () {\n\t\t(0, _jquery2.default)(this).addClass('about-us-portlet');\n\t});\n\n\t// $(\".bill\").find('.page-sidebar ul li').each(function() {\n\t// \t$(this).addClass('about-us-portlet');\n\t// });\n\n\t// $(\".account\").find('.page-sidebar ul li').each(function() {\n\t// \t$(this).addClass('about-us-portlet');\n\t// });\n\n\t(0, _jquery2.default)(\".about-us-portlet\").prepend('<svg><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#arrows-bold-right\"></use></svg>');\n}\n\n},{\"./../vendor/jquery/dist/jquery\":6,\"./../vendor/mmenu.min\":7,\"./../vendor/slick/rdslick.js\":8,\"./footer\":1,\"./import\":2,\"./navigation\":4,\"./slider\":5}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.navigation = undefined;\n\nvar _jquery = require(\"./../vendor/jquery/dist/jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar navigation = function navigation() {\n\n\tvar navBtn = (0, _jquery2.default)(\".header__nav--menu\"),\n\t    navBtnClose = (0, _jquery2.default)(\".close-nav\"),\n\t    nav = (0, _jquery2.default)(\".main__nav\");\n\n\tnavBtn.on(\"click\", function (e) {\n\t\te.preventDefault();\n\t\tnav.toggleClass(\"active\");\n\t});\n\n\tnavBtnClose.on(\"click\", function (e) {\n\t\te.preventDefault();\n\t\tnav.removeClass(\"active\");\n\t});\n};\n\nexports.navigation = navigation;\n\n},{\"./../vendor/jquery/dist/jquery\":6}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.slider = undefined;\n\nvar _jquery = require(\"./../vendor/jquery/dist/jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _rdslick = require(\"./../vendor/slick/rdslick.js\");\n\nvar _rdslick2 = _interopRequireDefault(_rdslick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar slider = function slider() {\n\n\t(0, _jquery2.default)(\".slider__items\").slick({\n\t\tslidesToShow: 3,\n\t\tslidesToScroll: 3,\n\t\tautoplay: true,\n\t\tautoplaySpeed: 4000,\n\t\tdots: true,\n\t\tarrows: false\n\t});\n};\n\nexports.slider = slider;\n\n},{\"./../vendor/jquery/dist/jquery\":6,\"./../vendor/slick/rdslick.js\":8}],6:[function(require,module,exports){\n\"use strict\";var _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol?\"symbol\":typeof obj;};/*!\n * jQuery JavaScript Library v2.2.3\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-04-05T19:26Z\n */(function(global,factory){if((typeof module===\"undefined\"?\"undefined\":_typeof(module))===\"object\"&&_typeof(module.exports)===\"object\"){// For CommonJS and CommonJS-like environments where a proper `window`\n// is present, execute the factory and get jQuery.\n// For environments that do not have a `window` with a `document`\n// (such as Node.js), expose a factory as module.exports.\n// This accentuates the need for the creation of a real `window`.\n// e.g. var jQuery = require(\"jquery\")(window);\n// See ticket #14549 for more info.\nmodule.exports=global.document?factory(global,true):function(w){if(!w.document){throw new Error(\"jQuery requires a window with a document\");}return factory(w);};}else{factory(global);}// Pass this if window is not defined yet\n})(typeof window!==\"undefined\"?window:undefined,function(window,noGlobal){// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\"use strict\";\nvar arr=[];var document=window.document;var _slice=arr.slice;var concat=arr.concat;var push=arr.push;var indexOf=arr.indexOf;var class2type={};var toString=class2type.toString;var hasOwn=class2type.hasOwnProperty;var support={};var version=\"2.2.3\",// Define a local copy of jQuery\njQuery=function jQuery(selector,context){// The jQuery object is actually just the init constructor 'enhanced'\n// Need init if jQuery is called (just allow error to be thrown if not included)\nreturn new jQuery.fn.init(selector,context);},// Support: Android<4.1\n// Make sure we trim BOM and NBSP\nrtrim=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,// Matches dashed string for camelizing\nrmsPrefix=/^-ms-/,rdashAlpha=/-([\\da-z])/gi,// Used by jQuery.camelCase as callback to replace()\nfcamelCase=function fcamelCase(all,letter){return letter.toUpperCase();};jQuery.fn=jQuery.prototype={// The current version of jQuery being used\njquery:version,constructor:jQuery,// Start with an empty selector\nselector:\"\",// The default length of a jQuery object is 0\nlength:0,toArray:function toArray(){return _slice.call(this);},// Get the Nth element in the matched element set OR\n// Get the whole matched element set as a clean array\nget:function get(num){return num!=null?// Return just the one element from the set\nnum<0?this[num+this.length]:this[num]:// Return all the elements in a clean array\n_slice.call(this);},// Take an array of elements and push it onto the stack\n// (returning the new matched element set)\npushStack:function pushStack(elems){// Build a new jQuery matched element set\nvar ret=jQuery.merge(this.constructor(),elems);// Add the old object onto the stack (as a reference)\nret.prevObject=this;ret.context=this.context;// Return the newly-formed element set\nreturn ret;},// Execute a callback for every element in the matched set.\neach:function each(callback){return jQuery.each(this,callback);},map:function map(callback){return this.pushStack(jQuery.map(this,function(elem,i){return callback.call(elem,i,elem);}));},slice:function slice(){return this.pushStack(_slice.apply(this,arguments));},first:function first(){return this.eq(0);},last:function last(){return this.eq(-1);},eq:function eq(i){var len=this.length,j=+i+(i<0?len:0);return this.pushStack(j>=0&&j<len?[this[j]]:[]);},end:function end(){return this.prevObject||this.constructor();},// For internal use only.\n// Behaves like an Array's method, not like a jQuery method.\npush:push,sort:arr.sort,splice:arr.splice};jQuery.extend=jQuery.fn.extend=function(){var options,name,src,copy,copyIsArray,clone,target=arguments[0]||{},i=1,length=arguments.length,deep=false;// Handle a deep copy situation\nif(typeof target===\"boolean\"){deep=target;// Skip the boolean and the target\ntarget=arguments[i]||{};i++;}// Handle case when target is a string or something (possible in deep copy)\nif((typeof target===\"undefined\"?\"undefined\":_typeof(target))!==\"object\"&&!jQuery.isFunction(target)){target={};}// Extend jQuery itself if only one argument is passed\nif(i===length){target=this;i--;}for(;i<length;i++){// Only deal with non-null/undefined values\nif((options=arguments[i])!=null){// Extend the base object\nfor(name in options){src=target[name];copy=options[name];// Prevent never-ending loop\nif(target===copy){continue;}// Recurse if we're merging plain objects or arrays\nif(deep&&copy&&(jQuery.isPlainObject(copy)||(copyIsArray=jQuery.isArray(copy)))){if(copyIsArray){copyIsArray=false;clone=src&&jQuery.isArray(src)?src:[];}else{clone=src&&jQuery.isPlainObject(src)?src:{};}// Never move original objects, clone them\ntarget[name]=jQuery.extend(deep,clone,copy);// Don't bring in undefined values\n}else if(copy!==undefined){target[name]=copy;}}}}// Return the modified object\nreturn target;};jQuery.extend({// Unique for each copy of jQuery on the page\nexpando:\"jQuery\"+(version+Math.random()).replace(/\\D/g,\"\"),// Assume jQuery is ready without the ready module\nisReady:true,error:function error(msg){throw new Error(msg);},noop:function noop(){},isFunction:function isFunction(obj){return jQuery.type(obj)===\"function\";},isArray:Array.isArray,isWindow:function isWindow(obj){return obj!=null&&obj===obj.window;},isNumeric:function isNumeric(obj){// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n// subtraction forces infinities to NaN\n// adding 1 corrects loss of precision from parseFloat (#15100)\nvar realStringObj=obj&&obj.toString();return!jQuery.isArray(obj)&&realStringObj-parseFloat(realStringObj)+1>=0;},isPlainObject:function isPlainObject(obj){var key;// Not plain objects:\n// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n// - DOM nodes\n// - window\nif(jQuery.type(obj)!==\"object\"||obj.nodeType||jQuery.isWindow(obj)){return false;}// Not own constructor property must be Object\nif(obj.constructor&&!hasOwn.call(obj,\"constructor\")&&!hasOwn.call(obj.constructor.prototype||{},\"isPrototypeOf\")){return false;}// Own properties are enumerated firstly, so to speed up,\n// if last one is own, then all properties are own\nfor(key in obj){}return key===undefined||hasOwn.call(obj,key);},isEmptyObject:function isEmptyObject(obj){var name;for(name in obj){return false;}return true;},type:function type(obj){if(obj==null){return obj+\"\";}// Support: Android<4.0, iOS<6 (functionish RegExp)\nreturn(typeof obj===\"undefined\"?\"undefined\":_typeof(obj))===\"object\"||typeof obj===\"function\"?class2type[toString.call(obj)]||\"object\":typeof obj===\"undefined\"?\"undefined\":_typeof(obj);},// Evaluates a script in a global context\nglobalEval:function globalEval(code){var script,indirect=eval;code=jQuery.trim(code);if(code){// If the code includes a valid, prologue position\n// strict mode pragma, execute code by injecting a\n// script tag into the document.\nif(code.indexOf(\"use strict\")===1){script=document.createElement(\"script\");script.text=code;document.head.appendChild(script).parentNode.removeChild(script);}else{// Otherwise, avoid the DOM node creation, insertion\n// and removal by using an indirect global eval\nindirect(code);}}},// Convert dashed to camelCase; used by the css and data modules\n// Support: IE9-11+\n// Microsoft forgot to hump their vendor prefix (#9572)\ncamelCase:function camelCase(string){return string.replace(rmsPrefix,\"ms-\").replace(rdashAlpha,fcamelCase);},nodeName:function nodeName(elem,name){return elem.nodeName&&elem.nodeName.toLowerCase()===name.toLowerCase();},each:function each(obj,callback){var length,i=0;if(isArrayLike(obj)){length=obj.length;for(;i<length;i++){if(callback.call(obj[i],i,obj[i])===false){break;}}}else{for(i in obj){if(callback.call(obj[i],i,obj[i])===false){break;}}}return obj;},// Support: Android<4.1\ntrim:function trim(text){return text==null?\"\":(text+\"\").replace(rtrim,\"\");},// results is for internal usage only\nmakeArray:function makeArray(arr,results){var ret=results||[];if(arr!=null){if(isArrayLike(Object(arr))){jQuery.merge(ret,typeof arr===\"string\"?[arr]:arr);}else{push.call(ret,arr);}}return ret;},inArray:function inArray(elem,arr,i){return arr==null?-1:indexOf.call(arr,elem,i);},merge:function merge(first,second){var len=+second.length,j=0,i=first.length;for(;j<len;j++){first[i++]=second[j];}first.length=i;return first;},grep:function grep(elems,callback,invert){var callbackInverse,matches=[],i=0,length=elems.length,callbackExpect=!invert;// Go through the array, only saving the items\n// that pass the validator function\nfor(;i<length;i++){callbackInverse=!callback(elems[i],i);if(callbackInverse!==callbackExpect){matches.push(elems[i]);}}return matches;},// arg is for internal usage only\nmap:function map(elems,callback,arg){var length,value,i=0,ret=[];// Go through the array, translating each of the items to their new values\nif(isArrayLike(elems)){length=elems.length;for(;i<length;i++){value=callback(elems[i],i,arg);if(value!=null){ret.push(value);}}// Go through every key on the object,\n}else{for(i in elems){value=callback(elems[i],i,arg);if(value!=null){ret.push(value);}}}// Flatten any nested arrays\nreturn concat.apply([],ret);},// A global GUID counter for objects\nguid:1,// Bind a function to a context, optionally partially applying any\n// arguments.\nproxy:function proxy(fn,context){var tmp,args,proxy;if(typeof context===\"string\"){tmp=fn[context];context=fn;fn=tmp;}// Quick check to determine if target is callable, in the spec\n// this throws a TypeError, but we will just return undefined.\nif(!jQuery.isFunction(fn)){return undefined;}// Simulated bind\nargs=_slice.call(arguments,2);proxy=function proxy(){return fn.apply(context||this,args.concat(_slice.call(arguments)));};// Set the guid of unique handler to the same of original handler, so it can be removed\nproxy.guid=fn.guid=fn.guid||jQuery.guid++;return proxy;},now:Date.now,// jQuery.support is not used in Core but other projects attach their\n// properties to it so it needs to exist.\nsupport:support});// JSHint would error on this code due to the Symbol not being defined in ES5.\n// Defining this global in .jshintrc would create a danger of using the global\n// unguarded in another place, it seems safer to just disable JSHint for these\n// three lines.\n/* jshint ignore: start */if(typeof Symbol===\"function\"){jQuery.fn[Symbol.iterator]=arr[Symbol.iterator];}/* jshint ignore: end */// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(i,name){class2type[\"[object \"+name+\"]\"]=name.toLowerCase();});function isArrayLike(obj){// Support: iOS 8.2 (not reproducible in simulator)\n// `in` check used to prevent JIT error (gh-2145)\n// hasOwn isn't used here due to false negatives\n// regarding Nodelist length in IE\nvar length=!!obj&&\"length\"in obj&&obj.length,type=jQuery.type(obj);if(type===\"function\"||jQuery.isWindow(obj)){return false;}return type===\"array\"||length===0||typeof length===\"number\"&&length>0&&length-1 in obj;}var Sizzle=/*!\n * Sizzle CSS Selector Engine v2.2.1\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2015-10-17\n */function(window){var i,support,Expr,getText,isXML,tokenize,compile,select,outermostContext,sortInput,hasDuplicate,// Local document vars\nsetDocument,document,docElem,documentIsHTML,rbuggyQSA,rbuggyMatches,matches,contains,// Instance-specific data\nexpando=\"sizzle\"+1*new Date(),preferredDoc=window.document,dirruns=0,done=0,classCache=createCache(),tokenCache=createCache(),compilerCache=createCache(),sortOrder=function sortOrder(a,b){if(a===b){hasDuplicate=true;}return 0;},// General-purpose constants\nMAX_NEGATIVE=1<<31,// Instance methods\nhasOwn={}.hasOwnProperty,arr=[],pop=arr.pop,push_native=arr.push,push=arr.push,slice=arr.slice,// Use a stripped-down indexOf as it's faster than native\n// http://jsperf.com/thor-indexof-vs-for/5\nindexOf=function indexOf(list,elem){var i=0,len=list.length;for(;i<len;i++){if(list[i]===elem){return i;}}return-1;},booleans=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",// Regular expressions\n// http://www.w3.org/TR/css3-selectors/#whitespace\nwhitespace=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\nidentifier=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\nattributes=\"\\\\[\"+whitespace+\"*(\"+identifier+\")(?:\"+whitespace+// Operator (capture 2)\n\"*([*^$|!~]?=)\"+whitespace+// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+identifier+\"))|)\"+whitespace+\"*\\\\]\",pseudos=\":(\"+identifier+\")(?:\\\\((\"+// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n// 1. quoted (capture 3; capture 4 or capture 5)\n\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\"+// 2. simple (capture 6)\n\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+attributes+\")*)|\"+// 3. anything else (capture 2)\n\".*\"+\")\\\\)|)\",// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\nrwhitespace=new RegExp(whitespace+\"+\",\"g\"),rtrim=new RegExp(\"^\"+whitespace+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+whitespace+\"+$\",\"g\"),rcomma=new RegExp(\"^\"+whitespace+\"*,\"+whitespace+\"*\"),rcombinators=new RegExp(\"^\"+whitespace+\"*([>+~]|\"+whitespace+\")\"+whitespace+\"*\"),rattributeQuotes=new RegExp(\"=\"+whitespace+\"*([^\\\\]'\\\"]*?)\"+whitespace+\"*\\\\]\",\"g\"),rpseudo=new RegExp(pseudos),ridentifier=new RegExp(\"^\"+identifier+\"$\"),matchExpr={\"ID\":new RegExp(\"^#(\"+identifier+\")\"),\"CLASS\":new RegExp(\"^\\\\.(\"+identifier+\")\"),\"TAG\":new RegExp(\"^(\"+identifier+\"|[*])\"),\"ATTR\":new RegExp(\"^\"+attributes),\"PSEUDO\":new RegExp(\"^\"+pseudos),\"CHILD\":new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+whitespace+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+whitespace+\"*(?:([+-]|)\"+whitespace+\"*(\\\\d+)|))\"+whitespace+\"*\\\\)|)\",\"i\"),\"bool\":new RegExp(\"^(?:\"+booleans+\")$\",\"i\"),// For use in libraries implementing .is()\n// We use this for POS matching in `select`\n\"needsContext\":new RegExp(\"^\"+whitespace+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+whitespace+\"*((?:-\\\\d)?\\\\d*)\"+whitespace+\"*\\\\)|)(?=[^-]|$)\",\"i\")},rinputs=/^(?:input|select|textarea|button)$/i,rheader=/^h\\d$/i,rnative=/^[^{]+\\{\\s*\\[native \\w/,// Easily-parseable/retrievable ID or TAG or CLASS selectors\nrquickExpr=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,rsibling=/[+~]/,rescape=/'|\\\\/g,// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\nrunescape=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+whitespace+\"?|(\"+whitespace+\")|.)\",\"ig\"),funescape=function funescape(_,escaped,escapedWhitespace){var high=\"0x\"+escaped-0x10000;// NaN means non-codepoint\n// Support: Firefox<24\n// Workaround erroneous numeric interpretation of +\"0x\"\nreturn high!==high||escapedWhitespace?escaped:high<0?// BMP codepoint\nString.fromCharCode(high+0x10000):// Supplemental Plane codepoint (surrogate pair)\nString.fromCharCode(high>>10|0xD800,high&0x3FF|0xDC00);},// Used for iframes\n// See setDocument()\n// Removing the function wrapper causes a \"Permission Denied\"\n// error in IE\nunloadHandler=function unloadHandler(){setDocument();};// Optimize for push.apply( _, NodeList )\ntry{push.apply(arr=slice.call(preferredDoc.childNodes),preferredDoc.childNodes);// Support: Android<4.0\n// Detect silently failing push.apply\narr[preferredDoc.childNodes.length].nodeType;}catch(e){push={apply:arr.length?// Leverage slice if possible\nfunction(target,els){push_native.apply(target,slice.call(els));}:// Support: IE<9\n// Otherwise append directly\nfunction(target,els){var j=target.length,i=0;// Can't trust NodeList.length\nwhile(target[j++]=els[i++]){}target.length=j-1;}};}function Sizzle(selector,context,results,seed){var m,i,elem,nid,nidselect,match,groups,newSelector,newContext=context&&context.ownerDocument,// nodeType defaults to 9, since context defaults to document\nnodeType=context?context.nodeType:9;results=results||[];// Return early from calls with invalid selector or context\nif(typeof selector!==\"string\"||!selector||nodeType!==1&&nodeType!==9&&nodeType!==11){return results;}// Try to shortcut find operations (as opposed to filters) in HTML documents\nif(!seed){if((context?context.ownerDocument||context:preferredDoc)!==document){setDocument(context);}context=context||document;if(documentIsHTML){// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n// (excepting DocumentFragment context, where the methods don't exist)\nif(nodeType!==11&&(match=rquickExpr.exec(selector))){// ID selector\nif(m=match[1]){// Document context\nif(nodeType===9){if(elem=context.getElementById(m)){// Support: IE, Opera, Webkit\n// TODO: identify versions\n// getElementById can match elements by name instead of ID\nif(elem.id===m){results.push(elem);return results;}}else{return results;}// Element context\n}else{// Support: IE, Opera, Webkit\n// TODO: identify versions\n// getElementById can match elements by name instead of ID\nif(newContext&&(elem=newContext.getElementById(m))&&contains(context,elem)&&elem.id===m){results.push(elem);return results;}}// Type selector\n}else if(match[2]){push.apply(results,context.getElementsByTagName(selector));return results;// Class selector\n}else if((m=match[3])&&support.getElementsByClassName&&context.getElementsByClassName){push.apply(results,context.getElementsByClassName(m));return results;}}// Take advantage of querySelectorAll\nif(support.qsa&&!compilerCache[selector+\" \"]&&(!rbuggyQSA||!rbuggyQSA.test(selector))){if(nodeType!==1){newContext=context;newSelector=selector;// qSA looks outside Element context, which is not what we want\n// Thanks to Andrew Dupont for this workaround technique\n// Support: IE <=8\n// Exclude object elements\n}else if(context.nodeName.toLowerCase()!==\"object\"){// Capture the context ID, setting it first if necessary\nif(nid=context.getAttribute(\"id\")){nid=nid.replace(rescape,\"\\\\$&\");}else{context.setAttribute(\"id\",nid=expando);}// Prefix every selector in the list\ngroups=tokenize(selector);i=groups.length;nidselect=ridentifier.test(nid)?\"#\"+nid:\"[id='\"+nid+\"']\";while(i--){groups[i]=nidselect+\" \"+toSelector(groups[i]);}newSelector=groups.join(\",\");// Expand context for sibling selectors\nnewContext=rsibling.test(selector)&&testContext(context.parentNode)||context;}if(newSelector){try{push.apply(results,newContext.querySelectorAll(newSelector));return results;}catch(qsaError){}finally{if(nid===expando){context.removeAttribute(\"id\");}}}}}}// All others\nreturn select(selector.replace(rtrim,\"$1\"),context,results,seed);}/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */function createCache(){var keys=[];function cache(key,value){// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\nif(keys.push(key+\" \")>Expr.cacheLength){// Only keep the most recent entries\ndelete cache[keys.shift()];}return cache[key+\" \"]=value;}return cache;}/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */function markFunction(fn){fn[expando]=true;return fn;}/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */function assert(fn){var div=document.createElement(\"div\");try{return!!fn(div);}catch(e){return false;}finally{// Remove from its parent by default\nif(div.parentNode){div.parentNode.removeChild(div);}// release memory in IE\ndiv=null;}}/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */function addHandle(attrs,handler){var arr=attrs.split(\"|\"),i=arr.length;while(i--){Expr.attrHandle[arr[i]]=handler;}}/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */function siblingCheck(a,b){var cur=b&&a,diff=cur&&a.nodeType===1&&b.nodeType===1&&(~b.sourceIndex||MAX_NEGATIVE)-(~a.sourceIndex||MAX_NEGATIVE);// Use IE sourceIndex if available on both nodes\nif(diff){return diff;}// Check if b follows a\nif(cur){while(cur=cur.nextSibling){if(cur===b){return-1;}}}return a?1:-1;}/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */function createInputPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return name===\"input\"&&elem.type===type;};}/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */function createButtonPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return(name===\"input\"||name===\"button\")&&elem.type===type;};}/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */function createPositionalPseudo(fn){return markFunction(function(argument){argument=+argument;return markFunction(function(seed,matches){var j,matchIndexes=fn([],seed.length,argument),i=matchIndexes.length;// Match elements found at the specified indexes\nwhile(i--){if(seed[j=matchIndexes[i]]){seed[j]=!(matches[j]=seed[j]);}}});});}/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */function testContext(context){return context&&typeof context.getElementsByTagName!==\"undefined\"&&context;}// Expose support vars for convenience\nsupport=Sizzle.support={};/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */isXML=Sizzle.isXML=function(elem){// documentElement is verified for cases where it doesn't yet exist\n// (such as loading iframes in IE - #4833)\nvar documentElement=elem&&(elem.ownerDocument||elem).documentElement;return documentElement?documentElement.nodeName!==\"HTML\":false;};/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */setDocument=Sizzle.setDocument=function(node){var hasCompare,parent,doc=node?node.ownerDocument||node:preferredDoc;// Return early if doc is invalid or already selected\nif(doc===document||doc.nodeType!==9||!doc.documentElement){return document;}// Update global variables\ndocument=doc;docElem=document.documentElement;documentIsHTML=!isXML(document);// Support: IE 9-11, Edge\n// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\nif((parent=document.defaultView)&&parent.top!==parent){// Support: IE 11\nif(parent.addEventListener){parent.addEventListener(\"unload\",unloadHandler,false);// Support: IE 9 - 10 only\n}else if(parent.attachEvent){parent.attachEvent(\"onunload\",unloadHandler);}}/* Attributes\n\t---------------------------------------------------------------------- */// Support: IE<8\n// Verify that getAttribute really returns attributes and not properties\n// (excepting IE8 booleans)\nsupport.attributes=assert(function(div){div.className=\"i\";return!div.getAttribute(\"className\");});/* getElement(s)By*\n\t---------------------------------------------------------------------- */// Check if getElementsByTagName(\"*\") returns only elements\nsupport.getElementsByTagName=assert(function(div){div.appendChild(document.createComment(\"\"));return!div.getElementsByTagName(\"*\").length;});// Support: IE<9\nsupport.getElementsByClassName=rnative.test(document.getElementsByClassName);// Support: IE<10\n// Check if getElementById returns elements by name\n// The broken getElementById methods don't pick up programatically-set names,\n// so use a roundabout getElementsByName test\nsupport.getById=assert(function(div){docElem.appendChild(div).id=expando;return!document.getElementsByName||!document.getElementsByName(expando).length;});// ID find and filter\nif(support.getById){Expr.find[\"ID\"]=function(id,context){if(typeof context.getElementById!==\"undefined\"&&documentIsHTML){var m=context.getElementById(id);return m?[m]:[];}};Expr.filter[\"ID\"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){return elem.getAttribute(\"id\")===attrId;};};}else{// Support: IE6/7\n// getElementById is not reliable as a find shortcut\ndelete Expr.find[\"ID\"];Expr.filter[\"ID\"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){var node=typeof elem.getAttributeNode!==\"undefined\"&&elem.getAttributeNode(\"id\");return node&&node.value===attrId;};};}// Tag\nExpr.find[\"TAG\"]=support.getElementsByTagName?function(tag,context){if(typeof context.getElementsByTagName!==\"undefined\"){return context.getElementsByTagName(tag);// DocumentFragment nodes don't have gEBTN\n}else if(support.qsa){return context.querySelectorAll(tag);}}:function(tag,context){var elem,tmp=[],i=0,// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\nresults=context.getElementsByTagName(tag);// Filter out possible comments\nif(tag===\"*\"){while(elem=results[i++]){if(elem.nodeType===1){tmp.push(elem);}}return tmp;}return results;};// Class\nExpr.find[\"CLASS\"]=support.getElementsByClassName&&function(className,context){if(typeof context.getElementsByClassName!==\"undefined\"&&documentIsHTML){return context.getElementsByClassName(className);}};/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */// QSA and matchesSelector support\n// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\nrbuggyMatches=[];// qSa(:focus) reports false when true (Chrome 21)\n// We allow this because of a bug in IE8/9 that throws an error\n// whenever `document.activeElement` is accessed on an iframe\n// So, we allow :focus to pass through QSA all the time to avoid the IE error\n// See http://bugs.jquery.com/ticket/13378\nrbuggyQSA=[];if(support.qsa=rnative.test(document.querySelectorAll)){// Build QSA regex\n// Regex strategy adopted from Diego Perini\nassert(function(div){// Select is set to empty string on purpose\n// This is to test IE's treatment of not explicitly\n// setting a boolean content attribute,\n// since its presence should be enough\n// http://bugs.jquery.com/ticket/12359\ndocElem.appendChild(div).innerHTML=\"<a id='\"+expando+\"'></a>\"+\"<select id='\"+expando+\"-\\r\\\\' msallowcapture=''>\"+\"<option selected=''></option></select>\";// Support: IE8, Opera 11-12.16\n// Nothing should be selected when empty strings follow ^= or $= or *=\n// The test attribute must be unknown in Opera but \"safe\" for WinRT\n// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\nif(div.querySelectorAll(\"[msallowcapture^='']\").length){rbuggyQSA.push(\"[*^$]=\"+whitespace+\"*(?:''|\\\"\\\")\");}// Support: IE8\n// Boolean attributes and \"value\" are not treated correctly\nif(!div.querySelectorAll(\"[selected]\").length){rbuggyQSA.push(\"\\\\[\"+whitespace+\"*(?:value|\"+booleans+\")\");}// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\nif(!div.querySelectorAll(\"[id~=\"+expando+\"-]\").length){rbuggyQSA.push(\"~=\");}// Webkit/Opera - :checked should return selected option elements\n// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n// IE8 throws error here and will not see later tests\nif(!div.querySelectorAll(\":checked\").length){rbuggyQSA.push(\":checked\");}// Support: Safari 8+, iOS 8+\n// https://bugs.webkit.org/show_bug.cgi?id=136851\n// In-page `selector#id sibing-combinator selector` fails\nif(!div.querySelectorAll(\"a#\"+expando+\"+*\").length){rbuggyQSA.push(\".#.+[+~]\");}});assert(function(div){// Support: Windows 8 Native Apps\n// The type and name attributes are restricted during .innerHTML assignment\nvar input=document.createElement(\"input\");input.setAttribute(\"type\",\"hidden\");div.appendChild(input).setAttribute(\"name\",\"D\");// Support: IE8\n// Enforce case-sensitivity of name attribute\nif(div.querySelectorAll(\"[name=d]\").length){rbuggyQSA.push(\"name\"+whitespace+\"*[*^$|!~]?=\");}// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n// IE8 throws error here and will not see later tests\nif(!div.querySelectorAll(\":enabled\").length){rbuggyQSA.push(\":enabled\",\":disabled\");}// Opera 10-11 does not throw on post-comma invalid pseudos\ndiv.querySelectorAll(\"*,:x\");rbuggyQSA.push(\",.*:\");});}if(support.matchesSelector=rnative.test(matches=docElem.matches||docElem.webkitMatchesSelector||docElem.mozMatchesSelector||docElem.oMatchesSelector||docElem.msMatchesSelector)){assert(function(div){// Check to see if it's possible to do matchesSelector\n// on a disconnected node (IE 9)\nsupport.disconnectedMatch=matches.call(div,\"div\");// This should fail with an exception\n// Gecko does not error, returns false instead\nmatches.call(div,\"[s!='']:x\");rbuggyMatches.push(\"!=\",pseudos);});}rbuggyQSA=rbuggyQSA.length&&new RegExp(rbuggyQSA.join(\"|\"));rbuggyMatches=rbuggyMatches.length&&new RegExp(rbuggyMatches.join(\"|\"));/* Contains\n\t---------------------------------------------------------------------- */hasCompare=rnative.test(docElem.compareDocumentPosition);// Element contains another\n// Purposefully self-exclusive\n// As in, an element does not contain itself\ncontains=hasCompare||rnative.test(docElem.contains)?function(a,b){var adown=a.nodeType===9?a.documentElement:a,bup=b&&b.parentNode;return a===bup||!!(bup&&bup.nodeType===1&&(adown.contains?adown.contains(bup):a.compareDocumentPosition&&a.compareDocumentPosition(bup)&16));}:function(a,b){if(b){while(b=b.parentNode){if(b===a){return true;}}}return false;};/* Sorting\n\t---------------------------------------------------------------------- */// Document order sorting\nsortOrder=hasCompare?function(a,b){// Flag for duplicate removal\nif(a===b){hasDuplicate=true;return 0;}// Sort on method existence if only one input has compareDocumentPosition\nvar compare=!a.compareDocumentPosition-!b.compareDocumentPosition;if(compare){return compare;}// Calculate position if both inputs belong to the same document\ncompare=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):// Otherwise we know they are disconnected\n1;// Disconnected nodes\nif(compare&1||!support.sortDetached&&b.compareDocumentPosition(a)===compare){// Choose the first element that is related to our preferred document\nif(a===document||a.ownerDocument===preferredDoc&&contains(preferredDoc,a)){return-1;}if(b===document||b.ownerDocument===preferredDoc&&contains(preferredDoc,b)){return 1;}// Maintain original order\nreturn sortInput?indexOf(sortInput,a)-indexOf(sortInput,b):0;}return compare&4?-1:1;}:function(a,b){// Exit early if the nodes are identical\nif(a===b){hasDuplicate=true;return 0;}var cur,i=0,aup=a.parentNode,bup=b.parentNode,ap=[a],bp=[b];// Parentless nodes are either documents or disconnected\nif(!aup||!bup){return a===document?-1:b===document?1:aup?-1:bup?1:sortInput?indexOf(sortInput,a)-indexOf(sortInput,b):0;// If the nodes are siblings, we can do a quick check\n}else if(aup===bup){return siblingCheck(a,b);}// Otherwise we need full lists of their ancestors for comparison\ncur=a;while(cur=cur.parentNode){ap.unshift(cur);}cur=b;while(cur=cur.parentNode){bp.unshift(cur);}// Walk down the tree looking for a discrepancy\nwhile(ap[i]===bp[i]){i++;}return i?// Do a sibling check if the nodes have a common ancestor\nsiblingCheck(ap[i],bp[i]):// Otherwise nodes in our document sort first\nap[i]===preferredDoc?-1:bp[i]===preferredDoc?1:0;};return document;};Sizzle.matches=function(expr,elements){return Sizzle(expr,null,null,elements);};Sizzle.matchesSelector=function(elem,expr){// Set document vars if needed\nif((elem.ownerDocument||elem)!==document){setDocument(elem);}// Make sure that attribute selectors are quoted\nexpr=expr.replace(rattributeQuotes,\"='$1']\");if(support.matchesSelector&&documentIsHTML&&!compilerCache[expr+\" \"]&&(!rbuggyMatches||!rbuggyMatches.test(expr))&&(!rbuggyQSA||!rbuggyQSA.test(expr))){try{var ret=matches.call(elem,expr);// IE 9's matchesSelector returns false on disconnected nodes\nif(ret||support.disconnectedMatch||// As well, disconnected nodes are said to be in a document\n// fragment in IE 9\nelem.document&&elem.document.nodeType!==11){return ret;}}catch(e){}}return Sizzle(expr,document,null,[elem]).length>0;};Sizzle.contains=function(context,elem){// Set document vars if needed\nif((context.ownerDocument||context)!==document){setDocument(context);}return contains(context,elem);};Sizzle.attr=function(elem,name){// Set document vars if needed\nif((elem.ownerDocument||elem)!==document){setDocument(elem);}var fn=Expr.attrHandle[name.toLowerCase()],// Don't get fooled by Object.prototype properties (jQuery #13807)\nval=fn&&hasOwn.call(Expr.attrHandle,name.toLowerCase())?fn(elem,name,!documentIsHTML):undefined;return val!==undefined?val:support.attributes||!documentIsHTML?elem.getAttribute(name):(val=elem.getAttributeNode(name))&&val.specified?val.value:null;};Sizzle.error=function(msg){throw new Error(\"Syntax error, unrecognized expression: \"+msg);};/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */Sizzle.uniqueSort=function(results){var elem,duplicates=[],j=0,i=0;// Unless we *know* we can detect duplicates, assume their presence\nhasDuplicate=!support.detectDuplicates;sortInput=!support.sortStable&&results.slice(0);results.sort(sortOrder);if(hasDuplicate){while(elem=results[i++]){if(elem===results[i]){j=duplicates.push(i);}}while(j--){results.splice(duplicates[j],1);}}// Clear input after sorting to release objects\n// See https://github.com/jquery/sizzle/pull/225\nsortInput=null;return results;};/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */getText=Sizzle.getText=function(elem){var node,ret=\"\",i=0,nodeType=elem.nodeType;if(!nodeType){// If no nodeType, this is expected to be an array\nwhile(node=elem[i++]){// Do not traverse comment nodes\nret+=getText(node);}}else if(nodeType===1||nodeType===9||nodeType===11){// Use textContent for elements\n// innerText usage removed for consistency of new lines (jQuery #11153)\nif(typeof elem.textContent===\"string\"){return elem.textContent;}else{// Traverse its children\nfor(elem=elem.firstChild;elem;elem=elem.nextSibling){ret+=getText(elem);}}}else if(nodeType===3||nodeType===4){return elem.nodeValue;}// Do not include comment or processing instruction nodes\nreturn ret;};Expr=Sizzle.selectors={// Can be adjusted by the user\ncacheLength:50,createPseudo:markFunction,match:matchExpr,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:true},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:true},\"~\":{dir:\"previousSibling\"}},preFilter:{\"ATTR\":function ATTR(match){match[1]=match[1].replace(runescape,funescape);// Move the given value to match[3] whether quoted or unquoted\nmatch[3]=(match[3]||match[4]||match[5]||\"\").replace(runescape,funescape);if(match[2]===\"~=\"){match[3]=\" \"+match[3]+\" \";}return match.slice(0,4);},\"CHILD\":function CHILD(match){/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/match[1]=match[1].toLowerCase();if(match[1].slice(0,3)===\"nth\"){// nth-* requires argument\nif(!match[3]){Sizzle.error(match[0]);}// numeric x and y parameters for Expr.filter.CHILD\n// remember that false/true cast respectively to 0/1\nmatch[4]=+(match[4]?match[5]+(match[6]||1):2*(match[3]===\"even\"||match[3]===\"odd\"));match[5]=+(match[7]+match[8]||match[3]===\"odd\");// other types prohibit arguments\n}else if(match[3]){Sizzle.error(match[0]);}return match;},\"PSEUDO\":function PSEUDO(match){var excess,unquoted=!match[6]&&match[2];if(matchExpr[\"CHILD\"].test(match[0])){return null;}// Accept quoted arguments as-is\nif(match[3]){match[2]=match[4]||match[5]||\"\";// Strip excess characters from unquoted arguments\n}else if(unquoted&&rpseudo.test(unquoted)&&(// Get excess from tokenize (recursively)\nexcess=tokenize(unquoted,true))&&(// advance to the next closing parenthesis\nexcess=unquoted.indexOf(\")\",unquoted.length-excess)-unquoted.length)){// excess is a negative index\nmatch[0]=match[0].slice(0,excess);match[2]=unquoted.slice(0,excess);}// Return only captures needed by the pseudo filter method (type and argument)\nreturn match.slice(0,3);}},filter:{\"TAG\":function TAG(nodeNameSelector){var nodeName=nodeNameSelector.replace(runescape,funescape).toLowerCase();return nodeNameSelector===\"*\"?function(){return true;}:function(elem){return elem.nodeName&&elem.nodeName.toLowerCase()===nodeName;};},\"CLASS\":function CLASS(className){var pattern=classCache[className+\" \"];return pattern||(pattern=new RegExp(\"(^|\"+whitespace+\")\"+className+\"(\"+whitespace+\"|$)\"))&&classCache(className,function(elem){return pattern.test(typeof elem.className===\"string\"&&elem.className||typeof elem.getAttribute!==\"undefined\"&&elem.getAttribute(\"class\")||\"\");});},\"ATTR\":function ATTR(name,operator,check){return function(elem){var result=Sizzle.attr(elem,name);if(result==null){return operator===\"!=\";}if(!operator){return true;}result+=\"\";return operator===\"=\"?result===check:operator===\"!=\"?result!==check:operator===\"^=\"?check&&result.indexOf(check)===0:operator===\"*=\"?check&&result.indexOf(check)>-1:operator===\"$=\"?check&&result.slice(-check.length)===check:operator===\"~=\"?(\" \"+result.replace(rwhitespace,\" \")+\" \").indexOf(check)>-1:operator===\"|=\"?result===check||result.slice(0,check.length+1)===check+\"-\":false;};},\"CHILD\":function CHILD(type,what,argument,first,last){var simple=type.slice(0,3)!==\"nth\",forward=type.slice(-4)!==\"last\",ofType=what===\"of-type\";return first===1&&last===0?// Shortcut for :nth-*(n)\nfunction(elem){return!!elem.parentNode;}:function(elem,context,xml){var cache,uniqueCache,outerCache,node,nodeIndex,start,dir=simple!==forward?\"nextSibling\":\"previousSibling\",parent=elem.parentNode,name=ofType&&elem.nodeName.toLowerCase(),useCache=!xml&&!ofType,diff=false;if(parent){// :(first|last|only)-(child|of-type)\nif(simple){while(dir){node=elem;while(node=node[dir]){if(ofType?node.nodeName.toLowerCase()===name:node.nodeType===1){return false;}}// Reverse direction for :only-* (if we haven't yet done so)\nstart=dir=type===\"only\"&&!start&&\"nextSibling\";}return true;}start=[forward?parent.firstChild:parent.lastChild];// non-xml :nth-child(...) stores cache data on `parent`\nif(forward&&useCache){// Seek `elem` from a previously-cached index\n// ...in a gzip-friendly way\nnode=parent;outerCache=node[expando]||(node[expando]={});// Support: IE <9 only\n// Defend against cloned attroperties (jQuery gh-1709)\nuniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});cache=uniqueCache[type]||[];nodeIndex=cache[0]===dirruns&&cache[1];diff=nodeIndex&&cache[2];node=nodeIndex&&parent.childNodes[nodeIndex];while(node=++nodeIndex&&node&&node[dir]||(// Fallback to seeking `elem` from the start\ndiff=nodeIndex=0)||start.pop()){// When found, cache indexes on `parent` and break\nif(node.nodeType===1&&++diff&&node===elem){uniqueCache[type]=[dirruns,nodeIndex,diff];break;}}}else{// Use previously-cached element index if available\nif(useCache){// ...in a gzip-friendly way\nnode=elem;outerCache=node[expando]||(node[expando]={});// Support: IE <9 only\n// Defend against cloned attroperties (jQuery gh-1709)\nuniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});cache=uniqueCache[type]||[];nodeIndex=cache[0]===dirruns&&cache[1];diff=nodeIndex;}// xml :nth-child(...)\n// or :nth-last-child(...) or :nth(-last)?-of-type(...)\nif(diff===false){// Use the same loop as above to seek `elem` from the start\nwhile(node=++nodeIndex&&node&&node[dir]||(diff=nodeIndex=0)||start.pop()){if((ofType?node.nodeName.toLowerCase()===name:node.nodeType===1)&&++diff){// Cache the index of each encountered element\nif(useCache){outerCache=node[expando]||(node[expando]={});// Support: IE <9 only\n// Defend against cloned attroperties (jQuery gh-1709)\nuniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});uniqueCache[type]=[dirruns,diff];}if(node===elem){break;}}}}}// Incorporate the offset, then check against cycle size\ndiff-=last;return diff===first||diff%first===0&&diff/first>=0;}};},\"PSEUDO\":function PSEUDO(pseudo,argument){// pseudo-class names are case-insensitive\n// http://www.w3.org/TR/selectors/#pseudo-classes\n// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n// Remember that setFilters inherits from pseudos\nvar args,fn=Expr.pseudos[pseudo]||Expr.setFilters[pseudo.toLowerCase()]||Sizzle.error(\"unsupported pseudo: \"+pseudo);// The user may use createPseudo to indicate that\n// arguments are needed to create the filter function\n// just as Sizzle does\nif(fn[expando]){return fn(argument);}// But maintain support for old signatures\nif(fn.length>1){args=[pseudo,pseudo,\"\",argument];return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())?markFunction(function(seed,matches){var idx,matched=fn(seed,argument),i=matched.length;while(i--){idx=indexOf(seed,matched[i]);seed[idx]=!(matches[idx]=matched[i]);}}):function(elem){return fn(elem,0,args);};}return fn;}},pseudos:{// Potentially complex pseudos\n\"not\":markFunction(function(selector){// Trim the selector passed to compile\n// to avoid treating leading and trailing\n// spaces as combinators\nvar input=[],results=[],matcher=compile(selector.replace(rtrim,\"$1\"));return matcher[expando]?markFunction(function(seed,matches,context,xml){var elem,unmatched=matcher(seed,null,xml,[]),i=seed.length;// Match elements unmatched by `matcher`\nwhile(i--){if(elem=unmatched[i]){seed[i]=!(matches[i]=elem);}}}):function(elem,context,xml){input[0]=elem;matcher(input,null,xml,results);// Don't keep the element (issue #299)\ninput[0]=null;return!results.pop();};}),\"has\":markFunction(function(selector){return function(elem){return Sizzle(selector,elem).length>0;};}),\"contains\":markFunction(function(text){text=text.replace(runescape,funescape);return function(elem){return(elem.textContent||elem.innerText||getText(elem)).indexOf(text)>-1;};}),// \"Whether an element is represented by a :lang() selector\n// is based solely on the element's language value\n// being equal to the identifier C,\n// or beginning with the identifier C immediately followed by \"-\".\n// The matching of C against the element's language value is performed case-insensitively.\n// The identifier C does not have to be a valid language name.\"\n// http://www.w3.org/TR/selectors/#lang-pseudo\n\"lang\":markFunction(function(lang){// lang value must be a valid identifier\nif(!ridentifier.test(lang||\"\")){Sizzle.error(\"unsupported lang: \"+lang);}lang=lang.replace(runescape,funescape).toLowerCase();return function(elem){var elemLang;do{if(elemLang=documentIsHTML?elem.lang:elem.getAttribute(\"xml:lang\")||elem.getAttribute(\"lang\")){elemLang=elemLang.toLowerCase();return elemLang===lang||elemLang.indexOf(lang+\"-\")===0;}}while((elem=elem.parentNode)&&elem.nodeType===1);return false;};}),// Miscellaneous\n\"target\":function target(elem){var hash=window.location&&window.location.hash;return hash&&hash.slice(1)===elem.id;},\"root\":function root(elem){return elem===docElem;},\"focus\":function focus(elem){return elem===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(elem.type||elem.href||~elem.tabIndex);},// Boolean properties\n\"enabled\":function enabled(elem){return elem.disabled===false;},\"disabled\":function disabled(elem){return elem.disabled===true;},\"checked\":function checked(elem){// In CSS3, :checked should return both checked and selected elements\n// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\nvar nodeName=elem.nodeName.toLowerCase();return nodeName===\"input\"&&!!elem.checked||nodeName===\"option\"&&!!elem.selected;},\"selected\":function selected(elem){// Accessing this property makes selected-by-default\n// options in Safari work properly\nif(elem.parentNode){elem.parentNode.selectedIndex;}return elem.selected===true;},// Contents\n\"empty\":function empty(elem){// http://www.w3.org/TR/selectors/#empty-pseudo\n// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n//   but not by others (comment: 8; processing instruction: 7; etc.)\n// nodeType < 6 works because attributes (2) do not appear as children\nfor(elem=elem.firstChild;elem;elem=elem.nextSibling){if(elem.nodeType<6){return false;}}return true;},\"parent\":function parent(elem){return!Expr.pseudos[\"empty\"](elem);},// Element/input types\n\"header\":function header(elem){return rheader.test(elem.nodeName);},\"input\":function input(elem){return rinputs.test(elem.nodeName);},\"button\":function button(elem){var name=elem.nodeName.toLowerCase();return name===\"input\"&&elem.type===\"button\"||name===\"button\";},\"text\":function text(elem){var attr;return elem.nodeName.toLowerCase()===\"input\"&&elem.type===\"text\"&&(// Support: IE<8\n// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n(attr=elem.getAttribute(\"type\"))==null||attr.toLowerCase()===\"text\");},// Position-in-collection\n\"first\":createPositionalPseudo(function(){return[0];}),\"last\":createPositionalPseudo(function(matchIndexes,length){return[length-1];}),\"eq\":createPositionalPseudo(function(matchIndexes,length,argument){return[argument<0?argument+length:argument];}),\"even\":createPositionalPseudo(function(matchIndexes,length){var i=0;for(;i<length;i+=2){matchIndexes.push(i);}return matchIndexes;}),\"odd\":createPositionalPseudo(function(matchIndexes,length){var i=1;for(;i<length;i+=2){matchIndexes.push(i);}return matchIndexes;}),\"lt\":createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument;for(;--i>=0;){matchIndexes.push(i);}return matchIndexes;}),\"gt\":createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument;for(;++i<length;){matchIndexes.push(i);}return matchIndexes;})}};Expr.pseudos[\"nth\"]=Expr.pseudos[\"eq\"];// Add button/input type pseudos\nfor(i in{radio:true,checkbox:true,file:true,password:true,image:true}){Expr.pseudos[i]=createInputPseudo(i);}for(i in{submit:true,reset:true}){Expr.pseudos[i]=createButtonPseudo(i);}// Easy API for creating new setFilters\nfunction setFilters(){}setFilters.prototype=Expr.filters=Expr.pseudos;Expr.setFilters=new setFilters();tokenize=Sizzle.tokenize=function(selector,parseOnly){var matched,match,tokens,type,soFar,groups,preFilters,cached=tokenCache[selector+\" \"];if(cached){return parseOnly?0:cached.slice(0);}soFar=selector;groups=[];preFilters=Expr.preFilter;while(soFar){// Comma and first run\nif(!matched||(match=rcomma.exec(soFar))){if(match){// Don't consume trailing commas as valid\nsoFar=soFar.slice(match[0].length)||soFar;}groups.push(tokens=[]);}matched=false;// Combinators\nif(match=rcombinators.exec(soFar)){matched=match.shift();tokens.push({value:matched,// Cast descendant combinators to space\ntype:match[0].replace(rtrim,\" \")});soFar=soFar.slice(matched.length);}// Filters\nfor(type in Expr.filter){if((match=matchExpr[type].exec(soFar))&&(!preFilters[type]||(match=preFilters[type](match)))){matched=match.shift();tokens.push({value:matched,type:type,matches:match});soFar=soFar.slice(matched.length);}}if(!matched){break;}}// Return the length of the invalid excess\n// if we're just parsing\n// Otherwise, throw an error or return tokens\nreturn parseOnly?soFar.length:soFar?Sizzle.error(selector):// Cache the tokens\ntokenCache(selector,groups).slice(0);};function toSelector(tokens){var i=0,len=tokens.length,selector=\"\";for(;i<len;i++){selector+=tokens[i].value;}return selector;}function addCombinator(matcher,combinator,base){var dir=combinator.dir,checkNonElements=base&&dir===\"parentNode\",doneName=done++;return combinator.first?// Check against closest ancestor/preceding element\nfunction(elem,context,xml){while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){return matcher(elem,context,xml);}}}:// Check against all ancestor/preceding elements\nfunction(elem,context,xml){var oldCache,uniqueCache,outerCache,newCache=[dirruns,doneName];// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\nif(xml){while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){if(matcher(elem,context,xml)){return true;}}}}else{while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){outerCache=elem[expando]||(elem[expando]={});// Support: IE <9 only\n// Defend against cloned attroperties (jQuery gh-1709)\nuniqueCache=outerCache[elem.uniqueID]||(outerCache[elem.uniqueID]={});if((oldCache=uniqueCache[dir])&&oldCache[0]===dirruns&&oldCache[1]===doneName){// Assign to newCache so results back-propagate to previous elements\nreturn newCache[2]=oldCache[2];}else{// Reuse newcache so results back-propagate to previous elements\nuniqueCache[dir]=newCache;// A match means we're done; a fail means we have to keep checking\nif(newCache[2]=matcher(elem,context,xml)){return true;}}}}}};}function elementMatcher(matchers){return matchers.length>1?function(elem,context,xml){var i=matchers.length;while(i--){if(!matchers[i](elem,context,xml)){return false;}}return true;}:matchers[0];}function multipleContexts(selector,contexts,results){var i=0,len=contexts.length;for(;i<len;i++){Sizzle(selector,contexts[i],results);}return results;}function condense(unmatched,map,filter,context,xml){var elem,newUnmatched=[],i=0,len=unmatched.length,mapped=map!=null;for(;i<len;i++){if(elem=unmatched[i]){if(!filter||filter(elem,context,xml)){newUnmatched.push(elem);if(mapped){map.push(i);}}}}return newUnmatched;}function setMatcher(preFilter,selector,matcher,postFilter,postFinder,postSelector){if(postFilter&&!postFilter[expando]){postFilter=setMatcher(postFilter);}if(postFinder&&!postFinder[expando]){postFinder=setMatcher(postFinder,postSelector);}return markFunction(function(seed,results,context,xml){var temp,i,elem,preMap=[],postMap=[],preexisting=results.length,// Get initial elements from seed or context\nelems=seed||multipleContexts(selector||\"*\",context.nodeType?[context]:context,[]),// Prefilter to get matcher input, preserving a map for seed-results synchronization\nmatcherIn=preFilter&&(seed||!selector)?condense(elems,preMap,preFilter,context,xml):elems,matcherOut=matcher?// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\npostFinder||(seed?preFilter:preexisting||postFilter)?// ...intermediate processing is necessary\n[]:// ...otherwise use results directly\nresults:matcherIn;// Find primary matches\nif(matcher){matcher(matcherIn,matcherOut,context,xml);}// Apply postFilter\nif(postFilter){temp=condense(matcherOut,postMap);postFilter(temp,[],context,xml);// Un-match failing elements by moving them back to matcherIn\ni=temp.length;while(i--){if(elem=temp[i]){matcherOut[postMap[i]]=!(matcherIn[postMap[i]]=elem);}}}if(seed){if(postFinder||preFilter){if(postFinder){// Get the final matcherOut by condensing this intermediate into postFinder contexts\ntemp=[];i=matcherOut.length;while(i--){if(elem=matcherOut[i]){// Restore matcherIn since elem is not yet a final match\ntemp.push(matcherIn[i]=elem);}}postFinder(null,matcherOut=[],temp,xml);}// Move matched elements from seed to results to keep them synchronized\ni=matcherOut.length;while(i--){if((elem=matcherOut[i])&&(temp=postFinder?indexOf(seed,elem):preMap[i])>-1){seed[temp]=!(results[temp]=elem);}}}// Add elements to results, through postFinder if defined\n}else{matcherOut=condense(matcherOut===results?matcherOut.splice(preexisting,matcherOut.length):matcherOut);if(postFinder){postFinder(null,results,matcherOut,xml);}else{push.apply(results,matcherOut);}}});}function matcherFromTokens(tokens){var checkContext,matcher,j,len=tokens.length,leadingRelative=Expr.relative[tokens[0].type],implicitRelative=leadingRelative||Expr.relative[\" \"],i=leadingRelative?1:0,// The foundational matcher ensures that elements are reachable from top-level context(s)\nmatchContext=addCombinator(function(elem){return elem===checkContext;},implicitRelative,true),matchAnyContext=addCombinator(function(elem){return indexOf(checkContext,elem)>-1;},implicitRelative,true),matchers=[function(elem,context,xml){var ret=!leadingRelative&&(xml||context!==outermostContext)||((checkContext=context).nodeType?matchContext(elem,context,xml):matchAnyContext(elem,context,xml));// Avoid hanging onto element (issue #299)\ncheckContext=null;return ret;}];for(;i<len;i++){if(matcher=Expr.relative[tokens[i].type]){matchers=[addCombinator(elementMatcher(matchers),matcher)];}else{matcher=Expr.filter[tokens[i].type].apply(null,tokens[i].matches);// Return special upon seeing a positional matcher\nif(matcher[expando]){// Find the next relative operator (if any) for proper handling\nj=++i;for(;j<len;j++){if(Expr.relative[tokens[j].type]){break;}}return setMatcher(i>1&&elementMatcher(matchers),i>1&&toSelector(// If the preceding token was a descendant combinator, insert an implicit any-element `*`\ntokens.slice(0,i-1).concat({value:tokens[i-2].type===\" \"?\"*\":\"\"})).replace(rtrim,\"$1\"),matcher,i<j&&matcherFromTokens(tokens.slice(i,j)),j<len&&matcherFromTokens(tokens=tokens.slice(j)),j<len&&toSelector(tokens));}matchers.push(matcher);}}return elementMatcher(matchers);}function matcherFromGroupMatchers(elementMatchers,setMatchers){var bySet=setMatchers.length>0,byElement=elementMatchers.length>0,superMatcher=function superMatcher(seed,context,xml,results,outermost){var elem,j,matcher,matchedCount=0,i=\"0\",unmatched=seed&&[],setMatched=[],contextBackup=outermostContext,// We must always have either seed elements or outermost context\nelems=seed||byElement&&Expr.find[\"TAG\"](\"*\",outermost),// Use integer dirruns iff this is the outermost matcher\ndirrunsUnique=dirruns+=contextBackup==null?1:Math.random()||0.1,len=elems.length;if(outermost){outermostContext=context===document||context||outermost;}// Add elements passing elementMatchers directly to results\n// Support: IE<9, Safari\n// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\nfor(;i!==len&&(elem=elems[i])!=null;i++){if(byElement&&elem){j=0;if(!context&&elem.ownerDocument!==document){setDocument(elem);xml=!documentIsHTML;}while(matcher=elementMatchers[j++]){if(matcher(elem,context||document,xml)){results.push(elem);break;}}if(outermost){dirruns=dirrunsUnique;}}// Track unmatched elements for set filters\nif(bySet){// They will have gone through all possible matchers\nif(elem=!matcher&&elem){matchedCount--;}// Lengthen the array for every element, matched or not\nif(seed){unmatched.push(elem);}}}// `i` is now the count of elements visited above, and adding it to `matchedCount`\n// makes the latter nonnegative.\nmatchedCount+=i;// Apply set filters to unmatched elements\n// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n// no element matchers and no seed.\n// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n// numerically zero.\nif(bySet&&i!==matchedCount){j=0;while(matcher=setMatchers[j++]){matcher(unmatched,setMatched,context,xml);}if(seed){// Reintegrate element matches to eliminate the need for sorting\nif(matchedCount>0){while(i--){if(!(unmatched[i]||setMatched[i])){setMatched[i]=pop.call(results);}}}// Discard index placeholder values to get only actual matches\nsetMatched=condense(setMatched);}// Add matches to results\npush.apply(results,setMatched);// Seedless set matches succeeding multiple successful matchers stipulate sorting\nif(outermost&&!seed&&setMatched.length>0&&matchedCount+setMatchers.length>1){Sizzle.uniqueSort(results);}}// Override manipulation of globals by nested matchers\nif(outermost){dirruns=dirrunsUnique;outermostContext=contextBackup;}return unmatched;};return bySet?markFunction(superMatcher):superMatcher;}compile=Sizzle.compile=function(selector,match/* Internal Use Only */){var i,setMatchers=[],elementMatchers=[],cached=compilerCache[selector+\" \"];if(!cached){// Generate a function of recursive functions that can be used to check each element\nif(!match){match=tokenize(selector);}i=match.length;while(i--){cached=matcherFromTokens(match[i]);if(cached[expando]){setMatchers.push(cached);}else{elementMatchers.push(cached);}}// Cache the compiled function\ncached=compilerCache(selector,matcherFromGroupMatchers(elementMatchers,setMatchers));// Save selector and tokenization\ncached.selector=selector;}return cached;};/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */select=Sizzle.select=function(selector,context,results,seed){var i,tokens,token,type,find,compiled=typeof selector===\"function\"&&selector,match=!seed&&tokenize(selector=compiled.selector||selector);results=results||[];// Try to minimize operations if there is only one selector in the list and no seed\n// (the latter of which guarantees us context)\nif(match.length===1){// Reduce context if the leading compound selector is an ID\ntokens=match[0]=match[0].slice(0);if(tokens.length>2&&(token=tokens[0]).type===\"ID\"&&support.getById&&context.nodeType===9&&documentIsHTML&&Expr.relative[tokens[1].type]){context=(Expr.find[\"ID\"](token.matches[0].replace(runescape,funescape),context)||[])[0];if(!context){return results;// Precompiled matchers will still verify ancestry, so step up a level\n}else if(compiled){context=context.parentNode;}selector=selector.slice(tokens.shift().value.length);}// Fetch a seed set for right-to-left matching\ni=matchExpr[\"needsContext\"].test(selector)?0:tokens.length;while(i--){token=tokens[i];// Abort if we hit a combinator\nif(Expr.relative[type=token.type]){break;}if(find=Expr.find[type]){// Search, expanding context for leading sibling combinators\nif(seed=find(token.matches[0].replace(runescape,funescape),rsibling.test(tokens[0].type)&&testContext(context.parentNode)||context)){// If seed is empty or no tokens remain, we can return early\ntokens.splice(i,1);selector=seed.length&&toSelector(tokens);if(!selector){push.apply(results,seed);return results;}break;}}}}// Compile and execute a filtering function if one is not provided\n// Provide `match` to avoid retokenization if we modified the selector above\n(compiled||compile(selector,match))(seed,context,!documentIsHTML,results,!context||rsibling.test(selector)&&testContext(context.parentNode)||context);return results;};// One-time assignments\n// Sort stability\nsupport.sortStable=expando.split(\"\").sort(sortOrder).join(\"\")===expando;// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates=!!hasDuplicate;// Initialize against the default document\nsetDocument();// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached=assert(function(div1){// Should return 1, but returns 4 (following)\nreturn div1.compareDocumentPosition(document.createElement(\"div\"))&1;});// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif(!assert(function(div){div.innerHTML=\"<a href='#'></a>\";return div.firstChild.getAttribute(\"href\")===\"#\";})){addHandle(\"type|href|height|width\",function(elem,name,isXML){if(!isXML){return elem.getAttribute(name,name.toLowerCase()===\"type\"?1:2);}});}// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif(!support.attributes||!assert(function(div){div.innerHTML=\"<input/>\";div.firstChild.setAttribute(\"value\",\"\");return div.firstChild.getAttribute(\"value\")===\"\";})){addHandle(\"value\",function(elem,name,isXML){if(!isXML&&elem.nodeName.toLowerCase()===\"input\"){return elem.defaultValue;}});}// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif(!assert(function(div){return div.getAttribute(\"disabled\")==null;})){addHandle(booleans,function(elem,name,isXML){var val;if(!isXML){return elem[name]===true?name.toLowerCase():(val=elem.getAttributeNode(name))&&val.specified?val.value:null;}});}return Sizzle;}(window);jQuery.find=Sizzle;jQuery.expr=Sizzle.selectors;jQuery.expr[\":\"]=jQuery.expr.pseudos;jQuery.uniqueSort=jQuery.unique=Sizzle.uniqueSort;jQuery.text=Sizzle.getText;jQuery.isXMLDoc=Sizzle.isXML;jQuery.contains=Sizzle.contains;var dir=function dir(elem,_dir,until){var matched=[],truncate=until!==undefined;while((elem=elem[_dir])&&elem.nodeType!==9){if(elem.nodeType===1){if(truncate&&jQuery(elem).is(until)){break;}matched.push(elem);}}return matched;};var _siblings=function _siblings(n,elem){var matched=[];for(;n;n=n.nextSibling){if(n.nodeType===1&&n!==elem){matched.push(n);}}return matched;};var rneedsContext=jQuery.expr.match.needsContext;var rsingleTag=/^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/;var risSimple=/^.[^:#\\[\\.,]*$/;// Implement the identical functionality for filter and not\nfunction winnow(elements,qualifier,not){if(jQuery.isFunction(qualifier)){return jQuery.grep(elements,function(elem,i){/* jshint -W018 */return!!qualifier.call(elem,i,elem)!==not;});}if(qualifier.nodeType){return jQuery.grep(elements,function(elem){return elem===qualifier!==not;});}if(typeof qualifier===\"string\"){if(risSimple.test(qualifier)){return jQuery.filter(qualifier,elements,not);}qualifier=jQuery.filter(qualifier,elements);}return jQuery.grep(elements,function(elem){return indexOf.call(qualifier,elem)>-1!==not;});}jQuery.filter=function(expr,elems,not){var elem=elems[0];if(not){expr=\":not(\"+expr+\")\";}return elems.length===1&&elem.nodeType===1?jQuery.find.matchesSelector(elem,expr)?[elem]:[]:jQuery.find.matches(expr,jQuery.grep(elems,function(elem){return elem.nodeType===1;}));};jQuery.fn.extend({find:function find(selector){var i,len=this.length,ret=[],self=this;if(typeof selector!==\"string\"){return this.pushStack(jQuery(selector).filter(function(){for(i=0;i<len;i++){if(jQuery.contains(self[i],this)){return true;}}}));}for(i=0;i<len;i++){jQuery.find(selector,self[i],ret);}// Needed because $( selector, context ) becomes $( context ).find( selector )\nret=this.pushStack(len>1?jQuery.unique(ret):ret);ret.selector=this.selector?this.selector+\" \"+selector:selector;return ret;},filter:function filter(selector){return this.pushStack(winnow(this,selector||[],false));},not:function not(selector){return this.pushStack(winnow(this,selector||[],true));},is:function is(selector){return!!winnow(this,// If this is a positional/relative selector, check membership in the returned set\n// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\ntypeof selector===\"string\"&&rneedsContext.test(selector)?jQuery(selector):selector||[],false).length;}});// Initialize a jQuery object\n// A central reference to the root jQuery(document)\nvar rootjQuery,// A simple way to check for HTML strings\n// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n// Strict HTML recognition (#11290: must start with <)\nrquickExpr=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,init=jQuery.fn.init=function(selector,context,root){var match,elem;// HANDLE: $(\"\"), $(null), $(undefined), $(false)\nif(!selector){return this;}// Method init() accepts an alternate rootjQuery\n// so migrate can support jQuery.sub (gh-2101)\nroot=root||rootjQuery;// Handle HTML strings\nif(typeof selector===\"string\"){if(selector[0]===\"<\"&&selector[selector.length-1]===\">\"&&selector.length>=3){// Assume that strings that start and end with <> are HTML and skip the regex check\nmatch=[null,selector,null];}else{match=rquickExpr.exec(selector);}// Match html or make sure no context is specified for #id\nif(match&&(match[1]||!context)){// HANDLE: $(html) -> $(array)\nif(match[1]){context=context instanceof jQuery?context[0]:context;// Option to run scripts is true for back-compat\n// Intentionally let the error be thrown if parseHTML is not present\njQuery.merge(this,jQuery.parseHTML(match[1],context&&context.nodeType?context.ownerDocument||context:document,true));// HANDLE: $(html, props)\nif(rsingleTag.test(match[1])&&jQuery.isPlainObject(context)){for(match in context){// Properties of context are called as methods if possible\nif(jQuery.isFunction(this[match])){this[match](context[match]);// ...and otherwise set as attributes\n}else{this.attr(match,context[match]);}}}return this;// HANDLE: $(#id)\n}else{elem=document.getElementById(match[2]);// Support: Blackberry 4.6\n// gEBID returns nodes no longer in the document (#6963)\nif(elem&&elem.parentNode){// Inject the element directly into the jQuery object\nthis.length=1;this[0]=elem;}this.context=document;this.selector=selector;return this;}// HANDLE: $(expr, $(...))\n}else if(!context||context.jquery){return(context||root).find(selector);// HANDLE: $(expr, context)\n// (which is just equivalent to: $(context).find(expr)\n}else{return this.constructor(context).find(selector);}// HANDLE: $(DOMElement)\n}else if(selector.nodeType){this.context=this[0]=selector;this.length=1;return this;// HANDLE: $(function)\n// Shortcut for document ready\n}else if(jQuery.isFunction(selector)){return root.ready!==undefined?root.ready(selector):// Execute immediately if ready is not present\nselector(jQuery);}if(selector.selector!==undefined){this.selector=selector.selector;this.context=selector.context;}return jQuery.makeArray(selector,this);};// Give the init function the jQuery prototype for later instantiation\ninit.prototype=jQuery.fn;// Initialize central reference\nrootjQuery=jQuery(document);var rparentsprev=/^(?:parents|prev(?:Until|All))/,// Methods guaranteed to produce a unique set when starting from a unique set\nguaranteedUnique={children:true,contents:true,next:true,prev:true};jQuery.fn.extend({has:function has(target){var targets=jQuery(target,this),l=targets.length;return this.filter(function(){var i=0;for(;i<l;i++){if(jQuery.contains(this,targets[i])){return true;}}});},closest:function closest(selectors,context){var cur,i=0,l=this.length,matched=[],pos=rneedsContext.test(selectors)||typeof selectors!==\"string\"?jQuery(selectors,context||this.context):0;for(;i<l;i++){for(cur=this[i];cur&&cur!==context;cur=cur.parentNode){// Always skip document fragments\nif(cur.nodeType<11&&(pos?pos.index(cur)>-1:// Don't pass non-elements to Sizzle\ncur.nodeType===1&&jQuery.find.matchesSelector(cur,selectors))){matched.push(cur);break;}}}return this.pushStack(matched.length>1?jQuery.uniqueSort(matched):matched);},// Determine the position of an element within the set\nindex:function index(elem){// No argument, return index in parent\nif(!elem){return this[0]&&this[0].parentNode?this.first().prevAll().length:-1;}// Index in selector\nif(typeof elem===\"string\"){return indexOf.call(jQuery(elem),this[0]);}// Locate the position of the desired element\nreturn indexOf.call(this,// If it receives a jQuery object, the first element is used\nelem.jquery?elem[0]:elem);},add:function add(selector,context){return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(),jQuery(selector,context))));},addBack:function addBack(selector){return this.add(selector==null?this.prevObject:this.prevObject.filter(selector));}});function sibling(cur,dir){while((cur=cur[dir])&&cur.nodeType!==1){}return cur;}jQuery.each({parent:function parent(elem){var parent=elem.parentNode;return parent&&parent.nodeType!==11?parent:null;},parents:function parents(elem){return dir(elem,\"parentNode\");},parentsUntil:function parentsUntil(elem,i,until){return dir(elem,\"parentNode\",until);},next:function next(elem){return sibling(elem,\"nextSibling\");},prev:function prev(elem){return sibling(elem,\"previousSibling\");},nextAll:function nextAll(elem){return dir(elem,\"nextSibling\");},prevAll:function prevAll(elem){return dir(elem,\"previousSibling\");},nextUntil:function nextUntil(elem,i,until){return dir(elem,\"nextSibling\",until);},prevUntil:function prevUntil(elem,i,until){return dir(elem,\"previousSibling\",until);},siblings:function siblings(elem){return _siblings((elem.parentNode||{}).firstChild,elem);},children:function children(elem){return _siblings(elem.firstChild);},contents:function contents(elem){return elem.contentDocument||jQuery.merge([],elem.childNodes);}},function(name,fn){jQuery.fn[name]=function(until,selector){var matched=jQuery.map(this,fn,until);if(name.slice(-5)!==\"Until\"){selector=until;}if(selector&&typeof selector===\"string\"){matched=jQuery.filter(selector,matched);}if(this.length>1){// Remove duplicates\nif(!guaranteedUnique[name]){jQuery.uniqueSort(matched);}// Reverse order for parents* and prev-derivatives\nif(rparentsprev.test(name)){matched.reverse();}}return this.pushStack(matched);};});var rnotwhite=/\\S+/g;// Convert String-formatted options into Object-formatted ones\nfunction createOptions(options){var object={};jQuery.each(options.match(rnotwhite)||[],function(_,flag){object[flag]=true;});return object;}/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */jQuery.Callbacks=function(options){// Convert options from String-formatted to Object-formatted if needed\n// (we check in cache first)\noptions=typeof options===\"string\"?createOptions(options):jQuery.extend({},options);var// Flag to know if list is currently firing\nfiring,// Last fire value for non-forgettable lists\nmemory,// Flag to know if list was already fired\n_fired,// Flag to prevent firing\n_locked,// Actual callback list\nlist=[],// Queue of execution data for repeatable lists\nqueue=[],// Index of currently firing callback (modified by add/remove as needed)\nfiringIndex=-1,// Fire callbacks\nfire=function fire(){// Enforce single-firing\n_locked=options.once;// Execute callbacks for all pending executions,\n// respecting firingIndex overrides and runtime changes\n_fired=firing=true;for(;queue.length;firingIndex=-1){memory=queue.shift();while(++firingIndex<list.length){// Run callback and check for early termination\nif(list[firingIndex].apply(memory[0],memory[1])===false&&options.stopOnFalse){// Jump to end and forget the data so .add doesn't re-fire\nfiringIndex=list.length;memory=false;}}}// Forget the data if we're done with it\nif(!options.memory){memory=false;}firing=false;// Clean up if we're done firing for good\nif(_locked){// Keep an empty list if we have data for future add calls\nif(memory){list=[];// Otherwise, this object is spent\n}else{list=\"\";}}},// Actual Callbacks object\nself={// Add a callback or a collection of callbacks to the list\nadd:function add(){if(list){// If we have memory from a past run, we should fire after adding\nif(memory&&!firing){firingIndex=list.length-1;queue.push(memory);}(function add(args){jQuery.each(args,function(_,arg){if(jQuery.isFunction(arg)){if(!options.unique||!self.has(arg)){list.push(arg);}}else if(arg&&arg.length&&jQuery.type(arg)!==\"string\"){// Inspect recursively\nadd(arg);}});})(arguments);if(memory&&!firing){fire();}}return this;},// Remove a callback from the list\nremove:function remove(){jQuery.each(arguments,function(_,arg){var index;while((index=jQuery.inArray(arg,list,index))>-1){list.splice(index,1);// Handle firing indexes\nif(index<=firingIndex){firingIndex--;}}});return this;},// Check if a given callback is in the list.\n// If no argument is given, return whether or not list has callbacks attached.\nhas:function has(fn){return fn?jQuery.inArray(fn,list)>-1:list.length>0;},// Remove all callbacks from the list\nempty:function empty(){if(list){list=[];}return this;},// Disable .fire and .add\n// Abort any current/pending executions\n// Clear all callbacks and values\ndisable:function disable(){_locked=queue=[];list=memory=\"\";return this;},disabled:function disabled(){return!list;},// Disable .fire\n// Also disable .add unless we have memory (since it would have no effect)\n// Abort any pending executions\nlock:function lock(){_locked=queue=[];if(!memory){list=memory=\"\";}return this;},locked:function locked(){return!!_locked;},// Call all callbacks with the given context and arguments\nfireWith:function fireWith(context,args){if(!_locked){args=args||[];args=[context,args.slice?args.slice():args];queue.push(args);if(!firing){fire();}}return this;},// Call all the callbacks with the given arguments\nfire:function fire(){self.fireWith(this,arguments);return this;},// To know if the callbacks have already been called at least once\nfired:function fired(){return!!_fired;}};return self;};jQuery.extend({Deferred:function Deferred(func){var tuples=[// action, add listener, listener list, final state\n[\"resolve\",\"done\",jQuery.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",jQuery.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",jQuery.Callbacks(\"memory\")]],_state=\"pending\",_promise={state:function state(){return _state;},always:function always(){deferred.done(arguments).fail(arguments);return this;},then:function then()/* fnDone, fnFail, fnProgress */{var fns=arguments;return jQuery.Deferred(function(newDefer){jQuery.each(tuples,function(i,tuple){var fn=jQuery.isFunction(fns[i])&&fns[i];// deferred[ done | fail | progress ] for forwarding actions to newDefer\ndeferred[tuple[1]](function(){var returned=fn&&fn.apply(this,arguments);if(returned&&jQuery.isFunction(returned.promise)){returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);}else{newDefer[tuple[0]+\"With\"](this===_promise?newDefer.promise():this,fn?[returned]:arguments);}});});fns=null;}).promise();},// Get a promise for this deferred\n// If obj is provided, the promise aspect is added to the object\npromise:function promise(obj){return obj!=null?jQuery.extend(obj,_promise):_promise;}},deferred={};// Keep pipe for back-compat\n_promise.pipe=_promise.then;// Add list-specific methods\njQuery.each(tuples,function(i,tuple){var list=tuple[2],stateString=tuple[3];// promise[ done | fail | progress ] = list.add\n_promise[tuple[1]]=list.add;// Handle state\nif(stateString){list.add(function(){// state = [ resolved | rejected ]\n_state=stateString;// [ reject_list | resolve_list ].disable; progress_list.lock\n},tuples[i^1][2].disable,tuples[2][2].lock);}// deferred[ resolve | reject | notify ]\ndeferred[tuple[0]]=function(){deferred[tuple[0]+\"With\"](this===deferred?_promise:this,arguments);return this;};deferred[tuple[0]+\"With\"]=list.fireWith;});// Make the deferred a promise\n_promise.promise(deferred);// Call given func if any\nif(func){func.call(deferred,deferred);}// All done!\nreturn deferred;},// Deferred helper\nwhen:function when(subordinate/* , ..., subordinateN */){var i=0,resolveValues=_slice.call(arguments),length=resolveValues.length,// the count of uncompleted subordinates\nremaining=length!==1||subordinate&&jQuery.isFunction(subordinate.promise)?length:0,// the master Deferred.\n// If resolveValues consist of only a single Deferred, just use that.\ndeferred=remaining===1?subordinate:jQuery.Deferred(),// Update function for both resolve and progress values\nupdateFunc=function updateFunc(i,contexts,values){return function(value){contexts[i]=this;values[i]=arguments.length>1?_slice.call(arguments):value;if(values===progressValues){deferred.notifyWith(contexts,values);}else if(! --remaining){deferred.resolveWith(contexts,values);}};},progressValues,progressContexts,resolveContexts;// Add listeners to Deferred subordinates; treat others as resolved\nif(length>1){progressValues=new Array(length);progressContexts=new Array(length);resolveContexts=new Array(length);for(;i<length;i++){if(resolveValues[i]&&jQuery.isFunction(resolveValues[i].promise)){resolveValues[i].promise().progress(updateFunc(i,progressContexts,progressValues)).done(updateFunc(i,resolveContexts,resolveValues)).fail(deferred.reject);}else{--remaining;}}}// If we're not waiting on anything, resolve the master\nif(!remaining){deferred.resolveWith(resolveContexts,resolveValues);}return deferred.promise();}});// The deferred used on DOM ready\nvar readyList;jQuery.fn.ready=function(fn){// Add the callback\njQuery.ready.promise().done(fn);return this;};jQuery.extend({// Is the DOM ready to be used? Set to true once it occurs.\nisReady:false,// A counter to track how many items to wait for before\n// the ready event fires. See #6781\nreadyWait:1,// Hold (or release) the ready event\nholdReady:function holdReady(hold){if(hold){jQuery.readyWait++;}else{jQuery.ready(true);}},// Handle when the DOM is ready\nready:function ready(wait){// Abort if there are pending holds or we're already ready\nif(wait===true?--jQuery.readyWait:jQuery.isReady){return;}// Remember that the DOM is ready\njQuery.isReady=true;// If a normal DOM Ready event fired, decrement, and wait if need be\nif(wait!==true&&--jQuery.readyWait>0){return;}// If there are functions bound, to execute\nreadyList.resolveWith(document,[jQuery]);// Trigger any bound ready events\nif(jQuery.fn.triggerHandler){jQuery(document).triggerHandler(\"ready\");jQuery(document).off(\"ready\");}}});/**\n * The ready event handler and self cleanup method\n */function completed(){document.removeEventListener(\"DOMContentLoaded\",completed);window.removeEventListener(\"load\",completed);jQuery.ready();}jQuery.ready.promise=function(obj){if(!readyList){readyList=jQuery.Deferred();// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE9-10 only\n// Older IE sometimes signals \"interactive\" too soon\nif(document.readyState===\"complete\"||document.readyState!==\"loading\"&&!document.documentElement.doScroll){// Handle it asynchronously to allow scripts the opportunity to delay ready\nwindow.setTimeout(jQuery.ready);}else{// Use the handy event callback\ndocument.addEventListener(\"DOMContentLoaded\",completed);// A fallback to window.onload, that will always work\nwindow.addEventListener(\"load\",completed);}}return readyList.promise(obj);};// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access=function access(elems,fn,key,value,chainable,emptyGet,raw){var i=0,len=elems.length,bulk=key==null;// Sets many values\nif(jQuery.type(key)===\"object\"){chainable=true;for(i in key){access(elems,fn,i,key[i],true,emptyGet,raw);}// Sets one value\n}else if(value!==undefined){chainable=true;if(!jQuery.isFunction(value)){raw=true;}if(bulk){// Bulk operations run against the entire set\nif(raw){fn.call(elems,value);fn=null;// ...except when executing function values\n}else{bulk=fn;fn=function fn(elem,key,value){return bulk.call(jQuery(elem),value);};}}if(fn){for(;i<len;i++){fn(elems[i],key,raw?value:value.call(elems[i],i,fn(elems[i],key)));}}}return chainable?elems:// Gets\nbulk?fn.call(elems):len?fn(elems[0],key):emptyGet;};var acceptData=function acceptData(owner){// Accepts only:\n//  - Node\n//    - Node.ELEMENT_NODE\n//    - Node.DOCUMENT_NODE\n//  - Object\n//    - Any\n/* jshint -W018 */return owner.nodeType===1||owner.nodeType===9||!+owner.nodeType;};function Data(){this.expando=jQuery.expando+Data.uid++;}Data.uid=1;Data.prototype={register:function register(owner,initial){var value=initial||{};// If it is a node unlikely to be stringify-ed or looped over\n// use plain assignment\nif(owner.nodeType){owner[this.expando]=value;// Otherwise secure it in a non-enumerable, non-writable property\n// configurability must be true to allow the property to be\n// deleted with the delete operator\n}else{Object.defineProperty(owner,this.expando,{value:value,writable:true,configurable:true});}return owner[this.expando];},cache:function cache(owner){// We can accept data for non-element nodes in modern browsers,\n// but we should not, see #8335.\n// Always return an empty object.\nif(!acceptData(owner)){return{};}// Check if the owner object already has a cache\nvar value=owner[this.expando];// If not, create one\nif(!value){value={};// We can accept data for non-element nodes in modern browsers,\n// but we should not, see #8335.\n// Always return an empty object.\nif(acceptData(owner)){// If it is a node unlikely to be stringify-ed or looped over\n// use plain assignment\nif(owner.nodeType){owner[this.expando]=value;// Otherwise secure it in a non-enumerable property\n// configurable must be true to allow the property to be\n// deleted when data is removed\n}else{Object.defineProperty(owner,this.expando,{value:value,configurable:true});}}}return value;},set:function set(owner,data,value){var prop,cache=this.cache(owner);// Handle: [ owner, key, value ] args\nif(typeof data===\"string\"){cache[data]=value;// Handle: [ owner, { properties } ] args\n}else{// Copy the properties one-by-one to the cache object\nfor(prop in data){cache[prop]=data[prop];}}return cache;},get:function get(owner,key){return key===undefined?this.cache(owner):owner[this.expando]&&owner[this.expando][key];},access:function access(owner,key,value){var stored;// In cases where either:\n//\n//   1. No key was specified\n//   2. A string key was specified, but no value provided\n//\n// Take the \"read\" path and allow the get method to determine\n// which value to return, respectively either:\n//\n//   1. The entire cache object\n//   2. The data stored at the key\n//\nif(key===undefined||key&&typeof key===\"string\"&&value===undefined){stored=this.get(owner,key);return stored!==undefined?stored:this.get(owner,jQuery.camelCase(key));}// When the key is not a string, or both a key and value\n// are specified, set or extend (existing objects) with either:\n//\n//   1. An object of properties\n//   2. A key and value\n//\nthis.set(owner,key,value);// Since the \"set\" path can have two possible entry points\n// return the expected data based on which path was taken[*]\nreturn value!==undefined?value:key;},remove:function remove(owner,key){var i,name,camel,cache=owner[this.expando];if(cache===undefined){return;}if(key===undefined){this.register(owner);}else{// Support array or space separated string of keys\nif(jQuery.isArray(key)){// If \"name\" is an array of keys...\n// When data is initially created, via (\"key\", \"val\") signature,\n// keys will be converted to camelCase.\n// Since there is no way to tell _how_ a key was added, remove\n// both plain key and camelCase key. #12786\n// This will only penalize the array argument path.\nname=key.concat(key.map(jQuery.camelCase));}else{camel=jQuery.camelCase(key);// Try the string as a key before any manipulation\nif(key in cache){name=[key,camel];}else{// If a key with the spaces exists, use it.\n// Otherwise, create an array by matching non-whitespace\nname=camel;name=name in cache?[name]:name.match(rnotwhite)||[];}}i=name.length;while(i--){delete cache[name[i]];}}// Remove the expando if there's no more data\nif(key===undefined||jQuery.isEmptyObject(cache)){// Support: Chrome <= 35-45+\n// Webkit & Blink performance suffers when deleting properties\n// from DOM nodes, so set to undefined instead\n// https://code.google.com/p/chromium/issues/detail?id=378607\nif(owner.nodeType){owner[this.expando]=undefined;}else{delete owner[this.expando];}}},hasData:function hasData(owner){var cache=owner[this.expando];return cache!==undefined&&!jQuery.isEmptyObject(cache);}};var dataPriv=new Data();var dataUser=new Data();//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\nvar rbrace=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,rmultiDash=/[A-Z]/g;function dataAttr(elem,key,data){var name;// If nothing was found internally, try to fetch any\n// data from the HTML5 data-* attribute\nif(data===undefined&&elem.nodeType===1){name=\"data-\"+key.replace(rmultiDash,\"-$&\").toLowerCase();data=elem.getAttribute(name);if(typeof data===\"string\"){try{data=data===\"true\"?true:data===\"false\"?false:data===\"null\"?null:// Only convert to a number if it doesn't change the string\n+data+\"\"===data?+data:rbrace.test(data)?jQuery.parseJSON(data):data;}catch(e){}// Make sure we set the data so it isn't changed later\ndataUser.set(elem,key,data);}else{data=undefined;}}return data;}jQuery.extend({hasData:function hasData(elem){return dataUser.hasData(elem)||dataPriv.hasData(elem);},data:function data(elem,name,_data){return dataUser.access(elem,name,_data);},removeData:function removeData(elem,name){dataUser.remove(elem,name);},// TODO: Now that all calls to _data and _removeData have been replaced\n// with direct calls to dataPriv methods, these can be deprecated.\n_data:function _data(elem,name,data){return dataPriv.access(elem,name,data);},_removeData:function _removeData(elem,name){dataPriv.remove(elem,name);}});jQuery.fn.extend({data:function data(key,value){var i,name,data,elem=this[0],attrs=elem&&elem.attributes;// Gets all values\nif(key===undefined){if(this.length){data=dataUser.get(elem);if(elem.nodeType===1&&!dataPriv.get(elem,\"hasDataAttrs\")){i=attrs.length;while(i--){// Support: IE11+\n// The attrs elements can be null (#14894)\nif(attrs[i]){name=attrs[i].name;if(name.indexOf(\"data-\")===0){name=jQuery.camelCase(name.slice(5));dataAttr(elem,name,data[name]);}}}dataPriv.set(elem,\"hasDataAttrs\",true);}}return data;}// Sets multiple values\nif((typeof key===\"undefined\"?\"undefined\":_typeof(key))===\"object\"){return this.each(function(){dataUser.set(this,key);});}return access(this,function(value){var data,camelKey;// The calling jQuery object (element matches) is not empty\n// (and therefore has an element appears at this[ 0 ]) and the\n// `value` parameter was not undefined. An empty jQuery object\n// will result in `undefined` for elem = this[ 0 ] which will\n// throw an exception if an attempt to read a data cache is made.\nif(elem&&value===undefined){// Attempt to get data from the cache\n// with the key as-is\ndata=dataUser.get(elem,key)||// Try to find dashed key if it exists (gh-2779)\n// This is for 2.2.x only\ndataUser.get(elem,key.replace(rmultiDash,\"-$&\").toLowerCase());if(data!==undefined){return data;}camelKey=jQuery.camelCase(key);// Attempt to get data from the cache\n// with the key camelized\ndata=dataUser.get(elem,camelKey);if(data!==undefined){return data;}// Attempt to \"discover\" the data in\n// HTML5 custom data-* attrs\ndata=dataAttr(elem,camelKey,undefined);if(data!==undefined){return data;}// We tried really hard, but the data doesn't exist.\nreturn;}// Set the data...\ncamelKey=jQuery.camelCase(key);this.each(function(){// First, attempt to store a copy or reference of any\n// data that might've been store with a camelCased key.\nvar data=dataUser.get(this,camelKey);// For HTML5 data-* attribute interop, we have to\n// store property names with dashes in a camelCase form.\n// This might not apply to all properties...*\ndataUser.set(this,camelKey,value);// *... In the case of properties that might _actually_\n// have dashes, we need to also store a copy of that\n// unchanged property.\nif(key.indexOf(\"-\")>-1&&data!==undefined){dataUser.set(this,key,value);}});},null,value,arguments.length>1,null,true);},removeData:function removeData(key){return this.each(function(){dataUser.remove(this,key);});}});jQuery.extend({queue:function queue(elem,type,data){var queue;if(elem){type=(type||\"fx\")+\"queue\";queue=dataPriv.get(elem,type);// Speed up dequeue by getting out quickly if this is just a lookup\nif(data){if(!queue||jQuery.isArray(data)){queue=dataPriv.access(elem,type,jQuery.makeArray(data));}else{queue.push(data);}}return queue||[];}},dequeue:function dequeue(elem,type){type=type||\"fx\";var queue=jQuery.queue(elem,type),startLength=queue.length,fn=queue.shift(),hooks=jQuery._queueHooks(elem,type),next=function next(){jQuery.dequeue(elem,type);};// If the fx queue is dequeued, always remove the progress sentinel\nif(fn===\"inprogress\"){fn=queue.shift();startLength--;}if(fn){// Add a progress sentinel to prevent the fx queue from being\n// automatically dequeued\nif(type===\"fx\"){queue.unshift(\"inprogress\");}// Clear up the last queue stop function\ndelete hooks.stop;fn.call(elem,next,hooks);}if(!startLength&&hooks){hooks.empty.fire();}},// Not public - generate a queueHooks object, or return the current one\n_queueHooks:function _queueHooks(elem,type){var key=type+\"queueHooks\";return dataPriv.get(elem,key)||dataPriv.access(elem,key,{empty:jQuery.Callbacks(\"once memory\").add(function(){dataPriv.remove(elem,[type+\"queue\",key]);})});}});jQuery.fn.extend({queue:function queue(type,data){var setter=2;if(typeof type!==\"string\"){data=type;type=\"fx\";setter--;}if(arguments.length<setter){return jQuery.queue(this[0],type);}return data===undefined?this:this.each(function(){var queue=jQuery.queue(this,type,data);// Ensure a hooks for this queue\njQuery._queueHooks(this,type);if(type===\"fx\"&&queue[0]!==\"inprogress\"){jQuery.dequeue(this,type);}});},dequeue:function dequeue(type){return this.each(function(){jQuery.dequeue(this,type);});},clearQueue:function clearQueue(type){return this.queue(type||\"fx\",[]);},// Get a promise resolved when queues of a certain type\n// are emptied (fx is the type by default)\npromise:function promise(type,obj){var tmp,count=1,defer=jQuery.Deferred(),elements=this,i=this.length,resolve=function resolve(){if(! --count){defer.resolveWith(elements,[elements]);}};if(typeof type!==\"string\"){obj=type;type=undefined;}type=type||\"fx\";while(i--){tmp=dataPriv.get(elements[i],type+\"queueHooks\");if(tmp&&tmp.empty){count++;tmp.empty.add(resolve);}}resolve();return defer.promise(obj);}});var pnum=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;var rcssNum=new RegExp(\"^(?:([+-])=|)(\"+pnum+\")([a-z%]*)$\",\"i\");var cssExpand=[\"Top\",\"Right\",\"Bottom\",\"Left\"];var isHidden=function isHidden(elem,el){// isHidden might be called from jQuery#filter function;\n// in that case, element will be second argument\nelem=el||elem;return jQuery.css(elem,\"display\")===\"none\"||!jQuery.contains(elem.ownerDocument,elem);};function adjustCSS(elem,prop,valueParts,tween){var adjusted,scale=1,maxIterations=20,currentValue=tween?function(){return tween.cur();}:function(){return jQuery.css(elem,prop,\"\");},initial=currentValue(),unit=valueParts&&valueParts[3]||(jQuery.cssNumber[prop]?\"\":\"px\"),// Starting value computation is required for potential unit mismatches\ninitialInUnit=(jQuery.cssNumber[prop]||unit!==\"px\"&&+initial)&&rcssNum.exec(jQuery.css(elem,prop));if(initialInUnit&&initialInUnit[3]!==unit){// Trust units reported by jQuery.css\nunit=unit||initialInUnit[3];// Make sure we update the tween properties later on\nvalueParts=valueParts||[];// Iteratively approximate from a nonzero starting point\ninitialInUnit=+initial||1;do{// If previous iteration zeroed out, double until we get *something*.\n// Use string for doubling so we don't accidentally see scale as unchanged below\nscale=scale||\".5\";// Adjust and apply\ninitialInUnit=initialInUnit/scale;jQuery.style(elem,prop,initialInUnit+unit);// Update scale, tolerating zero or NaN from tween.cur()\n// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n}while(scale!==(scale=currentValue()/initial)&&scale!==1&&--maxIterations);}if(valueParts){initialInUnit=+initialInUnit||+initial||0;// Apply relative offset (+=/-=) if specified\nadjusted=valueParts[1]?initialInUnit+(valueParts[1]+1)*valueParts[2]:+valueParts[2];if(tween){tween.unit=unit;tween.start=initialInUnit;tween.end=adjusted;}}return adjusted;}var rcheckableType=/^(?:checkbox|radio)$/i;var rtagName=/<([\\w:-]+)/;var rscriptType=/^$|\\/(?:java|ecma)script/i;// We have to close these tags to support XHTML (#13200)\nvar wrapMap={// Support: IE9\noption:[1,\"<select multiple='multiple'>\",\"</select>\"],// XHTML parsers do not magically insert elements in the\n// same way that tag soup parsers do. So we cannot shorten\n// this by omitting <tbody> or other required elements.\nthead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};// Support: IE9\nwrapMap.optgroup=wrapMap.option;wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead;wrapMap.th=wrapMap.td;function getAll(context,tag){// Support: IE9-11+\n// Use typeof to avoid zero-argument method invocation on host objects (#15151)\nvar ret=typeof context.getElementsByTagName!==\"undefined\"?context.getElementsByTagName(tag||\"*\"):typeof context.querySelectorAll!==\"undefined\"?context.querySelectorAll(tag||\"*\"):[];return tag===undefined||tag&&jQuery.nodeName(context,tag)?jQuery.merge([context],ret):ret;}// Mark scripts as having already been evaluated\nfunction setGlobalEval(elems,refElements){var i=0,l=elems.length;for(;i<l;i++){dataPriv.set(elems[i],\"globalEval\",!refElements||dataPriv.get(refElements[i],\"globalEval\"));}}var rhtml=/<|&#?\\w+;/;function buildFragment(elems,context,scripts,selection,ignored){var elem,tmp,tag,wrap,contains,j,fragment=context.createDocumentFragment(),nodes=[],i=0,l=elems.length;for(;i<l;i++){elem=elems[i];if(elem||elem===0){// Add nodes directly\nif(jQuery.type(elem)===\"object\"){// Support: Android<4.1, PhantomJS<2\n// push.apply(_, arraylike) throws on ancient WebKit\njQuery.merge(nodes,elem.nodeType?[elem]:elem);// Convert non-html into a text node\n}else if(!rhtml.test(elem)){nodes.push(context.createTextNode(elem));// Convert html into DOM nodes\n}else{tmp=tmp||fragment.appendChild(context.createElement(\"div\"));// Deserialize a standard representation\ntag=(rtagName.exec(elem)||[\"\",\"\"])[1].toLowerCase();wrap=wrapMap[tag]||wrapMap._default;tmp.innerHTML=wrap[1]+jQuery.htmlPrefilter(elem)+wrap[2];// Descend through wrappers to the right content\nj=wrap[0];while(j--){tmp=tmp.lastChild;}// Support: Android<4.1, PhantomJS<2\n// push.apply(_, arraylike) throws on ancient WebKit\njQuery.merge(nodes,tmp.childNodes);// Remember the top-level container\ntmp=fragment.firstChild;// Ensure the created nodes are orphaned (#12392)\ntmp.textContent=\"\";}}}// Remove wrapper from fragment\nfragment.textContent=\"\";i=0;while(elem=nodes[i++]){// Skip elements already in the context collection (trac-4087)\nif(selection&&jQuery.inArray(elem,selection)>-1){if(ignored){ignored.push(elem);}continue;}contains=jQuery.contains(elem.ownerDocument,elem);// Append to fragment\ntmp=getAll(fragment.appendChild(elem),\"script\");// Preserve script evaluation history\nif(contains){setGlobalEval(tmp);}// Capture executables\nif(scripts){j=0;while(elem=tmp[j++]){if(rscriptType.test(elem.type||\"\")){scripts.push(elem);}}}}return fragment;}(function(){var fragment=document.createDocumentFragment(),div=fragment.appendChild(document.createElement(\"div\")),input=document.createElement(\"input\");// Support: Android 4.0-4.3, Safari<=5.1\n// Check state lost if the name is set (#11217)\n// Support: Windows Web Apps (WWA)\n// `name` and `type` must use .setAttribute for WWA (#14901)\ninput.setAttribute(\"type\",\"radio\");input.setAttribute(\"checked\",\"checked\");input.setAttribute(\"name\",\"t\");div.appendChild(input);// Support: Safari<=5.1, Android<4.2\n// Older WebKit doesn't clone checked state correctly in fragments\nsupport.checkClone=div.cloneNode(true).cloneNode(true).lastChild.checked;// Support: IE<=11+\n// Make sure textarea (and checkbox) defaultValue is properly cloned\ndiv.innerHTML=\"<textarea>x</textarea>\";support.noCloneChecked=!!div.cloneNode(true).lastChild.defaultValue;})();var rkeyEvent=/^key/,rmouseEvent=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,rtypenamespace=/^([^.]*)(?:\\.(.+)|)/;function returnTrue(){return true;}function returnFalse(){return false;}// Support: IE9\n// See #13393 for more info\nfunction safeActiveElement(){try{return document.activeElement;}catch(err){}}function _on(elem,types,selector,data,fn,one){var origFn,type;// Types can be a map of types/handlers\nif((typeof types===\"undefined\"?\"undefined\":_typeof(types))===\"object\"){// ( types-Object, selector, data )\nif(typeof selector!==\"string\"){// ( types-Object, data )\ndata=data||selector;selector=undefined;}for(type in types){_on(elem,type,selector,data,types[type],one);}return elem;}if(data==null&&fn==null){// ( types, fn )\nfn=selector;data=selector=undefined;}else if(fn==null){if(typeof selector===\"string\"){// ( types, selector, fn )\nfn=data;data=undefined;}else{// ( types, data, fn )\nfn=data;data=selector;selector=undefined;}}if(fn===false){fn=returnFalse;}else if(!fn){return elem;}if(one===1){origFn=fn;fn=function fn(event){// Can use an empty set, since event contains the info\njQuery().off(event);return origFn.apply(this,arguments);};// Use same guid so caller can remove using origFn\nfn.guid=origFn.guid||(origFn.guid=jQuery.guid++);}return elem.each(function(){jQuery.event.add(this,types,fn,data,selector);});}/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */jQuery.event={global:{},add:function add(elem,types,handler,data,selector){var handleObjIn,eventHandle,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.get(elem);// Don't attach events to noData or text/comment nodes (but allow plain objects)\nif(!elemData){return;}// Caller can pass in an object of custom data in lieu of the handler\nif(handler.handler){handleObjIn=handler;handler=handleObjIn.handler;selector=handleObjIn.selector;}// Make sure that the handler has a unique ID, used to find/remove it later\nif(!handler.guid){handler.guid=jQuery.guid++;}// Init the element's event structure and main handler, if this is the first\nif(!(events=elemData.events)){events=elemData.events={};}if(!(eventHandle=elemData.handle)){eventHandle=elemData.handle=function(e){// Discard the second event of a jQuery.event.trigger() and\n// when an event is called after a page has unloaded\nreturn typeof jQuery!==\"undefined\"&&jQuery.event.triggered!==e.type?jQuery.event.dispatch.apply(elem,arguments):undefined;};}// Handle multiple events separated by a space\ntypes=(types||\"\").match(rnotwhite)||[\"\"];t=types.length;while(t--){tmp=rtypenamespace.exec(types[t])||[];type=origType=tmp[1];namespaces=(tmp[2]||\"\").split(\".\").sort();// There *must* be a type, no attaching namespace-only handlers\nif(!type){continue;}// If event changes its type, use the special event handlers for the changed type\nspecial=jQuery.event.special[type]||{};// If selector defined, determine special event api type, otherwise given type\ntype=(selector?special.delegateType:special.bindType)||type;// Update special based on newly reset type\nspecial=jQuery.event.special[type]||{};// handleObj is passed to all event handlers\nhandleObj=jQuery.extend({type:type,origType:origType,data:data,handler:handler,guid:handler.guid,selector:selector,needsContext:selector&&jQuery.expr.match.needsContext.test(selector),namespace:namespaces.join(\".\")},handleObjIn);// Init the event handler queue if we're the first\nif(!(handlers=events[type])){handlers=events[type]=[];handlers.delegateCount=0;// Only use addEventListener if the special events handler returns false\nif(!special.setup||special.setup.call(elem,data,namespaces,eventHandle)===false){if(elem.addEventListener){elem.addEventListener(type,eventHandle);}}}if(special.add){special.add.call(elem,handleObj);if(!handleObj.handler.guid){handleObj.handler.guid=handler.guid;}}// Add to the element's handler list, delegates in front\nif(selector){handlers.splice(handlers.delegateCount++,0,handleObj);}else{handlers.push(handleObj);}// Keep track of which events have ever been used, for event optimization\njQuery.event.global[type]=true;}},// Detach an event or set of events from an element\nremove:function remove(elem,types,handler,selector,mappedTypes){var j,origCount,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.hasData(elem)&&dataPriv.get(elem);if(!elemData||!(events=elemData.events)){return;}// Once for each type.namespace in types; type may be omitted\ntypes=(types||\"\").match(rnotwhite)||[\"\"];t=types.length;while(t--){tmp=rtypenamespace.exec(types[t])||[];type=origType=tmp[1];namespaces=(tmp[2]||\"\").split(\".\").sort();// Unbind all events (on this namespace, if provided) for the element\nif(!type){for(type in events){jQuery.event.remove(elem,type+types[t],handler,selector,true);}continue;}special=jQuery.event.special[type]||{};type=(selector?special.delegateType:special.bindType)||type;handlers=events[type]||[];tmp=tmp[2]&&new RegExp(\"(^|\\\\.)\"+namespaces.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\");// Remove matching events\norigCount=j=handlers.length;while(j--){handleObj=handlers[j];if((mappedTypes||origType===handleObj.origType)&&(!handler||handler.guid===handleObj.guid)&&(!tmp||tmp.test(handleObj.namespace))&&(!selector||selector===handleObj.selector||selector===\"**\"&&handleObj.selector)){handlers.splice(j,1);if(handleObj.selector){handlers.delegateCount--;}if(special.remove){special.remove.call(elem,handleObj);}}}// Remove generic event handler if we removed something and no more handlers exist\n// (avoids potential for endless recursion during removal of special event handlers)\nif(origCount&&!handlers.length){if(!special.teardown||special.teardown.call(elem,namespaces,elemData.handle)===false){jQuery.removeEvent(elem,type,elemData.handle);}delete events[type];}}// Remove data and the expando if it's no longer used\nif(jQuery.isEmptyObject(events)){dataPriv.remove(elem,\"handle events\");}},dispatch:function dispatch(event){// Make a writable jQuery.Event from the native event object\nevent=jQuery.event.fix(event);var i,j,ret,matched,handleObj,handlerQueue=[],args=_slice.call(arguments),handlers=(dataPriv.get(this,\"events\")||{})[event.type]||[],special=jQuery.event.special[event.type]||{};// Use the fix-ed jQuery.Event rather than the (read-only) native event\nargs[0]=event;event.delegateTarget=this;// Call the preDispatch hook for the mapped type, and let it bail if desired\nif(special.preDispatch&&special.preDispatch.call(this,event)===false){return;}// Determine handlers\nhandlerQueue=jQuery.event.handlers.call(this,event,handlers);// Run delegates first; they may want to stop propagation beneath us\ni=0;while((matched=handlerQueue[i++])&&!event.isPropagationStopped()){event.currentTarget=matched.elem;j=0;while((handleObj=matched.handlers[j++])&&!event.isImmediatePropagationStopped()){// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n// a subset or equal to those in the bound event (both can have no namespace).\nif(!event.rnamespace||event.rnamespace.test(handleObj.namespace)){event.handleObj=handleObj;event.data=handleObj.data;ret=((jQuery.event.special[handleObj.origType]||{}).handle||handleObj.handler).apply(matched.elem,args);if(ret!==undefined){if((event.result=ret)===false){event.preventDefault();event.stopPropagation();}}}}}// Call the postDispatch hook for the mapped type\nif(special.postDispatch){special.postDispatch.call(this,event);}return event.result;},handlers:function handlers(event,_handlers){var i,matches,sel,handleObj,handlerQueue=[],delegateCount=_handlers.delegateCount,cur=event.target;// Support (at least): Chrome, IE9\n// Find delegate handlers\n// Black-hole SVG <use> instance trees (#13180)\n//\n// Support: Firefox<=42+\n// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\nif(delegateCount&&cur.nodeType&&(event.type!==\"click\"||isNaN(event.button)||event.button<1)){for(;cur!==this;cur=cur.parentNode||this){// Don't check non-elements (#13208)\n// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\nif(cur.nodeType===1&&(cur.disabled!==true||event.type!==\"click\")){matches=[];for(i=0;i<delegateCount;i++){handleObj=_handlers[i];// Don't conflict with Object.prototype properties (#13203)\nsel=handleObj.selector+\" \";if(matches[sel]===undefined){matches[sel]=handleObj.needsContext?jQuery(sel,this).index(cur)>-1:jQuery.find(sel,this,null,[cur]).length;}if(matches[sel]){matches.push(handleObj);}}if(matches.length){handlerQueue.push({elem:cur,handlers:matches});}}}}// Add the remaining (directly-bound) handlers\nif(delegateCount<_handlers.length){handlerQueue.push({elem:this,handlers:_handlers.slice(delegateCount)});}return handlerQueue;},// Includes some event props shared by KeyEvent and MouseEvent\nprops:(\"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \"+\"metaKey relatedTarget shiftKey target timeStamp view which\").split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function filter(event,original){// Add which for key events\nif(event.which==null){event.which=original.charCode!=null?original.charCode:original.keyCode;}return event;}},mouseHooks:{props:(\"button buttons clientX clientY offsetX offsetY pageX pageY \"+\"screenX screenY toElement\").split(\" \"),filter:function filter(event,original){var eventDoc,doc,body,button=original.button;// Calculate pageX/Y if missing and clientX/Y available\nif(event.pageX==null&&original.clientX!=null){eventDoc=event.target.ownerDocument||document;doc=eventDoc.documentElement;body=eventDoc.body;event.pageX=original.clientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-(doc&&doc.clientLeft||body&&body.clientLeft||0);event.pageY=original.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||0)-(doc&&doc.clientTop||body&&body.clientTop||0);}// Add which for click: 1 === left; 2 === middle; 3 === right\n// Note: button is not normalized, so don't use it\nif(!event.which&&button!==undefined){event.which=button&1?1:button&2?3:button&4?2:0;}return event;}},fix:function fix(event){if(event[jQuery.expando]){return event;}// Create a writable copy of the event object and normalize some properties\nvar i,prop,copy,type=event.type,originalEvent=event,fixHook=this.fixHooks[type];if(!fixHook){this.fixHooks[type]=fixHook=rmouseEvent.test(type)?this.mouseHooks:rkeyEvent.test(type)?this.keyHooks:{};}copy=fixHook.props?this.props.concat(fixHook.props):this.props;event=new jQuery.Event(originalEvent);i=copy.length;while(i--){prop=copy[i];event[prop]=originalEvent[prop];}// Support: Cordova 2.5 (WebKit) (#13255)\n// All events should have a target; Cordova deviceready doesn't\nif(!event.target){event.target=document;}// Support: Safari 6.0+, Chrome<28\n// Target should not be a text node (#504, #13143)\nif(event.target.nodeType===3){event.target=event.target.parentNode;}return fixHook.filter?fixHook.filter(event,originalEvent):event;},special:{load:{// Prevent triggered image.load events from bubbling to window.load\nnoBubble:true},focus:{// Fire native event if possible so blur/focus sequence is correct\ntrigger:function trigger(){if(this!==safeActiveElement()&&this.focus){this.focus();return false;}},delegateType:\"focusin\"},blur:{trigger:function trigger(){if(this===safeActiveElement()&&this.blur){this.blur();return false;}},delegateType:\"focusout\"},click:{// For checkbox, fire native event so checked state will be right\ntrigger:function trigger(){if(this.type===\"checkbox\"&&this.click&&jQuery.nodeName(this,\"input\")){this.click();return false;}},// For cross-browser consistency, don't fire native .click() on links\n_default:function _default(event){return jQuery.nodeName(event.target,\"a\");}},beforeunload:{postDispatch:function postDispatch(event){// Support: Firefox 20+\n// Firefox doesn't alert if the returnValue field is not set.\nif(event.result!==undefined&&event.originalEvent){event.originalEvent.returnValue=event.result;}}}}};jQuery.removeEvent=function(elem,type,handle){// This \"if\" is needed for plain objects\nif(elem.removeEventListener){elem.removeEventListener(type,handle);}};jQuery.Event=function(src,props){// Allow instantiation without the 'new' keyword\nif(!(this instanceof jQuery.Event)){return new jQuery.Event(src,props);}// Event object\nif(src&&src.type){this.originalEvent=src;this.type=src.type;// Events bubbling up the document may have been marked as prevented\n// by a handler lower down the tree; reflect the correct value.\nthis.isDefaultPrevented=src.defaultPrevented||src.defaultPrevented===undefined&&// Support: Android<4.0\nsrc.returnValue===false?returnTrue:returnFalse;// Event type\n}else{this.type=src;}// Put explicitly provided properties onto the event object\nif(props){jQuery.extend(this,props);}// Create a timestamp if incoming event doesn't have one\nthis.timeStamp=src&&src.timeStamp||jQuery.now();// Mark it as fixed\nthis[jQuery.expando]=true;};// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype={constructor:jQuery.Event,isDefaultPrevented:returnFalse,isPropagationStopped:returnFalse,isImmediatePropagationStopped:returnFalse,preventDefault:function preventDefault(){var e=this.originalEvent;this.isDefaultPrevented=returnTrue;if(e){e.preventDefault();}},stopPropagation:function stopPropagation(){var e=this.originalEvent;this.isPropagationStopped=returnTrue;if(e){e.stopPropagation();}},stopImmediatePropagation:function stopImmediatePropagation(){var e=this.originalEvent;this.isImmediatePropagationStopped=returnTrue;if(e){e.stopImmediatePropagation();}this.stopPropagation();}};// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://code.google.com/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(orig,fix){jQuery.event.special[orig]={delegateType:fix,bindType:fix,handle:function handle(event){var ret,target=this,related=event.relatedTarget,handleObj=event.handleObj;// For mouseenter/leave call the handler if related is outside the target.\n// NB: No relatedTarget if the mouse left/entered the browser window\nif(!related||related!==target&&!jQuery.contains(target,related)){event.type=handleObj.origType;ret=handleObj.handler.apply(this,arguments);event.type=fix;}return ret;}};});jQuery.fn.extend({on:function on(types,selector,data,fn){return _on(this,types,selector,data,fn);},one:function one(types,selector,data,fn){return _on(this,types,selector,data,fn,1);},off:function off(types,selector,fn){var handleObj,type;if(types&&types.preventDefault&&types.handleObj){// ( event )  dispatched jQuery.Event\nhandleObj=types.handleObj;jQuery(types.delegateTarget).off(handleObj.namespace?handleObj.origType+\".\"+handleObj.namespace:handleObj.origType,handleObj.selector,handleObj.handler);return this;}if((typeof types===\"undefined\"?\"undefined\":_typeof(types))===\"object\"){// ( types-object [, selector] )\nfor(type in types){this.off(type,selector,types[type]);}return this;}if(selector===false||typeof selector===\"function\"){// ( types [, fn] )\nfn=selector;selector=undefined;}if(fn===false){fn=returnFalse;}return this.each(function(){jQuery.event.remove(this,types,fn,selector);});}});var rxhtmlTag=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,// Support: IE 10-11, Edge 10240+\n// In IE/Edge using regex groups here causes severe slowdowns.\n// See https://connect.microsoft.com/IE/feedback/details/1736512/\nrnoInnerhtml=/<script|<style|<link/i,// checked=\"checked\" or checked\nrchecked=/checked\\s*(?:[^=]|=\\s*.checked.)/i,rscriptTypeMasked=/^true\\/(.*)/,rcleanScript=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;// Manipulating tables requires a tbody\nfunction manipulationTarget(elem,content){return jQuery.nodeName(elem,\"table\")&&jQuery.nodeName(content.nodeType!==11?content:content.firstChild,\"tr\")?elem.getElementsByTagName(\"tbody\")[0]||elem.appendChild(elem.ownerDocument.createElement(\"tbody\")):elem;}// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript(elem){elem.type=(elem.getAttribute(\"type\")!==null)+\"/\"+elem.type;return elem;}function restoreScript(elem){var match=rscriptTypeMasked.exec(elem.type);if(match){elem.type=match[1];}else{elem.removeAttribute(\"type\");}return elem;}function cloneCopyEvent(src,dest){var i,l,type,pdataOld,pdataCur,udataOld,udataCur,events;if(dest.nodeType!==1){return;}// 1. Copy private data: events, handlers, etc.\nif(dataPriv.hasData(src)){pdataOld=dataPriv.access(src);pdataCur=dataPriv.set(dest,pdataOld);events=pdataOld.events;if(events){delete pdataCur.handle;pdataCur.events={};for(type in events){for(i=0,l=events[type].length;i<l;i++){jQuery.event.add(dest,type,events[type][i]);}}}}// 2. Copy user data\nif(dataUser.hasData(src)){udataOld=dataUser.access(src);udataCur=jQuery.extend({},udataOld);dataUser.set(dest,udataCur);}}// Fix IE bugs, see support tests\nfunction fixInput(src,dest){var nodeName=dest.nodeName.toLowerCase();// Fails to persist the checked state of a cloned checkbox or radio button.\nif(nodeName===\"input\"&&rcheckableType.test(src.type)){dest.checked=src.checked;// Fails to return the selected option to the default selected state when cloning options\n}else if(nodeName===\"input\"||nodeName===\"textarea\"){dest.defaultValue=src.defaultValue;}}function domManip(collection,args,callback,ignored){// Flatten any nested arrays\nargs=concat.apply([],args);var fragment,first,scripts,hasScripts,node,doc,i=0,l=collection.length,iNoClone=l-1,value=args[0],isFunction=jQuery.isFunction(value);// We can't cloneNode fragments that contain checked, in WebKit\nif(isFunction||l>1&&typeof value===\"string\"&&!support.checkClone&&rchecked.test(value)){return collection.each(function(index){var self=collection.eq(index);if(isFunction){args[0]=value.call(this,index,self.html());}domManip(self,args,callback,ignored);});}if(l){fragment=buildFragment(args,collection[0].ownerDocument,false,collection,ignored);first=fragment.firstChild;if(fragment.childNodes.length===1){fragment=first;}// Require either new content or an interest in ignored elements to invoke the callback\nif(first||ignored){scripts=jQuery.map(getAll(fragment,\"script\"),disableScript);hasScripts=scripts.length;// Use the original fragment for the last item\n// instead of the first because it can end up\n// being emptied incorrectly in certain situations (#8070).\nfor(;i<l;i++){node=fragment;if(i!==iNoClone){node=jQuery.clone(node,true,true);// Keep references to cloned scripts for later restoration\nif(hasScripts){// Support: Android<4.1, PhantomJS<2\n// push.apply(_, arraylike) throws on ancient WebKit\njQuery.merge(scripts,getAll(node,\"script\"));}}callback.call(collection[i],node,i);}if(hasScripts){doc=scripts[scripts.length-1].ownerDocument;// Reenable scripts\njQuery.map(scripts,restoreScript);// Evaluate executable scripts on first document insertion\nfor(i=0;i<hasScripts;i++){node=scripts[i];if(rscriptType.test(node.type||\"\")&&!dataPriv.access(node,\"globalEval\")&&jQuery.contains(doc,node)){if(node.src){// Optional AJAX dependency, but won't run scripts if not present\nif(jQuery._evalUrl){jQuery._evalUrl(node.src);}}else{jQuery.globalEval(node.textContent.replace(rcleanScript,\"\"));}}}}}}return collection;}function _remove(elem,selector,keepData){var node,nodes=selector?jQuery.filter(selector,elem):elem,i=0;for(;(node=nodes[i])!=null;i++){if(!keepData&&node.nodeType===1){jQuery.cleanData(getAll(node));}if(node.parentNode){if(keepData&&jQuery.contains(node.ownerDocument,node)){setGlobalEval(getAll(node,\"script\"));}node.parentNode.removeChild(node);}}return elem;}jQuery.extend({htmlPrefilter:function htmlPrefilter(html){return html.replace(rxhtmlTag,\"<$1></$2>\");},clone:function clone(elem,dataAndEvents,deepDataAndEvents){var i,l,srcElements,destElements,clone=elem.cloneNode(true),inPage=jQuery.contains(elem.ownerDocument,elem);// Fix IE cloning issues\nif(!support.noCloneChecked&&(elem.nodeType===1||elem.nodeType===11)&&!jQuery.isXMLDoc(elem)){// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\ndestElements=getAll(clone);srcElements=getAll(elem);for(i=0,l=srcElements.length;i<l;i++){fixInput(srcElements[i],destElements[i]);}}// Copy the events from the original to the clone\nif(dataAndEvents){if(deepDataAndEvents){srcElements=srcElements||getAll(elem);destElements=destElements||getAll(clone);for(i=0,l=srcElements.length;i<l;i++){cloneCopyEvent(srcElements[i],destElements[i]);}}else{cloneCopyEvent(elem,clone);}}// Preserve script evaluation history\ndestElements=getAll(clone,\"script\");if(destElements.length>0){setGlobalEval(destElements,!inPage&&getAll(elem,\"script\"));}// Return the cloned set\nreturn clone;},cleanData:function cleanData(elems){var data,elem,type,special=jQuery.event.special,i=0;for(;(elem=elems[i])!==undefined;i++){if(acceptData(elem)){if(data=elem[dataPriv.expando]){if(data.events){for(type in data.events){if(special[type]){jQuery.event.remove(elem,type);// This is a shortcut to avoid jQuery.event.remove's overhead\n}else{jQuery.removeEvent(elem,type,data.handle);}}}// Support: Chrome <= 35-45+\n// Assign undefined instead of using delete, see Data#remove\nelem[dataPriv.expando]=undefined;}if(elem[dataUser.expando]){// Support: Chrome <= 35-45+\n// Assign undefined instead of using delete, see Data#remove\nelem[dataUser.expando]=undefined;}}}}});jQuery.fn.extend({// Keep domManip exposed until 3.0 (gh-2225)\ndomManip:domManip,detach:function detach(selector){return _remove(this,selector,true);},remove:function remove(selector){return _remove(this,selector);},text:function text(value){return access(this,function(value){return value===undefined?jQuery.text(this):this.empty().each(function(){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){this.textContent=value;}});},null,value,arguments.length);},append:function append(){return domManip(this,arguments,function(elem){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var target=manipulationTarget(this,elem);target.appendChild(elem);}});},prepend:function prepend(){return domManip(this,arguments,function(elem){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var target=manipulationTarget(this,elem);target.insertBefore(elem,target.firstChild);}});},before:function before(){return domManip(this,arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this);}});},after:function after(){return domManip(this,arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this.nextSibling);}});},empty:function empty(){var elem,i=0;for(;(elem=this[i])!=null;i++){if(elem.nodeType===1){// Prevent memory leaks\njQuery.cleanData(getAll(elem,false));// Remove any remaining nodes\nelem.textContent=\"\";}}return this;},clone:function clone(dataAndEvents,deepDataAndEvents){dataAndEvents=dataAndEvents==null?false:dataAndEvents;deepDataAndEvents=deepDataAndEvents==null?dataAndEvents:deepDataAndEvents;return this.map(function(){return jQuery.clone(this,dataAndEvents,deepDataAndEvents);});},html:function html(value){return access(this,function(value){var elem=this[0]||{},i=0,l=this.length;if(value===undefined&&elem.nodeType===1){return elem.innerHTML;}// See if we can take a shortcut and just use innerHTML\nif(typeof value===\"string\"&&!rnoInnerhtml.test(value)&&!wrapMap[(rtagName.exec(value)||[\"\",\"\"])[1].toLowerCase()]){value=jQuery.htmlPrefilter(value);try{for(;i<l;i++){elem=this[i]||{};// Remove element nodes and prevent memory leaks\nif(elem.nodeType===1){jQuery.cleanData(getAll(elem,false));elem.innerHTML=value;}}elem=0;// If using innerHTML throws an exception, use the fallback method\n}catch(e){}}if(elem){this.empty().append(value);}},null,value,arguments.length);},replaceWith:function replaceWith(){var ignored=[];// Make the changes, replacing each non-ignored context element with the new content\nreturn domManip(this,arguments,function(elem){var parent=this.parentNode;if(jQuery.inArray(this,ignored)<0){jQuery.cleanData(getAll(this));if(parent){parent.replaceChild(elem,this);}}// Force callback invocation\n},ignored);}});jQuery.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(name,original){jQuery.fn[name]=function(selector){var elems,ret=[],insert=jQuery(selector),last=insert.length-1,i=0;for(;i<=last;i++){elems=i===last?this:this.clone(true);jQuery(insert[i])[original](elems);// Support: QtWebKit\n// .get() because push.apply(_, arraylike) throws\npush.apply(ret,elems.get());}return this.pushStack(ret);};});var iframe,elemdisplay={// Support: Firefox\n// We have to pre-define these values for FF (#10227)\nHTML:\"block\",BODY:\"block\"};/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */// Called only from within defaultDisplay\nfunction actualDisplay(name,doc){var elem=jQuery(doc.createElement(name)).appendTo(doc.body),display=jQuery.css(elem[0],\"display\");// We don't have any data stored on the element,\n// so use \"detach\" method as fast way to get rid of the element\nelem.detach();return display;}/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */function defaultDisplay(nodeName){var doc=document,display=elemdisplay[nodeName];if(!display){display=actualDisplay(nodeName,doc);// If the simple way fails, read from inside an iframe\nif(display===\"none\"||!display){// Use the already-created iframe if possible\niframe=(iframe||jQuery(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(doc.documentElement);// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\ndoc=iframe[0].contentDocument;// Support: IE\ndoc.write();doc.close();display=actualDisplay(nodeName,doc);iframe.detach();}// Store the correct default display\nelemdisplay[nodeName]=display;}return display;}var rmargin=/^margin/;var rnumnonpx=new RegExp(\"^(\"+pnum+\")(?!px)[a-z%]+$\",\"i\");var getStyles=function getStyles(elem){// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n// IE throws on elements created in popups\n// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\nvar view=elem.ownerDocument.defaultView;if(!view||!view.opener){view=window;}return view.getComputedStyle(elem);};var swap=function swap(elem,options,callback,args){var ret,name,old={};// Remember the old values, and insert the new ones\nfor(name in options){old[name]=elem.style[name];elem.style[name]=options[name];}ret=callback.apply(elem,args||[]);// Revert the old values\nfor(name in options){elem.style[name]=old[name];}return ret;};var documentElement=document.documentElement;(function(){var pixelPositionVal,boxSizingReliableVal,pixelMarginRightVal,reliableMarginLeftVal,container=document.createElement(\"div\"),div=document.createElement(\"div\");// Finish early in limited (non-browser) environments\nif(!div.style){return;}// Support: IE9-11+\n// Style of cloned element affects source element cloned (#8908)\ndiv.style.backgroundClip=\"content-box\";div.cloneNode(true).style.backgroundClip=\"\";support.clearCloneStyle=div.style.backgroundClip===\"content-box\";container.style.cssText=\"border:0;width:8px;height:0;top:0;left:-9999px;\"+\"padding:0;margin-top:1px;position:absolute\";container.appendChild(div);// Executing both pixelPosition & boxSizingReliable tests require only one layout\n// so they're executed at the same time to save the second computation.\nfunction computeStyleTests(){div.style.cssText=// Support: Firefox<29, Android 2.3\n// Vendor-prefix box-sizing\n\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\"+\"position:relative;display:block;\"+\"margin:auto;border:1px;padding:1px;\"+\"top:1%;width:50%\";div.innerHTML=\"\";documentElement.appendChild(container);var divStyle=window.getComputedStyle(div);pixelPositionVal=divStyle.top!==\"1%\";reliableMarginLeftVal=divStyle.marginLeft===\"2px\";boxSizingReliableVal=divStyle.width===\"4px\";// Support: Android 4.0 - 4.3 only\n// Some styles come back with percentage values, even though they shouldn't\ndiv.style.marginRight=\"50%\";pixelMarginRightVal=divStyle.marginRight===\"4px\";documentElement.removeChild(container);}jQuery.extend(support,{pixelPosition:function pixelPosition(){// This test is executed only once but we still do memoizing\n// since we can use the boxSizingReliable pre-computing.\n// No need to check if the test was already performed, though.\ncomputeStyleTests();return pixelPositionVal;},boxSizingReliable:function boxSizingReliable(){if(boxSizingReliableVal==null){computeStyleTests();}return boxSizingReliableVal;},pixelMarginRight:function pixelMarginRight(){// Support: Android 4.0-4.3\n// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\n// since that compresses better and they're computed together anyway.\nif(boxSizingReliableVal==null){computeStyleTests();}return pixelMarginRightVal;},reliableMarginLeft:function reliableMarginLeft(){// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\nif(boxSizingReliableVal==null){computeStyleTests();}return reliableMarginLeftVal;},reliableMarginRight:function reliableMarginRight(){// Support: Android 2.3\n// Check if div with explicit width and no margin-right incorrectly\n// gets computed margin-right based on width of container. (#3333)\n// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n// This support function is only executed once so no memoizing is needed.\nvar ret,marginDiv=div.appendChild(document.createElement(\"div\"));// Reset CSS: box-sizing; display; margin; border; padding\nmarginDiv.style.cssText=div.style.cssText=// Support: Android 2.3\n// Vendor-prefix box-sizing\n\"-webkit-box-sizing:content-box;box-sizing:content-box;\"+\"display:block;margin:0;border:0;padding:0\";marginDiv.style.marginRight=marginDiv.style.width=\"0\";div.style.width=\"1px\";documentElement.appendChild(container);ret=!parseFloat(window.getComputedStyle(marginDiv).marginRight);documentElement.removeChild(container);div.removeChild(marginDiv);return ret;}});})();function curCSS(elem,name,computed){var width,minWidth,maxWidth,ret,style=elem.style;computed=computed||getStyles(elem);ret=computed?computed.getPropertyValue(name)||computed[name]:undefined;// Support: Opera 12.1x only\n// Fall back to style even without computed\n// computed is undefined for elems on document fragments\nif((ret===\"\"||ret===undefined)&&!jQuery.contains(elem.ownerDocument,elem)){ret=jQuery.style(elem,name);}// Support: IE9\n// getPropertyValue is only needed for .css('filter') (#12537)\nif(computed){// A tribute to the \"awesome hack by Dean Edwards\"\n// Android Browser returns percentage for some values,\n// but width seems to be reliably pixels.\n// This is against the CSSOM draft spec:\n// http://dev.w3.org/csswg/cssom/#resolved-values\nif(!support.pixelMarginRight()&&rnumnonpx.test(ret)&&rmargin.test(name)){// Remember the original values\nwidth=style.width;minWidth=style.minWidth;maxWidth=style.maxWidth;// Put in the new values to get a computed value out\nstyle.minWidth=style.maxWidth=style.width=ret;ret=computed.width;// Revert the changed values\nstyle.width=width;style.minWidth=minWidth;style.maxWidth=maxWidth;}}return ret!==undefined?// Support: IE9-11+\n// IE returns zIndex value as an integer.\nret+\"\":ret;}function addGetHookIf(conditionFn,hookFn){// Define the hook, we'll check on the first run if it's really needed.\nreturn{get:function get(){if(conditionFn()){// Hook not needed (or it's not possible to use it due\n// to missing dependency), remove it.\ndelete this.get;return;}// Hook needed; redefine it so that the support test is not executed again.\nreturn(this.get=hookFn).apply(this,arguments);}};}var// Swappable if display is none or starts with table\n// except \"table\", \"table-cell\", or \"table-caption\"\n// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\nrdisplayswap=/^(none|table(?!-c[ea]).+)/,cssShow={position:\"absolute\",visibility:\"hidden\",display:\"block\"},cssNormalTransform={letterSpacing:\"0\",fontWeight:\"400\"},cssPrefixes=[\"Webkit\",\"O\",\"Moz\",\"ms\"],emptyStyle=document.createElement(\"div\").style;// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName(name){// Shortcut for names that are not vendor prefixed\nif(name in emptyStyle){return name;}// Check for vendor prefixed names\nvar capName=name[0].toUpperCase()+name.slice(1),i=cssPrefixes.length;while(i--){name=cssPrefixes[i]+capName;if(name in emptyStyle){return name;}}}function setPositiveNumber(elem,value,subtract){// Any relative (+/-) values have already been\n// normalized at this point\nvar matches=rcssNum.exec(value);return matches?// Guard against undefined \"subtract\", e.g., when used as in cssHooks\nMath.max(0,matches[2]-(subtract||0))+(matches[3]||\"px\"):value;}function augmentWidthOrHeight(elem,name,extra,isBorderBox,styles){var i=extra===(isBorderBox?\"border\":\"content\")?// If we already have the right measurement, avoid augmentation\n4:// Otherwise initialize for horizontal or vertical properties\nname===\"width\"?1:0,val=0;for(;i<4;i+=2){// Both box models exclude margin, so add it if we want it\nif(extra===\"margin\"){val+=jQuery.css(elem,extra+cssExpand[i],true,styles);}if(isBorderBox){// border-box includes padding, so remove it if we want content\nif(extra===\"content\"){val-=jQuery.css(elem,\"padding\"+cssExpand[i],true,styles);}// At this point, extra isn't border nor margin, so remove border\nif(extra!==\"margin\"){val-=jQuery.css(elem,\"border\"+cssExpand[i]+\"Width\",true,styles);}}else{// At this point, extra isn't content, so add padding\nval+=jQuery.css(elem,\"padding\"+cssExpand[i],true,styles);// At this point, extra isn't content nor padding, so add border\nif(extra!==\"padding\"){val+=jQuery.css(elem,\"border\"+cssExpand[i]+\"Width\",true,styles);}}}return val;}function getWidthOrHeight(elem,name,extra){// Start with offset property, which is equivalent to the border-box value\nvar valueIsBorderBox=true,val=name===\"width\"?elem.offsetWidth:elem.offsetHeight,styles=getStyles(elem),isBorderBox=jQuery.css(elem,\"boxSizing\",false,styles)===\"border-box\";// Support: IE11 only\n// In IE 11 fullscreen elements inside of an iframe have\n// 100x too small dimensions (gh-1764).\nif(document.msFullscreenElement&&window.top!==window){// Support: IE11 only\n// Running getBoundingClientRect on a disconnected node\n// in IE throws an error.\nif(elem.getClientRects().length){val=Math.round(elem.getBoundingClientRect()[name]*100);}}// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\nif(val<=0||val==null){// Fall back to computed then uncomputed css if necessary\nval=curCSS(elem,name,styles);if(val<0||val==null){val=elem.style[name];}// Computed unit is not pixels. Stop here and return.\nif(rnumnonpx.test(val)){return val;}// Check for style in case a browser which returns unreliable values\n// for getComputedStyle silently falls back to the reliable elem.style\nvalueIsBorderBox=isBorderBox&&(support.boxSizingReliable()||val===elem.style[name]);// Normalize \"\", auto, and prepare for extra\nval=parseFloat(val)||0;}// Use the active box-sizing model to add/subtract irrelevant styles\nreturn val+augmentWidthOrHeight(elem,name,extra||(isBorderBox?\"border\":\"content\"),valueIsBorderBox,styles)+\"px\";}function showHide(elements,show){var display,elem,hidden,values=[],index=0,length=elements.length;for(;index<length;index++){elem=elements[index];if(!elem.style){continue;}values[index]=dataPriv.get(elem,\"olddisplay\");display=elem.style.display;if(show){// Reset the inline display of this element to learn if it is\n// being hidden by cascaded rules or not\nif(!values[index]&&display===\"none\"){elem.style.display=\"\";}// Set elements which have been overridden with display: none\n// in a stylesheet to whatever the default browser style is\n// for such an element\nif(elem.style.display===\"\"&&isHidden(elem)){values[index]=dataPriv.access(elem,\"olddisplay\",defaultDisplay(elem.nodeName));}}else{hidden=isHidden(elem);if(display!==\"none\"||!hidden){dataPriv.set(elem,\"olddisplay\",hidden?display:jQuery.css(elem,\"display\"));}}}// Set the display of most of the elements in a second loop\n// to avoid the constant reflow\nfor(index=0;index<length;index++){elem=elements[index];if(!elem.style){continue;}if(!show||elem.style.display===\"none\"||elem.style.display===\"\"){elem.style.display=show?values[index]||\"\":\"none\";}}return elements;}jQuery.extend({// Add in style property hooks for overriding the default\n// behavior of getting and setting a style property\ncssHooks:{opacity:{get:function get(elem,computed){if(computed){// We should always get a number back from opacity\nvar ret=curCSS(elem,\"opacity\");return ret===\"\"?\"1\":ret;}}}},// Don't automatically add \"px\" to these possibly-unitless properties\ncssNumber:{\"animationIterationCount\":true,\"columnCount\":true,\"fillOpacity\":true,\"flexGrow\":true,\"flexShrink\":true,\"fontWeight\":true,\"lineHeight\":true,\"opacity\":true,\"order\":true,\"orphans\":true,\"widows\":true,\"zIndex\":true,\"zoom\":true},// Add in properties whose names you wish to fix before\n// setting or getting the value\ncssProps:{\"float\":\"cssFloat\"},// Get and set the style property on a DOM Node\nstyle:function style(elem,name,value,extra){// Don't set styles on text and comment nodes\nif(!elem||elem.nodeType===3||elem.nodeType===8||!elem.style){return;}// Make sure that we're working with the right name\nvar ret,type,hooks,origName=jQuery.camelCase(name),style=elem.style;name=jQuery.cssProps[origName]||(jQuery.cssProps[origName]=vendorPropName(origName)||origName);// Gets hook for the prefixed version, then unprefixed version\nhooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];// Check if we're setting a value\nif(value!==undefined){type=typeof value===\"undefined\"?\"undefined\":_typeof(value);// Convert \"+=\" or \"-=\" to relative numbers (#7345)\nif(type===\"string\"&&(ret=rcssNum.exec(value))&&ret[1]){value=adjustCSS(elem,name,ret);// Fixes bug #9237\ntype=\"number\";}// Make sure that null and NaN values aren't set (#7116)\nif(value==null||value!==value){return;}// If a number was passed in, add the unit (except for certain CSS properties)\nif(type===\"number\"){value+=ret&&ret[3]||(jQuery.cssNumber[origName]?\"\":\"px\");}// Support: IE9-11+\n// background-* props affect original clone's values\nif(!support.clearCloneStyle&&value===\"\"&&name.indexOf(\"background\")===0){style[name]=\"inherit\";}// If a hook was provided, use that value, otherwise just set the specified value\nif(!hooks||!(\"set\"in hooks)||(value=hooks.set(elem,value,extra))!==undefined){style[name]=value;}}else{// If a hook was provided get the non-computed value from there\nif(hooks&&\"get\"in hooks&&(ret=hooks.get(elem,false,extra))!==undefined){return ret;}// Otherwise just get the value from the style object\nreturn style[name];}},css:function css(elem,name,extra,styles){var val,num,hooks,origName=jQuery.camelCase(name);// Make sure that we're working with the right name\nname=jQuery.cssProps[origName]||(jQuery.cssProps[origName]=vendorPropName(origName)||origName);// Try prefixed name followed by the unprefixed name\nhooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];// If a hook was provided get the computed value from there\nif(hooks&&\"get\"in hooks){val=hooks.get(elem,true,extra);}// Otherwise, if a way to get the computed value exists, use that\nif(val===undefined){val=curCSS(elem,name,styles);}// Convert \"normal\" to computed value\nif(val===\"normal\"&&name in cssNormalTransform){val=cssNormalTransform[name];}// Make numeric if forced or a qualifier was provided and val looks numeric\nif(extra===\"\"||extra){num=parseFloat(val);return extra===true||isFinite(num)?num||0:val;}return val;}});jQuery.each([\"height\",\"width\"],function(i,name){jQuery.cssHooks[name]={get:function get(elem,computed,extra){if(computed){// Certain elements can have dimension info if we invisibly show them\n// but it must have a current display style that would benefit\nreturn rdisplayswap.test(jQuery.css(elem,\"display\"))&&elem.offsetWidth===0?swap(elem,cssShow,function(){return getWidthOrHeight(elem,name,extra);}):getWidthOrHeight(elem,name,extra);}},set:function set(elem,value,extra){var matches,styles=extra&&getStyles(elem),subtract=extra&&augmentWidthOrHeight(elem,name,extra,jQuery.css(elem,\"boxSizing\",false,styles)===\"border-box\",styles);// Convert to pixels if value adjustment is needed\nif(subtract&&(matches=rcssNum.exec(value))&&(matches[3]||\"px\")!==\"px\"){elem.style[name]=value;value=jQuery.css(elem,name);}return setPositiveNumber(elem,value,subtract);}};});jQuery.cssHooks.marginLeft=addGetHookIf(support.reliableMarginLeft,function(elem,computed){if(computed){return(parseFloat(curCSS(elem,\"marginLeft\"))||elem.getBoundingClientRect().left-swap(elem,{marginLeft:0},function(){return elem.getBoundingClientRect().left;}))+\"px\";}});// Support: Android 2.3\njQuery.cssHooks.marginRight=addGetHookIf(support.reliableMarginRight,function(elem,computed){if(computed){return swap(elem,{\"display\":\"inline-block\"},curCSS,[elem,\"marginRight\"]);}});// These hooks are used by animate to expand properties\njQuery.each({margin:\"\",padding:\"\",border:\"Width\"},function(prefix,suffix){jQuery.cssHooks[prefix+suffix]={expand:function expand(value){var i=0,expanded={},// Assumes a single number if not a string\nparts=typeof value===\"string\"?value.split(\" \"):[value];for(;i<4;i++){expanded[prefix+cssExpand[i]+suffix]=parts[i]||parts[i-2]||parts[0];}return expanded;}};if(!rmargin.test(prefix)){jQuery.cssHooks[prefix+suffix].set=setPositiveNumber;}});jQuery.fn.extend({css:function css(name,value){return access(this,function(elem,name,value){var styles,len,map={},i=0;if(jQuery.isArray(name)){styles=getStyles(elem);len=name.length;for(;i<len;i++){map[name[i]]=jQuery.css(elem,name[i],false,styles);}return map;}return value!==undefined?jQuery.style(elem,name,value):jQuery.css(elem,name);},name,value,arguments.length>1);},show:function show(){return showHide(this,true);},hide:function hide(){return showHide(this);},toggle:function toggle(state){if(typeof state===\"boolean\"){return state?this.show():this.hide();}return this.each(function(){if(isHidden(this)){jQuery(this).show();}else{jQuery(this).hide();}});}});function Tween(elem,options,prop,end,easing){return new Tween.prototype.init(elem,options,prop,end,easing);}jQuery.Tween=Tween;Tween.prototype={constructor:Tween,init:function init(elem,options,prop,end,easing,unit){this.elem=elem;this.prop=prop;this.easing=easing||jQuery.easing._default;this.options=options;this.start=this.now=this.cur();this.end=end;this.unit=unit||(jQuery.cssNumber[prop]?\"\":\"px\");},cur:function cur(){var hooks=Tween.propHooks[this.prop];return hooks&&hooks.get?hooks.get(this):Tween.propHooks._default.get(this);},run:function run(percent){var eased,hooks=Tween.propHooks[this.prop];if(this.options.duration){this.pos=eased=jQuery.easing[this.easing](percent,this.options.duration*percent,0,1,this.options.duration);}else{this.pos=eased=percent;}this.now=(this.end-this.start)*eased+this.start;if(this.options.step){this.options.step.call(this.elem,this.now,this);}if(hooks&&hooks.set){hooks.set(this);}else{Tween.propHooks._default.set(this);}return this;}};Tween.prototype.init.prototype=Tween.prototype;Tween.propHooks={_default:{get:function get(tween){var result;// Use a property on the element directly when it is not a DOM element,\n// or when there is no matching style property that exists.\nif(tween.elem.nodeType!==1||tween.elem[tween.prop]!=null&&tween.elem.style[tween.prop]==null){return tween.elem[tween.prop];}// Passing an empty string as a 3rd parameter to .css will automatically\n// attempt a parseFloat and fallback to a string if the parse fails.\n// Simple values such as \"10px\" are parsed to Float;\n// complex values such as \"rotate(1rad)\" are returned as-is.\nresult=jQuery.css(tween.elem,tween.prop,\"\");// Empty strings, null, undefined and \"auto\" are converted to 0.\nreturn!result||result===\"auto\"?0:result;},set:function set(tween){// Use step hook for back compat.\n// Use cssHook if its there.\n// Use .style if available and use plain properties where available.\nif(jQuery.fx.step[tween.prop]){jQuery.fx.step[tween.prop](tween);}else if(tween.elem.nodeType===1&&(tween.elem.style[jQuery.cssProps[tween.prop]]!=null||jQuery.cssHooks[tween.prop])){jQuery.style(tween.elem,tween.prop,tween.now+tween.unit);}else{tween.elem[tween.prop]=tween.now;}}}};// Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop=Tween.propHooks.scrollLeft={set:function set(tween){if(tween.elem.nodeType&&tween.elem.parentNode){tween.elem[tween.prop]=tween.now;}}};jQuery.easing={linear:function linear(p){return p;},swing:function swing(p){return 0.5-Math.cos(p*Math.PI)/2;},_default:\"swing\"};jQuery.fx=Tween.prototype.init;// Back Compat <1.8 extension point\njQuery.fx.step={};var fxNow,timerId,rfxtypes=/^(?:toggle|show|hide)$/,rrun=/queueHooks$/;// Animations created synchronously will run synchronously\nfunction createFxNow(){window.setTimeout(function(){fxNow=undefined;});return fxNow=jQuery.now();}// Generate parameters to create a standard animation\nfunction genFx(type,includeWidth){var which,i=0,attrs={height:type};// If we include width, step value is 1 to do all cssExpand values,\n// otherwise step value is 2 to skip over Left and Right\nincludeWidth=includeWidth?1:0;for(;i<4;i+=2-includeWidth){which=cssExpand[i];attrs[\"margin\"+which]=attrs[\"padding\"+which]=type;}if(includeWidth){attrs.opacity=attrs.width=type;}return attrs;}function createTween(value,prop,animation){var tween,collection=(Animation.tweeners[prop]||[]).concat(Animation.tweeners[\"*\"]),index=0,length=collection.length;for(;index<length;index++){if(tween=collection[index].call(animation,prop,value)){// We're done with this property\nreturn tween;}}}function defaultPrefilter(elem,props,opts){/* jshint validthis: true */var prop,value,toggle,tween,hooks,oldfire,display,checkDisplay,anim=this,orig={},style=elem.style,hidden=elem.nodeType&&isHidden(elem),dataShow=dataPriv.get(elem,\"fxshow\");// Handle queue: false promises\nif(!opts.queue){hooks=jQuery._queueHooks(elem,\"fx\");if(hooks.unqueued==null){hooks.unqueued=0;oldfire=hooks.empty.fire;hooks.empty.fire=function(){if(!hooks.unqueued){oldfire();}};}hooks.unqueued++;anim.always(function(){// Ensure the complete handler is called before this completes\nanim.always(function(){hooks.unqueued--;if(!jQuery.queue(elem,\"fx\").length){hooks.empty.fire();}});});}// Height/width overflow pass\nif(elem.nodeType===1&&(\"height\"in props||\"width\"in props)){// Make sure that nothing sneaks out\n// Record all 3 overflow attributes because IE9-10 do not\n// change the overflow attribute when overflowX and\n// overflowY are set to the same value\nopts.overflow=[style.overflow,style.overflowX,style.overflowY];// Set display property to inline-block for height/width\n// animations on inline elements that are having width/height animated\ndisplay=jQuery.css(elem,\"display\");// Test default display if display is currently \"none\"\ncheckDisplay=display===\"none\"?dataPriv.get(elem,\"olddisplay\")||defaultDisplay(elem.nodeName):display;if(checkDisplay===\"inline\"&&jQuery.css(elem,\"float\")===\"none\"){style.display=\"inline-block\";}}if(opts.overflow){style.overflow=\"hidden\";anim.always(function(){style.overflow=opts.overflow[0];style.overflowX=opts.overflow[1];style.overflowY=opts.overflow[2];});}// show/hide pass\nfor(prop in props){value=props[prop];if(rfxtypes.exec(value)){delete props[prop];toggle=toggle||value===\"toggle\";if(value===(hidden?\"hide\":\"show\")){// If there is dataShow left over from a stopped hide or show\n// and we are going to proceed with show, we should pretend to be hidden\nif(value===\"show\"&&dataShow&&dataShow[prop]!==undefined){hidden=true;}else{continue;}}orig[prop]=dataShow&&dataShow[prop]||jQuery.style(elem,prop);// Any non-fx value stops us from restoring the original display value\n}else{display=undefined;}}if(!jQuery.isEmptyObject(orig)){if(dataShow){if(\"hidden\"in dataShow){hidden=dataShow.hidden;}}else{dataShow=dataPriv.access(elem,\"fxshow\",{});}// Store state if its toggle - enables .stop().toggle() to \"reverse\"\nif(toggle){dataShow.hidden=!hidden;}if(hidden){jQuery(elem).show();}else{anim.done(function(){jQuery(elem).hide();});}anim.done(function(){var prop;dataPriv.remove(elem,\"fxshow\");for(prop in orig){jQuery.style(elem,prop,orig[prop]);}});for(prop in orig){tween=createTween(hidden?dataShow[prop]:0,prop,anim);if(!(prop in dataShow)){dataShow[prop]=tween.start;if(hidden){tween.end=tween.start;tween.start=prop===\"width\"||prop===\"height\"?1:0;}}}// If this is a noop like .hide().hide(), restore an overwritten display value\n}else if((display===\"none\"?defaultDisplay(elem.nodeName):display)===\"inline\"){style.display=display;}}function propFilter(props,specialEasing){var index,name,easing,value,hooks;// camelCase, specialEasing and expand cssHook pass\nfor(index in props){name=jQuery.camelCase(index);easing=specialEasing[name];value=props[index];if(jQuery.isArray(value)){easing=value[1];value=props[index]=value[0];}if(index!==name){props[name]=value;delete props[index];}hooks=jQuery.cssHooks[name];if(hooks&&\"expand\"in hooks){value=hooks.expand(value);delete props[name];// Not quite $.extend, this won't overwrite existing keys.\n// Reusing 'index' because we have the correct \"name\"\nfor(index in value){if(!(index in props)){props[index]=value[index];specialEasing[index]=easing;}}}else{specialEasing[name]=easing;}}}function Animation(elem,properties,options){var result,stopped,index=0,length=Animation.prefilters.length,deferred=jQuery.Deferred().always(function(){// Don't match elem in the :animated selector\ndelete tick.elem;}),tick=function tick(){if(stopped){return false;}var currentTime=fxNow||createFxNow(),remaining=Math.max(0,animation.startTime+animation.duration-currentTime),// Support: Android 2.3\n// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\ntemp=remaining/animation.duration||0,percent=1-temp,index=0,length=animation.tweens.length;for(;index<length;index++){animation.tweens[index].run(percent);}deferred.notifyWith(elem,[animation,percent,remaining]);if(percent<1&&length){return remaining;}else{deferred.resolveWith(elem,[animation]);return false;}},animation=deferred.promise({elem:elem,props:jQuery.extend({},properties),opts:jQuery.extend(true,{specialEasing:{},easing:jQuery.easing._default},options),originalProperties:properties,originalOptions:options,startTime:fxNow||createFxNow(),duration:options.duration,tweens:[],createTween:function createTween(prop,end){var tween=jQuery.Tween(elem,animation.opts,prop,end,animation.opts.specialEasing[prop]||animation.opts.easing);animation.tweens.push(tween);return tween;},stop:function stop(gotoEnd){var index=0,// If we are going to the end, we want to run all the tweens\n// otherwise we skip this part\nlength=gotoEnd?animation.tweens.length:0;if(stopped){return this;}stopped=true;for(;index<length;index++){animation.tweens[index].run(1);}// Resolve when we played the last frame; otherwise, reject\nif(gotoEnd){deferred.notifyWith(elem,[animation,1,0]);deferred.resolveWith(elem,[animation,gotoEnd]);}else{deferred.rejectWith(elem,[animation,gotoEnd]);}return this;}}),props=animation.props;propFilter(props,animation.opts.specialEasing);for(;index<length;index++){result=Animation.prefilters[index].call(animation,elem,props,animation.opts);if(result){if(jQuery.isFunction(result.stop)){jQuery._queueHooks(animation.elem,animation.opts.queue).stop=jQuery.proxy(result.stop,result);}return result;}}jQuery.map(props,createTween,animation);if(jQuery.isFunction(animation.opts.start)){animation.opts.start.call(elem,animation);}jQuery.fx.timer(jQuery.extend(tick,{elem:elem,anim:animation,queue:animation.opts.queue}));// attach callbacks from options\nreturn animation.progress(animation.opts.progress).done(animation.opts.done,animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);}jQuery.Animation=jQuery.extend(Animation,{tweeners:{\"*\":[function(prop,value){var tween=this.createTween(prop,value);adjustCSS(tween.elem,prop,rcssNum.exec(value),tween);return tween;}]},tweener:function tweener(props,callback){if(jQuery.isFunction(props)){callback=props;props=[\"*\"];}else{props=props.match(rnotwhite);}var prop,index=0,length=props.length;for(;index<length;index++){prop=props[index];Animation.tweeners[prop]=Animation.tweeners[prop]||[];Animation.tweeners[prop].unshift(callback);}},prefilters:[defaultPrefilter],prefilter:function prefilter(callback,prepend){if(prepend){Animation.prefilters.unshift(callback);}else{Animation.prefilters.push(callback);}}});jQuery.speed=function(speed,easing,fn){var opt=speed&&(typeof speed===\"undefined\"?\"undefined\":_typeof(speed))===\"object\"?jQuery.extend({},speed):{complete:fn||!fn&&easing||jQuery.isFunction(speed)&&speed,duration:speed,easing:fn&&easing||easing&&!jQuery.isFunction(easing)&&easing};opt.duration=jQuery.fx.off?0:typeof opt.duration===\"number\"?opt.duration:opt.duration in jQuery.fx.speeds?jQuery.fx.speeds[opt.duration]:jQuery.fx.speeds._default;// Normalize opt.queue - true/undefined/null -> \"fx\"\nif(opt.queue==null||opt.queue===true){opt.queue=\"fx\";}// Queueing\nopt.old=opt.complete;opt.complete=function(){if(jQuery.isFunction(opt.old)){opt.old.call(this);}if(opt.queue){jQuery.dequeue(this,opt.queue);}};return opt;};jQuery.fn.extend({fadeTo:function fadeTo(speed,to,easing,callback){// Show any hidden elements after setting opacity to 0\nreturn this.filter(isHidden).css(\"opacity\",0).show()// Animate to the value specified\n.end().animate({opacity:to},speed,easing,callback);},animate:function animate(prop,speed,easing,callback){var empty=jQuery.isEmptyObject(prop),optall=jQuery.speed(speed,easing,callback),doAnimation=function doAnimation(){// Operate on a copy of prop so per-property easing won't be lost\nvar anim=Animation(this,jQuery.extend({},prop),optall);// Empty animations, or finishing resolves immediately\nif(empty||dataPriv.get(this,\"finish\")){anim.stop(true);}};doAnimation.finish=doAnimation;return empty||optall.queue===false?this.each(doAnimation):this.queue(optall.queue,doAnimation);},stop:function stop(type,clearQueue,gotoEnd){var stopQueue=function stopQueue(hooks){var stop=hooks.stop;delete hooks.stop;stop(gotoEnd);};if(typeof type!==\"string\"){gotoEnd=clearQueue;clearQueue=type;type=undefined;}if(clearQueue&&type!==false){this.queue(type||\"fx\",[]);}return this.each(function(){var dequeue=true,index=type!=null&&type+\"queueHooks\",timers=jQuery.timers,data=dataPriv.get(this);if(index){if(data[index]&&data[index].stop){stopQueue(data[index]);}}else{for(index in data){if(data[index]&&data[index].stop&&rrun.test(index)){stopQueue(data[index]);}}}for(index=timers.length;index--;){if(timers[index].elem===this&&(type==null||timers[index].queue===type)){timers[index].anim.stop(gotoEnd);dequeue=false;timers.splice(index,1);}}// Start the next in the queue if the last step wasn't forced.\n// Timers currently will call their complete callbacks, which\n// will dequeue but only if they were gotoEnd.\nif(dequeue||!gotoEnd){jQuery.dequeue(this,type);}});},finish:function finish(type){if(type!==false){type=type||\"fx\";}return this.each(function(){var index,data=dataPriv.get(this),queue=data[type+\"queue\"],hooks=data[type+\"queueHooks\"],timers=jQuery.timers,length=queue?queue.length:0;// Enable finishing flag on private data\ndata.finish=true;// Empty the queue first\njQuery.queue(this,type,[]);if(hooks&&hooks.stop){hooks.stop.call(this,true);}// Look for any active animations, and finish them\nfor(index=timers.length;index--;){if(timers[index].elem===this&&timers[index].queue===type){timers[index].anim.stop(true);timers.splice(index,1);}}// Look for any animations in the old queue and finish them\nfor(index=0;index<length;index++){if(queue[index]&&queue[index].finish){queue[index].finish.call(this);}}// Turn off finishing flag\ndelete data.finish;});}});jQuery.each([\"toggle\",\"show\",\"hide\"],function(i,name){var cssFn=jQuery.fn[name];jQuery.fn[name]=function(speed,easing,callback){return speed==null||typeof speed===\"boolean\"?cssFn.apply(this,arguments):this.animate(genFx(name,true),speed,easing,callback);};});// Generate shortcuts for custom animations\njQuery.each({slideDown:genFx(\"show\"),slideUp:genFx(\"hide\"),slideToggle:genFx(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(name,props){jQuery.fn[name]=function(speed,easing,callback){return this.animate(props,speed,easing,callback);};});jQuery.timers=[];jQuery.fx.tick=function(){var timer,i=0,timers=jQuery.timers;fxNow=jQuery.now();for(;i<timers.length;i++){timer=timers[i];// Checks the timer has not already been removed\nif(!timer()&&timers[i]===timer){timers.splice(i--,1);}}if(!timers.length){jQuery.fx.stop();}fxNow=undefined;};jQuery.fx.timer=function(timer){jQuery.timers.push(timer);if(timer()){jQuery.fx.start();}else{jQuery.timers.pop();}};jQuery.fx.interval=13;jQuery.fx.start=function(){if(!timerId){timerId=window.setInterval(jQuery.fx.tick,jQuery.fx.interval);}};jQuery.fx.stop=function(){window.clearInterval(timerId);timerId=null;};jQuery.fx.speeds={slow:600,fast:200,// Default speed\n_default:400};// Based off of the plugin by Clint Helfers, with permission.\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay=function(time,type){time=jQuery.fx?jQuery.fx.speeds[time]||time:time;type=type||\"fx\";return this.queue(type,function(next,hooks){var timeout=window.setTimeout(next,time);hooks.stop=function(){window.clearTimeout(timeout);};});};(function(){var input=document.createElement(\"input\"),select=document.createElement(\"select\"),opt=select.appendChild(document.createElement(\"option\"));input.type=\"checkbox\";// Support: iOS<=5.1, Android<=4.2+\n// Default value for a checkbox should be \"on\"\nsupport.checkOn=input.value!==\"\";// Support: IE<=11+\n// Must access selectedIndex to make default options select\nsupport.optSelected=opt.selected;// Support: Android<=2.3\n// Options inside disabled selects are incorrectly marked as disabled\nselect.disabled=true;support.optDisabled=!opt.disabled;// Support: IE<=11+\n// An input loses its value after becoming a radio\ninput=document.createElement(\"input\");input.value=\"t\";input.type=\"radio\";support.radioValue=input.value===\"t\";})();var boolHook,attrHandle=jQuery.expr.attrHandle;jQuery.fn.extend({attr:function attr(name,value){return access(this,jQuery.attr,name,value,arguments.length>1);},removeAttr:function removeAttr(name){return this.each(function(){jQuery.removeAttr(this,name);});}});jQuery.extend({attr:function attr(elem,name,value){var ret,hooks,nType=elem.nodeType;// Don't get/set attributes on text, comment and attribute nodes\nif(nType===3||nType===8||nType===2){return;}// Fallback to prop when attributes are not supported\nif(typeof elem.getAttribute===\"undefined\"){return jQuery.prop(elem,name,value);}// All attributes are lowercase\n// Grab necessary hook if one is defined\nif(nType!==1||!jQuery.isXMLDoc(elem)){name=name.toLowerCase();hooks=jQuery.attrHooks[name]||(jQuery.expr.match.bool.test(name)?boolHook:undefined);}if(value!==undefined){if(value===null){jQuery.removeAttr(elem,name);return;}if(hooks&&\"set\"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){return ret;}elem.setAttribute(name,value+\"\");return value;}if(hooks&&\"get\"in hooks&&(ret=hooks.get(elem,name))!==null){return ret;}ret=jQuery.find.attr(elem,name);// Non-existent attributes return null, we normalize to undefined\nreturn ret==null?undefined:ret;},attrHooks:{type:{set:function set(elem,value){if(!support.radioValue&&value===\"radio\"&&jQuery.nodeName(elem,\"input\")){var val=elem.value;elem.setAttribute(\"type\",value);if(val){elem.value=val;}return value;}}}},removeAttr:function removeAttr(elem,value){var name,propName,i=0,attrNames=value&&value.match(rnotwhite);if(attrNames&&elem.nodeType===1){while(name=attrNames[i++]){propName=jQuery.propFix[name]||name;// Boolean attributes get special treatment (#10870)\nif(jQuery.expr.match.bool.test(name)){// Set corresponding property to false\nelem[propName]=false;}elem.removeAttribute(name);}}}});// Hooks for boolean attributes\nboolHook={set:function set(elem,value,name){if(value===false){// Remove boolean attributes when set to false\njQuery.removeAttr(elem,name);}else{elem.setAttribute(name,name);}return name;}};jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g),function(i,name){var getter=attrHandle[name]||jQuery.find.attr;attrHandle[name]=function(elem,name,isXML){var ret,handle;if(!isXML){// Avoid an infinite loop by temporarily removing this function from the getter\nhandle=attrHandle[name];attrHandle[name]=ret;ret=getter(elem,name,isXML)!=null?name.toLowerCase():null;attrHandle[name]=handle;}return ret;};});var rfocusable=/^(?:input|select|textarea|button)$/i,rclickable=/^(?:a|area)$/i;jQuery.fn.extend({prop:function prop(name,value){return access(this,jQuery.prop,name,value,arguments.length>1);},removeProp:function removeProp(name){return this.each(function(){delete this[jQuery.propFix[name]||name];});}});jQuery.extend({prop:function prop(elem,name,value){var ret,hooks,nType=elem.nodeType;// Don't get/set properties on text, comment and attribute nodes\nif(nType===3||nType===8||nType===2){return;}if(nType!==1||!jQuery.isXMLDoc(elem)){// Fix name and attach hooks\nname=jQuery.propFix[name]||name;hooks=jQuery.propHooks[name];}if(value!==undefined){if(hooks&&\"set\"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){return ret;}return elem[name]=value;}if(hooks&&\"get\"in hooks&&(ret=hooks.get(elem,name))!==null){return ret;}return elem[name];},propHooks:{tabIndex:{get:function get(elem){// elem.tabIndex doesn't always return the\n// correct value when it hasn't been explicitly set\n// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n// Use proper attribute retrieval(#12072)\nvar tabindex=jQuery.find.attr(elem,\"tabindex\");return tabindex?parseInt(tabindex,10):rfocusable.test(elem.nodeName)||rclickable.test(elem.nodeName)&&elem.href?0:-1;}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}});// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\nif(!support.optSelected){jQuery.propHooks.selected={get:function get(elem){var parent=elem.parentNode;if(parent&&parent.parentNode){parent.parentNode.selectedIndex;}return null;},set:function set(elem){var parent=elem.parentNode;if(parent){parent.selectedIndex;if(parent.parentNode){parent.parentNode.selectedIndex;}}}};}jQuery.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){jQuery.propFix[this.toLowerCase()]=this;});var rclass=/[\\t\\r\\n\\f]/g;function getClass(elem){return elem.getAttribute&&elem.getAttribute(\"class\")||\"\";}jQuery.fn.extend({addClass:function addClass(value){var classes,elem,cur,curValue,clazz,j,finalValue,i=0;if(jQuery.isFunction(value)){return this.each(function(j){jQuery(this).addClass(value.call(this,j,getClass(this)));});}if(typeof value===\"string\"&&value){classes=value.match(rnotwhite)||[];while(elem=this[i++]){curValue=getClass(elem);cur=elem.nodeType===1&&(\" \"+curValue+\" \").replace(rclass,\" \");if(cur){j=0;while(clazz=classes[j++]){if(cur.indexOf(\" \"+clazz+\" \")<0){cur+=clazz+\" \";}}// Only assign if different to avoid unneeded rendering.\nfinalValue=jQuery.trim(cur);if(curValue!==finalValue){elem.setAttribute(\"class\",finalValue);}}}}return this;},removeClass:function removeClass(value){var classes,elem,cur,curValue,clazz,j,finalValue,i=0;if(jQuery.isFunction(value)){return this.each(function(j){jQuery(this).removeClass(value.call(this,j,getClass(this)));});}if(!arguments.length){return this.attr(\"class\",\"\");}if(typeof value===\"string\"&&value){classes=value.match(rnotwhite)||[];while(elem=this[i++]){curValue=getClass(elem);// This expression is here for better compressibility (see addClass)\ncur=elem.nodeType===1&&(\" \"+curValue+\" \").replace(rclass,\" \");if(cur){j=0;while(clazz=classes[j++]){// Remove *all* instances\nwhile(cur.indexOf(\" \"+clazz+\" \")>-1){cur=cur.replace(\" \"+clazz+\" \",\" \");}}// Only assign if different to avoid unneeded rendering.\nfinalValue=jQuery.trim(cur);if(curValue!==finalValue){elem.setAttribute(\"class\",finalValue);}}}}return this;},toggleClass:function toggleClass(value,stateVal){var type=typeof value===\"undefined\"?\"undefined\":_typeof(value);if(typeof stateVal===\"boolean\"&&type===\"string\"){return stateVal?this.addClass(value):this.removeClass(value);}if(jQuery.isFunction(value)){return this.each(function(i){jQuery(this).toggleClass(value.call(this,i,getClass(this),stateVal),stateVal);});}return this.each(function(){var className,i,self,classNames;if(type===\"string\"){// Toggle individual class names\ni=0;self=jQuery(this);classNames=value.match(rnotwhite)||[];while(className=classNames[i++]){// Check each className given, space separated list\nif(self.hasClass(className)){self.removeClass(className);}else{self.addClass(className);}}// Toggle whole class name\n}else if(value===undefined||type===\"boolean\"){className=getClass(this);if(className){// Store className if set\ndataPriv.set(this,\"__className__\",className);}// If the element has a class name or if we're passed `false`,\n// then remove the whole classname (if there was one, the above saved it).\n// Otherwise bring back whatever was previously saved (if anything),\n// falling back to the empty string if nothing was stored.\nif(this.setAttribute){this.setAttribute(\"class\",className||value===false?\"\":dataPriv.get(this,\"__className__\")||\"\");}}});},hasClass:function hasClass(selector){var className,elem,i=0;className=\" \"+selector+\" \";while(elem=this[i++]){if(elem.nodeType===1&&(\" \"+getClass(elem)+\" \").replace(rclass,\" \").indexOf(className)>-1){return true;}}return false;}});var rreturn=/\\r/g,rspaces=/[\\x20\\t\\r\\n\\f]+/g;jQuery.fn.extend({val:function val(value){var hooks,ret,isFunction,elem=this[0];if(!arguments.length){if(elem){hooks=jQuery.valHooks[elem.type]||jQuery.valHooks[elem.nodeName.toLowerCase()];if(hooks&&\"get\"in hooks&&(ret=hooks.get(elem,\"value\"))!==undefined){return ret;}ret=elem.value;return typeof ret===\"string\"?// Handle most common string cases\nret.replace(rreturn,\"\"):// Handle cases where value is null/undef or number\nret==null?\"\":ret;}return;}isFunction=jQuery.isFunction(value);return this.each(function(i){var val;if(this.nodeType!==1){return;}if(isFunction){val=value.call(this,i,jQuery(this).val());}else{val=value;}// Treat null/undefined as \"\"; convert numbers to string\nif(val==null){val=\"\";}else if(typeof val===\"number\"){val+=\"\";}else if(jQuery.isArray(val)){val=jQuery.map(val,function(value){return value==null?\"\":value+\"\";});}hooks=jQuery.valHooks[this.type]||jQuery.valHooks[this.nodeName.toLowerCase()];// If set returns undefined, fall back to normal setting\nif(!hooks||!(\"set\"in hooks)||hooks.set(this,val,\"value\")===undefined){this.value=val;}});}});jQuery.extend({valHooks:{option:{get:function get(elem){var val=jQuery.find.attr(elem,\"value\");return val!=null?val:// Support: IE10-11+\n// option.text throws exceptions (#14686, #14858)\n// Strip and collapse whitespace\n// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\njQuery.trim(jQuery.text(elem)).replace(rspaces,\" \");}},select:{get:function get(elem){var value,option,options=elem.options,index=elem.selectedIndex,one=elem.type===\"select-one\"||index<0,values=one?null:[],max=one?index+1:options.length,i=index<0?max:one?index:0;// Loop through all the selected options\nfor(;i<max;i++){option=options[i];// IE8-9 doesn't update selected after form reset (#2551)\nif((option.selected||i===index)&&(// Don't return options that are disabled or in a disabled optgroup\nsupport.optDisabled?!option.disabled:option.getAttribute(\"disabled\")===null)&&(!option.parentNode.disabled||!jQuery.nodeName(option.parentNode,\"optgroup\"))){// Get the specific value for the option\nvalue=jQuery(option).val();// We don't need an array for one selects\nif(one){return value;}// Multi-Selects return an array\nvalues.push(value);}}return values;},set:function set(elem,value){var optionSet,option,options=elem.options,values=jQuery.makeArray(value),i=options.length;while(i--){option=options[i];if(option.selected=jQuery.inArray(jQuery.valHooks.option.get(option),values)>-1){optionSet=true;}}// Force browsers to behave consistently when non-matching value is set\nif(!optionSet){elem.selectedIndex=-1;}return values;}}}});// Radios and checkboxes getter/setter\njQuery.each([\"radio\",\"checkbox\"],function(){jQuery.valHooks[this]={set:function set(elem,value){if(jQuery.isArray(value)){return elem.checked=jQuery.inArray(jQuery(elem).val(),value)>-1;}}};if(!support.checkOn){jQuery.valHooks[this].get=function(elem){return elem.getAttribute(\"value\")===null?\"on\":elem.value;};}});// Return jQuery for attributes-only inclusion\nvar rfocusMorph=/^(?:focusinfocus|focusoutblur)$/;jQuery.extend(jQuery.event,{trigger:function trigger(event,data,elem,onlyHandlers){var i,cur,tmp,bubbleType,ontype,handle,special,eventPath=[elem||document],type=hasOwn.call(event,\"type\")?event.type:event,namespaces=hasOwn.call(event,\"namespace\")?event.namespace.split(\".\"):[];cur=tmp=elem=elem||document;// Don't do events on text and comment nodes\nif(elem.nodeType===3||elem.nodeType===8){return;}// focus/blur morphs to focusin/out; ensure we're not firing them right now\nif(rfocusMorph.test(type+jQuery.event.triggered)){return;}if(type.indexOf(\".\")>-1){// Namespaced trigger; create a regexp to match event type in handle()\nnamespaces=type.split(\".\");type=namespaces.shift();namespaces.sort();}ontype=type.indexOf(\":\")<0&&\"on\"+type;// Caller can pass in a jQuery.Event object, Object, or just an event type string\nevent=event[jQuery.expando]?event:new jQuery.Event(type,(typeof event===\"undefined\"?\"undefined\":_typeof(event))===\"object\"&&event);// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\nevent.isTrigger=onlyHandlers?2:3;event.namespace=namespaces.join(\".\");event.rnamespace=event.namespace?new RegExp(\"(^|\\\\.)\"+namespaces.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null;// Clean up the event in case it is being reused\nevent.result=undefined;if(!event.target){event.target=elem;}// Clone any incoming data and prepend the event, creating the handler arg list\ndata=data==null?[event]:jQuery.makeArray(data,[event]);// Allow special events to draw outside the lines\nspecial=jQuery.event.special[type]||{};if(!onlyHandlers&&special.trigger&&special.trigger.apply(elem,data)===false){return;}// Determine event propagation path in advance, per W3C events spec (#9951)\n// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\nif(!onlyHandlers&&!special.noBubble&&!jQuery.isWindow(elem)){bubbleType=special.delegateType||type;if(!rfocusMorph.test(bubbleType+type)){cur=cur.parentNode;}for(;cur;cur=cur.parentNode){eventPath.push(cur);tmp=cur;}// Only add window if we got to document (e.g., not plain obj or detached DOM)\nif(tmp===(elem.ownerDocument||document)){eventPath.push(tmp.defaultView||tmp.parentWindow||window);}}// Fire handlers on the event path\ni=0;while((cur=eventPath[i++])&&!event.isPropagationStopped()){event.type=i>1?bubbleType:special.bindType||type;// jQuery handler\nhandle=(dataPriv.get(cur,\"events\")||{})[event.type]&&dataPriv.get(cur,\"handle\");if(handle){handle.apply(cur,data);}// Native handler\nhandle=ontype&&cur[ontype];if(handle&&handle.apply&&acceptData(cur)){event.result=handle.apply(cur,data);if(event.result===false){event.preventDefault();}}}event.type=type;// If nobody prevented the default action, do it now\nif(!onlyHandlers&&!event.isDefaultPrevented()){if((!special._default||special._default.apply(eventPath.pop(),data)===false)&&acceptData(elem)){// Call a native DOM method on the target with the same name name as the event.\n// Don't do default actions on window, that's where global variables be (#6170)\nif(ontype&&jQuery.isFunction(elem[type])&&!jQuery.isWindow(elem)){// Don't re-trigger an onFOO event when we call its FOO() method\ntmp=elem[ontype];if(tmp){elem[ontype]=null;}// Prevent re-triggering of the same event, since we already bubbled it above\njQuery.event.triggered=type;elem[type]();jQuery.event.triggered=undefined;if(tmp){elem[ontype]=tmp;}}}}return event.result;},// Piggyback on a donor event to simulate a different one\nsimulate:function simulate(type,elem,event){var e=jQuery.extend(new jQuery.Event(),event,{type:type,isSimulated:true// Previously, `originalEvent: {}` was set here, so stopPropagation call\n// would not be triggered on donor event, since in our own\n// jQuery.event.stopPropagation function we had a check for existence of\n// originalEvent.stopPropagation method, so, consequently it would be a noop.\n//\n// But now, this \"simulate\" function is used only for events\n// for which stopPropagation() is noop, so there is no need for that anymore.\n//\n// For the 1.x branch though, guard for \"click\" and \"submit\"\n// events is still used, but was moved to jQuery.event.stopPropagation function\n// because `originalEvent` should point to the original event for the constancy\n// with other events and for more focused logic\n});jQuery.event.trigger(e,null,elem);if(e.isDefaultPrevented()){event.preventDefault();}}});jQuery.fn.extend({trigger:function trigger(type,data){return this.each(function(){jQuery.event.trigger(type,data,this);});},triggerHandler:function triggerHandler(type,data){var elem=this[0];if(elem){return jQuery.event.trigger(type,data,elem,true);}}});jQuery.each((\"blur focus focusin focusout load resize scroll unload click dblclick \"+\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \"+\"change select submit keydown keypress keyup error contextmenu\").split(\" \"),function(i,name){// Handle event binding\njQuery.fn[name]=function(data,fn){return arguments.length>0?this.on(name,null,data,fn):this.trigger(name);};});jQuery.fn.extend({hover:function hover(fnOver,fnOut){return this.mouseenter(fnOver).mouseleave(fnOut||fnOver);}});support.focusin=\"onfocusin\"in window;// Support: Firefox\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome, Safari\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\nif(!support.focusin){jQuery.each({focus:\"focusin\",blur:\"focusout\"},function(orig,fix){// Attach a single capturing handler on the document while someone wants focusin/focusout\nvar handler=function handler(event){jQuery.event.simulate(fix,event.target,jQuery.event.fix(event));};jQuery.event.special[fix]={setup:function setup(){var doc=this.ownerDocument||this,attaches=dataPriv.access(doc,fix);if(!attaches){doc.addEventListener(orig,handler,true);}dataPriv.access(doc,fix,(attaches||0)+1);},teardown:function teardown(){var doc=this.ownerDocument||this,attaches=dataPriv.access(doc,fix)-1;if(!attaches){doc.removeEventListener(orig,handler,true);dataPriv.remove(doc,fix);}else{dataPriv.access(doc,fix,attaches);}}};});}var location=window.location;var nonce=jQuery.now();var rquery=/\\?/;// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON=function(data){return JSON.parse(data+\"\");};// Cross-browser xml parsing\njQuery.parseXML=function(data){var xml;if(!data||typeof data!==\"string\"){return null;}// Support: IE9\ntry{xml=new window.DOMParser().parseFromString(data,\"text/xml\");}catch(e){xml=undefined;}if(!xml||xml.getElementsByTagName(\"parsererror\").length){jQuery.error(\"Invalid XML: \"+data);}return xml;};var rhash=/#.*$/,rts=/([?&])_=[^&]*/,rheaders=/^(.*?):[ \\t]*([^\\r\\n]*)$/mg,// #7653, #8125, #8152: local protocol detection\nrlocalProtocol=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,rnoContent=/^(?:GET|HEAD)$/,rprotocol=/^\\/\\//,/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */prefilters={},/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */transports={},// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\nallTypes=\"*/\".concat(\"*\"),// Anchor tag for parsing the document origin\noriginAnchor=document.createElement(\"a\");originAnchor.href=location.href;// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports(structure){// dataTypeExpression is optional and defaults to \"*\"\nreturn function(dataTypeExpression,func){if(typeof dataTypeExpression!==\"string\"){func=dataTypeExpression;dataTypeExpression=\"*\";}var dataType,i=0,dataTypes=dataTypeExpression.toLowerCase().match(rnotwhite)||[];if(jQuery.isFunction(func)){// For each dataType in the dataTypeExpression\nwhile(dataType=dataTypes[i++]){// Prepend if requested\nif(dataType[0]===\"+\"){dataType=dataType.slice(1)||\"*\";(structure[dataType]=structure[dataType]||[]).unshift(func);// Otherwise append\n}else{(structure[dataType]=structure[dataType]||[]).push(func);}}}};}// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports(structure,options,originalOptions,jqXHR){var inspected={},seekingTransport=structure===transports;function inspect(dataType){var selected;inspected[dataType]=true;jQuery.each(structure[dataType]||[],function(_,prefilterOrFactory){var dataTypeOrTransport=prefilterOrFactory(options,originalOptions,jqXHR);if(typeof dataTypeOrTransport===\"string\"&&!seekingTransport&&!inspected[dataTypeOrTransport]){options.dataTypes.unshift(dataTypeOrTransport);inspect(dataTypeOrTransport);return false;}else if(seekingTransport){return!(selected=dataTypeOrTransport);}});return selected;}return inspect(options.dataTypes[0])||!inspected[\"*\"]&&inspect(\"*\");}// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend(target,src){var key,deep,flatOptions=jQuery.ajaxSettings.flatOptions||{};for(key in src){if(src[key]!==undefined){(flatOptions[key]?target:deep||(deep={}))[key]=src[key];}}if(deep){jQuery.extend(true,target,deep);}return target;}/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */function ajaxHandleResponses(s,jqXHR,responses){var ct,type,finalDataType,firstDataType,contents=s.contents,dataTypes=s.dataTypes;// Remove auto dataType and get content-type in the process\nwhile(dataTypes[0]===\"*\"){dataTypes.shift();if(ct===undefined){ct=s.mimeType||jqXHR.getResponseHeader(\"Content-Type\");}}// Check if we're dealing with a known content-type\nif(ct){for(type in contents){if(contents[type]&&contents[type].test(ct)){dataTypes.unshift(type);break;}}}// Check to see if we have a response for the expected dataType\nif(dataTypes[0]in responses){finalDataType=dataTypes[0];}else{// Try convertible dataTypes\nfor(type in responses){if(!dataTypes[0]||s.converters[type+\" \"+dataTypes[0]]){finalDataType=type;break;}if(!firstDataType){firstDataType=type;}}// Or just use first one\nfinalDataType=finalDataType||firstDataType;}// If we found a dataType\n// We add the dataType to the list if needed\n// and return the corresponding response\nif(finalDataType){if(finalDataType!==dataTypes[0]){dataTypes.unshift(finalDataType);}return responses[finalDataType];}}/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */function ajaxConvert(s,response,jqXHR,isSuccess){var conv2,current,conv,tmp,prev,converters={},// Work with a copy of dataTypes in case we need to modify it for conversion\ndataTypes=s.dataTypes.slice();// Create converters map with lowercased keys\nif(dataTypes[1]){for(conv in s.converters){converters[conv.toLowerCase()]=s.converters[conv];}}current=dataTypes.shift();// Convert to each sequential dataType\nwhile(current){if(s.responseFields[current]){jqXHR[s.responseFields[current]]=response;}// Apply the dataFilter if provided\nif(!prev&&isSuccess&&s.dataFilter){response=s.dataFilter(response,s.dataType);}prev=current;current=dataTypes.shift();if(current){// There's only work to do if current dataType is non-auto\nif(current===\"*\"){current=prev;// Convert response if prev dataType is non-auto and differs from current\n}else if(prev!==\"*\"&&prev!==current){// Seek a direct converter\nconv=converters[prev+\" \"+current]||converters[\"* \"+current];// If none found, seek a pair\nif(!conv){for(conv2 in converters){// If conv2 outputs current\ntmp=conv2.split(\" \");if(tmp[1]===current){// If prev can be converted to accepted input\nconv=converters[prev+\" \"+tmp[0]]||converters[\"* \"+tmp[0]];if(conv){// Condense equivalence converters\nif(conv===true){conv=converters[conv2];// Otherwise, insert the intermediate dataType\n}else if(converters[conv2]!==true){current=tmp[0];dataTypes.unshift(tmp[1]);}break;}}}}// Apply converter (if not an equivalence)\nif(conv!==true){// Unless errors are allowed to bubble, catch and return them\nif(conv&&s.throws){response=conv(response);}else{try{response=conv(response);}catch(e){return{state:\"parsererror\",error:conv?e:\"No conversion from \"+prev+\" to \"+current};}}}}}}return{state:\"success\",data:response};}jQuery.extend({// Counter for holding the number of active queries\nactive:0,// Last-Modified header cache for next request\nlastModified:{},etag:{},ajaxSettings:{url:location.href,type:\"GET\",isLocal:rlocalProtocol.test(location.protocol),global:true,processData:true,async:true,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/accepts:{\"*\":allTypes,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},// Data converters\n// Keys separate source (or catchall \"*\") and destination types with a single space\nconverters:{// Convert anything to text\n\"* text\":String,// Text to html (true = no transformation)\n\"text html\":true,// Evaluate text as a json expression\n\"text json\":jQuery.parseJSON,// Parse text as xml\n\"text xml\":jQuery.parseXML},// For options that shouldn't be deep extended:\n// you can add your own custom options here if\n// and when you create one that shouldn't be\n// deep extended (see ajaxExtend)\nflatOptions:{url:true,context:true}},// Creates a full fledged settings object into target\n// with both ajaxSettings and settings fields.\n// If target is omitted, writes into ajaxSettings.\najaxSetup:function ajaxSetup(target,settings){return settings?// Building a settings object\najaxExtend(ajaxExtend(target,jQuery.ajaxSettings),settings):// Extending ajaxSettings\najaxExtend(jQuery.ajaxSettings,target);},ajaxPrefilter:addToPrefiltersOrTransports(prefilters),ajaxTransport:addToPrefiltersOrTransports(transports),// Main method\najax:function ajax(url,options){// If url is an object, simulate pre-1.5 signature\nif((typeof url===\"undefined\"?\"undefined\":_typeof(url))===\"object\"){options=url;url=undefined;}// Force options to be an object\noptions=options||{};var transport,// URL without anti-cache param\ncacheURL,// Response headers\nresponseHeadersString,responseHeaders,// timeout handle\ntimeoutTimer,// Url cleanup var\nurlAnchor,// To know if global events are to be dispatched\nfireGlobals,// Loop variable\ni,// Create the final options object\ns=jQuery.ajaxSetup({},options),// Callbacks context\ncallbackContext=s.context||s,// Context for global events is callbackContext if it is a DOM node or jQuery collection\nglobalEventContext=s.context&&(callbackContext.nodeType||callbackContext.jquery)?jQuery(callbackContext):jQuery.event,// Deferreds\ndeferred=jQuery.Deferred(),completeDeferred=jQuery.Callbacks(\"once memory\"),// Status-dependent callbacks\n_statusCode=s.statusCode||{},// Headers (they are sent all at once)\nrequestHeaders={},requestHeadersNames={},// The jqXHR state\nstate=0,// Default abort message\nstrAbort=\"canceled\",// Fake xhr\njqXHR={readyState:0,// Builds headers hashtable if needed\ngetResponseHeader:function getResponseHeader(key){var match;if(state===2){if(!responseHeaders){responseHeaders={};while(match=rheaders.exec(responseHeadersString)){responseHeaders[match[1].toLowerCase()]=match[2];}}match=responseHeaders[key.toLowerCase()];}return match==null?null:match;},// Raw string\ngetAllResponseHeaders:function getAllResponseHeaders(){return state===2?responseHeadersString:null;},// Caches the header\nsetRequestHeader:function setRequestHeader(name,value){var lname=name.toLowerCase();if(!state){name=requestHeadersNames[lname]=requestHeadersNames[lname]||name;requestHeaders[name]=value;}return this;},// Overrides response content-type header\noverrideMimeType:function overrideMimeType(type){if(!state){s.mimeType=type;}return this;},// Status-dependent callbacks\nstatusCode:function statusCode(map){var code;if(map){if(state<2){for(code in map){// Lazy-add the new callback in a way that preserves old ones\n_statusCode[code]=[_statusCode[code],map[code]];}}else{// Execute the appropriate callbacks\njqXHR.always(map[jqXHR.status]);}}return this;},// Cancel the request\nabort:function abort(statusText){var finalText=statusText||strAbort;if(transport){transport.abort(finalText);}done(0,finalText);return this;}};// Attach deferreds\ndeferred.promise(jqXHR).complete=completeDeferred.add;jqXHR.success=jqXHR.done;jqXHR.error=jqXHR.fail;// Remove hash character (#7531: and string promotion)\n// Add protocol if not provided (prefilters might expect it)\n// Handle falsy url in the settings object (#10093: consistency with old signature)\n// We also use the url parameter if available\ns.url=((url||s.url||location.href)+\"\").replace(rhash,\"\").replace(rprotocol,location.protocol+\"//\");// Alias method option to type as per ticket #12004\ns.type=options.method||options.type||s.method||s.type;// Extract dataTypes list\ns.dataTypes=jQuery.trim(s.dataType||\"*\").toLowerCase().match(rnotwhite)||[\"\"];// A cross-domain request is in order when the origin doesn't match the current origin.\nif(s.crossDomain==null){urlAnchor=document.createElement(\"a\");// Support: IE8-11+\n// IE throws exception if url is malformed, e.g. http://example.com:80x/\ntry{urlAnchor.href=s.url;// Support: IE8-11+\n// Anchor's host property isn't correctly set when s.url is relative\nurlAnchor.href=urlAnchor.href;s.crossDomain=originAnchor.protocol+\"//\"+originAnchor.host!==urlAnchor.protocol+\"//\"+urlAnchor.host;}catch(e){// If there is an error parsing the URL, assume it is crossDomain,\n// it can be rejected by the transport if it is invalid\ns.crossDomain=true;}}// Convert data if not already a string\nif(s.data&&s.processData&&typeof s.data!==\"string\"){s.data=jQuery.param(s.data,s.traditional);}// Apply prefilters\ninspectPrefiltersOrTransports(prefilters,s,options,jqXHR);// If request was aborted inside a prefilter, stop there\nif(state===2){return jqXHR;}// We can fire global events as of now if asked to\n// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\nfireGlobals=jQuery.event&&s.global;// Watch for a new set of requests\nif(fireGlobals&&jQuery.active++===0){jQuery.event.trigger(\"ajaxStart\");}// Uppercase the type\ns.type=s.type.toUpperCase();// Determine if request has content\ns.hasContent=!rnoContent.test(s.type);// Save the URL in case we're toying with the If-Modified-Since\n// and/or If-None-Match header later on\ncacheURL=s.url;// More options handling for requests with no content\nif(!s.hasContent){// If data is available, append data to url\nif(s.data){cacheURL=s.url+=(rquery.test(cacheURL)?\"&\":\"?\")+s.data;// #9682: remove data so that it's not used in an eventual retry\ndelete s.data;}// Add anti-cache in url if needed\nif(s.cache===false){s.url=rts.test(cacheURL)?// If there is already a '_' parameter, set its value\ncacheURL.replace(rts,\"$1_=\"+nonce++):// Otherwise add one to the end\ncacheURL+(rquery.test(cacheURL)?\"&\":\"?\")+\"_=\"+nonce++;}}// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\nif(s.ifModified){if(jQuery.lastModified[cacheURL]){jqXHR.setRequestHeader(\"If-Modified-Since\",jQuery.lastModified[cacheURL]);}if(jQuery.etag[cacheURL]){jqXHR.setRequestHeader(\"If-None-Match\",jQuery.etag[cacheURL]);}}// Set the correct header, if data is being sent\nif(s.data&&s.hasContent&&s.contentType!==false||options.contentType){jqXHR.setRequestHeader(\"Content-Type\",s.contentType);}// Set the Accepts header for the server, depending on the dataType\njqXHR.setRequestHeader(\"Accept\",s.dataTypes[0]&&s.accepts[s.dataTypes[0]]?s.accepts[s.dataTypes[0]]+(s.dataTypes[0]!==\"*\"?\", \"+allTypes+\"; q=0.01\":\"\"):s.accepts[\"*\"]);// Check for headers option\nfor(i in s.headers){jqXHR.setRequestHeader(i,s.headers[i]);}// Allow custom headers/mimetypes and early abort\nif(s.beforeSend&&(s.beforeSend.call(callbackContext,jqXHR,s)===false||state===2)){// Abort if not done already and return\nreturn jqXHR.abort();}// Aborting is no longer a cancellation\nstrAbort=\"abort\";// Install callbacks on deferreds\nfor(i in{success:1,error:1,complete:1}){jqXHR[i](s[i]);}// Get transport\ntransport=inspectPrefiltersOrTransports(transports,s,options,jqXHR);// If no transport, we auto-abort\nif(!transport){done(-1,\"No Transport\");}else{jqXHR.readyState=1;// Send global event\nif(fireGlobals){globalEventContext.trigger(\"ajaxSend\",[jqXHR,s]);}// If request was aborted inside ajaxSend, stop there\nif(state===2){return jqXHR;}// Timeout\nif(s.async&&s.timeout>0){timeoutTimer=window.setTimeout(function(){jqXHR.abort(\"timeout\");},s.timeout);}try{state=1;transport.send(requestHeaders,done);}catch(e){// Propagate exception as error if not done\nif(state<2){done(-1,e);// Simply rethrow otherwise\n}else{throw e;}}}// Callback for when everything is done\nfunction done(status,nativeStatusText,responses,headers){var isSuccess,success,error,response,modified,statusText=nativeStatusText;// Called once\nif(state===2){return;}// State is \"done\" now\nstate=2;// Clear timeout if it exists\nif(timeoutTimer){window.clearTimeout(timeoutTimer);}// Dereference transport for early garbage collection\n// (no matter how long the jqXHR object will be used)\ntransport=undefined;// Cache response headers\nresponseHeadersString=headers||\"\";// Set readyState\njqXHR.readyState=status>0?4:0;// Determine if successful\nisSuccess=status>=200&&status<300||status===304;// Get response data\nif(responses){response=ajaxHandleResponses(s,jqXHR,responses);}// Convert no matter what (that way responseXXX fields are always set)\nresponse=ajaxConvert(s,response,jqXHR,isSuccess);// If successful, handle type chaining\nif(isSuccess){// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\nif(s.ifModified){modified=jqXHR.getResponseHeader(\"Last-Modified\");if(modified){jQuery.lastModified[cacheURL]=modified;}modified=jqXHR.getResponseHeader(\"etag\");if(modified){jQuery.etag[cacheURL]=modified;}}// if no content\nif(status===204||s.type===\"HEAD\"){statusText=\"nocontent\";// if not modified\n}else if(status===304){statusText=\"notmodified\";// If we have data, let's convert it\n}else{statusText=response.state;success=response.data;error=response.error;isSuccess=!error;}}else{// Extract error from statusText and normalize for non-aborts\nerror=statusText;if(status||!statusText){statusText=\"error\";if(status<0){status=0;}}}// Set data for the fake xhr object\njqXHR.status=status;jqXHR.statusText=(nativeStatusText||statusText)+\"\";// Success/Error\nif(isSuccess){deferred.resolveWith(callbackContext,[success,statusText,jqXHR]);}else{deferred.rejectWith(callbackContext,[jqXHR,statusText,error]);}// Status-dependent callbacks\njqXHR.statusCode(_statusCode);_statusCode=undefined;if(fireGlobals){globalEventContext.trigger(isSuccess?\"ajaxSuccess\":\"ajaxError\",[jqXHR,s,isSuccess?success:error]);}// Complete\ncompleteDeferred.fireWith(callbackContext,[jqXHR,statusText]);if(fireGlobals){globalEventContext.trigger(\"ajaxComplete\",[jqXHR,s]);// Handle the global AJAX counter\nif(! --jQuery.active){jQuery.event.trigger(\"ajaxStop\");}}}return jqXHR;},getJSON:function getJSON(url,data,callback){return jQuery.get(url,data,callback,\"json\");},getScript:function getScript(url,callback){return jQuery.get(url,undefined,callback,\"script\");}});jQuery.each([\"get\",\"post\"],function(i,method){jQuery[method]=function(url,data,callback,type){// Shift arguments if data argument was omitted\nif(jQuery.isFunction(data)){type=type||callback;callback=data;data=undefined;}// The url can be an options object (which then must have .url)\nreturn jQuery.ajax(jQuery.extend({url:url,type:method,dataType:type,data:data,success:callback},jQuery.isPlainObject(url)&&url));};});jQuery._evalUrl=function(url){return jQuery.ajax({url:url,// Make this explicit, since user can override this through ajaxSetup (#11264)\ntype:\"GET\",dataType:\"script\",async:false,global:false,\"throws\":true});};jQuery.fn.extend({wrapAll:function wrapAll(html){var wrap;if(jQuery.isFunction(html)){return this.each(function(i){jQuery(this).wrapAll(html.call(this,i));});}if(this[0]){// The elements to wrap the target around\nwrap=jQuery(html,this[0].ownerDocument).eq(0).clone(true);if(this[0].parentNode){wrap.insertBefore(this[0]);}wrap.map(function(){var elem=this;while(elem.firstElementChild){elem=elem.firstElementChild;}return elem;}).append(this);}return this;},wrapInner:function wrapInner(html){if(jQuery.isFunction(html)){return this.each(function(i){jQuery(this).wrapInner(html.call(this,i));});}return this.each(function(){var self=jQuery(this),contents=self.contents();if(contents.length){contents.wrapAll(html);}else{self.append(html);}});},wrap:function wrap(html){var isFunction=jQuery.isFunction(html);return this.each(function(i){jQuery(this).wrapAll(isFunction?html.call(this,i):html);});},unwrap:function unwrap(){return this.parent().each(function(){if(!jQuery.nodeName(this,\"body\")){jQuery(this).replaceWith(this.childNodes);}}).end();}});jQuery.expr.filters.hidden=function(elem){return!jQuery.expr.filters.visible(elem);};jQuery.expr.filters.visible=function(elem){// Support: Opera <= 12.12\n// Opera reports offsetWidths and offsetHeights less than zero on some elements\n// Use OR instead of AND as the element is not visible if either is true\n// See tickets #10406 and #13132\nreturn elem.offsetWidth>0||elem.offsetHeight>0||elem.getClientRects().length>0;};var r20=/%20/g,rbracket=/\\[\\]$/,rCRLF=/\\r?\\n/g,rsubmitterTypes=/^(?:submit|button|image|reset|file)$/i,rsubmittable=/^(?:input|select|textarea|keygen)/i;function buildParams(prefix,obj,traditional,add){var name;if(jQuery.isArray(obj)){// Serialize array item.\njQuery.each(obj,function(i,v){if(traditional||rbracket.test(prefix)){// Treat each array item as a scalar.\nadd(prefix,v);}else{// Item is non-scalar (array or object), encode its numeric index.\nbuildParams(prefix+\"[\"+((typeof v===\"undefined\"?\"undefined\":_typeof(v))===\"object\"&&v!=null?i:\"\")+\"]\",v,traditional,add);}});}else if(!traditional&&jQuery.type(obj)===\"object\"){// Serialize object item.\nfor(name in obj){buildParams(prefix+\"[\"+name+\"]\",obj[name],traditional,add);}}else{// Serialize scalar item.\nadd(prefix,obj);}}// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param=function(a,traditional){var prefix,s=[],add=function add(key,value){// If value is a function, invoke it and return its value\nvalue=jQuery.isFunction(value)?value():value==null?\"\":value;s[s.length]=encodeURIComponent(key)+\"=\"+encodeURIComponent(value);};// Set traditional to true for jQuery <= 1.3.2 behavior.\nif(traditional===undefined){traditional=jQuery.ajaxSettings&&jQuery.ajaxSettings.traditional;}// If an array was passed in, assume that it is an array of form elements.\nif(jQuery.isArray(a)||a.jquery&&!jQuery.isPlainObject(a)){// Serialize the form elements\njQuery.each(a,function(){add(this.name,this.value);});}else{// If traditional, encode the \"old\" way (the way 1.3.2 or older\n// did it), otherwise encode params recursively.\nfor(prefix in a){buildParams(prefix,a[prefix],traditional,add);}}// Return the resulting serialization\nreturn s.join(\"&\").replace(r20,\"+\");};jQuery.fn.extend({serialize:function serialize(){return jQuery.param(this.serializeArray());},serializeArray:function serializeArray(){return this.map(function(){// Can add propHook for \"elements\" to filter or add form elements\nvar elements=jQuery.prop(this,\"elements\");return elements?jQuery.makeArray(elements):this;}).filter(function(){var type=this.type;// Use .is( \":disabled\" ) so that fieldset[disabled] works\nreturn this.name&&!jQuery(this).is(\":disabled\")&&rsubmittable.test(this.nodeName)&&!rsubmitterTypes.test(type)&&(this.checked||!rcheckableType.test(type));}).map(function(i,elem){var val=jQuery(this).val();return val==null?null:jQuery.isArray(val)?jQuery.map(val,function(val){return{name:elem.name,value:val.replace(rCRLF,\"\\r\\n\")};}):{name:elem.name,value:val.replace(rCRLF,\"\\r\\n\")};}).get();}});jQuery.ajaxSettings.xhr=function(){try{return new window.XMLHttpRequest();}catch(e){}};var xhrSuccessStatus={// File protocol always yields status code 0, assume 200\n0:200,// Support: IE9\n// #1450: sometimes IE returns 1223 when it should be 204\n1223:204},xhrSupported=jQuery.ajaxSettings.xhr();support.cors=!!xhrSupported&&\"withCredentials\"in xhrSupported;support.ajax=xhrSupported=!!xhrSupported;jQuery.ajaxTransport(function(options){var _callback,errorCallback;// Cross domain only allowed if supported through XMLHttpRequest\nif(support.cors||xhrSupported&&!options.crossDomain){return{send:function send(headers,complete){var i,xhr=options.xhr();xhr.open(options.type,options.url,options.async,options.username,options.password);// Apply custom fields if provided\nif(options.xhrFields){for(i in options.xhrFields){xhr[i]=options.xhrFields[i];}}// Override mime type if needed\nif(options.mimeType&&xhr.overrideMimeType){xhr.overrideMimeType(options.mimeType);}// X-Requested-With header\n// For cross-domain requests, seeing as conditions for a preflight are\n// akin to a jigsaw puzzle, we simply never set it to be sure.\n// (it can always be set on a per-request basis or even using ajaxSetup)\n// For same-domain requests, won't change header if already provided.\nif(!options.crossDomain&&!headers[\"X-Requested-With\"]){headers[\"X-Requested-With\"]=\"XMLHttpRequest\";}// Set headers\nfor(i in headers){xhr.setRequestHeader(i,headers[i]);}// Callback\n_callback=function callback(type){return function(){if(_callback){_callback=errorCallback=xhr.onload=xhr.onerror=xhr.onabort=xhr.onreadystatechange=null;if(type===\"abort\"){xhr.abort();}else if(type===\"error\"){// Support: IE9\n// On a manual native abort, IE9 throws\n// errors on any property access that is not readyState\nif(typeof xhr.status!==\"number\"){complete(0,\"error\");}else{complete(// File: protocol always yields status 0; see #8605, #14207\nxhr.status,xhr.statusText);}}else{complete(xhrSuccessStatus[xhr.status]||xhr.status,xhr.statusText,// Support: IE9 only\n// IE9 has no XHR2 but throws on binary (trac-11426)\n// For XHR2 non-text, let the caller handle it (gh-2498)\n(xhr.responseType||\"text\")!==\"text\"||typeof xhr.responseText!==\"string\"?{binary:xhr.response}:{text:xhr.responseText},xhr.getAllResponseHeaders());}}};};// Listen to events\nxhr.onload=_callback();errorCallback=xhr.onerror=_callback(\"error\");// Support: IE9\n// Use onreadystatechange to replace onabort\n// to handle uncaught aborts\nif(xhr.onabort!==undefined){xhr.onabort=errorCallback;}else{xhr.onreadystatechange=function(){// Check readyState before timeout as it changes\nif(xhr.readyState===4){// Allow onerror to be called first,\n// but that will not handle a native abort\n// Also, save errorCallback to a variable\n// as xhr.onerror cannot be accessed\nwindow.setTimeout(function(){if(_callback){errorCallback();}});}};}// Create the abort callback\n_callback=_callback(\"abort\");try{// Do send the request (this may raise an exception)\nxhr.send(options.hasContent&&options.data||null);}catch(e){// #14683: Only rethrow if this hasn't been notified as an error yet\nif(_callback){throw e;}}},abort:function abort(){if(_callback){_callback();}}};}});// Install script dataType\njQuery.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, \"+\"application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function textScript(text){jQuery.globalEval(text);return text;}}});// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter(\"script\",function(s){if(s.cache===undefined){s.cache=false;}if(s.crossDomain){s.type=\"GET\";}});// Bind script tag hack transport\njQuery.ajaxTransport(\"script\",function(s){// This transport only deals with cross domain requests\nif(s.crossDomain){var script,_callback2;return{send:function send(_,complete){script=jQuery(\"<script>\").prop({charset:s.scriptCharset,src:s.url}).on(\"load error\",_callback2=function callback(evt){script.remove();_callback2=null;if(evt){complete(evt.type===\"error\"?404:200,evt.type);}});// Use native DOM manipulation to avoid our domManip AJAX trickery\ndocument.head.appendChild(script[0]);},abort:function abort(){if(_callback2){_callback2();}}};}});var oldCallbacks=[],rjsonp=/(=)\\?(?=&|$)|\\?\\?/;// Default jsonp settings\njQuery.ajaxSetup({jsonp:\"callback\",jsonpCallback:function jsonpCallback(){var callback=oldCallbacks.pop()||jQuery.expando+\"_\"+nonce++;this[callback]=true;return callback;}});// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter(\"json jsonp\",function(s,originalSettings,jqXHR){var callbackName,overwritten,responseContainer,jsonProp=s.jsonp!==false&&(rjsonp.test(s.url)?\"url\":typeof s.data===\"string\"&&(s.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")===0&&rjsonp.test(s.data)&&\"data\");// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\nif(jsonProp||s.dataTypes[0]===\"jsonp\"){// Get callback name, remembering preexisting value associated with it\ncallbackName=s.jsonpCallback=jQuery.isFunction(s.jsonpCallback)?s.jsonpCallback():s.jsonpCallback;// Insert callback into url or form data\nif(jsonProp){s[jsonProp]=s[jsonProp].replace(rjsonp,\"$1\"+callbackName);}else if(s.jsonp!==false){s.url+=(rquery.test(s.url)?\"&\":\"?\")+s.jsonp+\"=\"+callbackName;}// Use data converter to retrieve json after script execution\ns.converters[\"script json\"]=function(){if(!responseContainer){jQuery.error(callbackName+\" was not called\");}return responseContainer[0];};// Force json dataType\ns.dataTypes[0]=\"json\";// Install callback\noverwritten=window[callbackName];window[callbackName]=function(){responseContainer=arguments;};// Clean-up function (fires after converters)\njqXHR.always(function(){// If previous value didn't exist - remove it\nif(overwritten===undefined){jQuery(window).removeProp(callbackName);// Otherwise restore preexisting value\n}else{window[callbackName]=overwritten;}// Save back as free\nif(s[callbackName]){// Make sure that re-using the options doesn't screw things around\ns.jsonpCallback=originalSettings.jsonpCallback;// Save the callback name for future use\noldCallbacks.push(callbackName);}// Call if it was a function and we have a response\nif(responseContainer&&jQuery.isFunction(overwritten)){overwritten(responseContainer[0]);}responseContainer=overwritten=undefined;});// Delegate to script\nreturn\"script\";}});// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML=function(data,context,keepScripts){if(!data||typeof data!==\"string\"){return null;}if(typeof context===\"boolean\"){keepScripts=context;context=false;}context=context||document;var parsed=rsingleTag.exec(data),scripts=!keepScripts&&[];// Single tag\nif(parsed){return[context.createElement(parsed[1])];}parsed=buildFragment([data],context,scripts);if(scripts&&scripts.length){jQuery(scripts).remove();}return jQuery.merge([],parsed.childNodes);};// Keep a copy of the old load method\nvar _load=jQuery.fn.load;/**\n * Load a url into a page\n */jQuery.fn.load=function(url,params,callback){if(typeof url!==\"string\"&&_load){return _load.apply(this,arguments);}var selector,type,response,self=this,off=url.indexOf(\" \");if(off>-1){selector=jQuery.trim(url.slice(off));url=url.slice(0,off);}// If it's a function\nif(jQuery.isFunction(params)){// We assume that it's the callback\ncallback=params;params=undefined;// Otherwise, build a param string\n}else if(params&&(typeof params===\"undefined\"?\"undefined\":_typeof(params))===\"object\"){type=\"POST\";}// If we have elements to modify, make the request\nif(self.length>0){jQuery.ajax({url:url,// If \"type\" variable is undefined, then \"GET\" method will be used.\n// Make value of this field explicit since\n// user can override it through ajaxSetup method\ntype:type||\"GET\",dataType:\"html\",data:params}).done(function(responseText){// Save response for use in complete callback\nresponse=arguments;self.html(selector?// If a selector was specified, locate the right elements in a dummy div\n// Exclude scripts to avoid IE 'Permission Denied' errors\njQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector):// Otherwise use the full result\nresponseText);// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n// but they are ignored because response was set above.\n// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n}).always(callback&&function(jqXHR,status){self.each(function(){callback.apply(this,response||[jqXHR.responseText,status,jqXHR]);});});}return this;};// Attach a bunch of functions for handling common AJAX events\njQuery.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(i,type){jQuery.fn[type]=function(fn){return this.on(type,fn);};});jQuery.expr.filters.animated=function(elem){return jQuery.grep(jQuery.timers,function(fn){return elem===fn.elem;}).length;};/**\n * Gets a window from an element\n */function getWindow(elem){return jQuery.isWindow(elem)?elem:elem.nodeType===9&&elem.defaultView;}jQuery.offset={setOffset:function setOffset(elem,options,i){var curPosition,curLeft,curCSSTop,curTop,curOffset,curCSSLeft,calculatePosition,position=jQuery.css(elem,\"position\"),curElem=jQuery(elem),props={};// Set position first, in-case top/left are set even on static elem\nif(position===\"static\"){elem.style.position=\"relative\";}curOffset=curElem.offset();curCSSTop=jQuery.css(elem,\"top\");curCSSLeft=jQuery.css(elem,\"left\");calculatePosition=(position===\"absolute\"||position===\"fixed\")&&(curCSSTop+curCSSLeft).indexOf(\"auto\")>-1;// Need to be able to calculate position if either\n// top or left is auto and position is either absolute or fixed\nif(calculatePosition){curPosition=curElem.position();curTop=curPosition.top;curLeft=curPosition.left;}else{curTop=parseFloat(curCSSTop)||0;curLeft=parseFloat(curCSSLeft)||0;}if(jQuery.isFunction(options)){// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\noptions=options.call(elem,i,jQuery.extend({},curOffset));}if(options.top!=null){props.top=options.top-curOffset.top+curTop;}if(options.left!=null){props.left=options.left-curOffset.left+curLeft;}if(\"using\"in options){options.using.call(elem,props);}else{curElem.css(props);}}};jQuery.fn.extend({offset:function offset(options){if(arguments.length){return options===undefined?this:this.each(function(i){jQuery.offset.setOffset(this,options,i);});}var docElem,win,elem=this[0],box={top:0,left:0},doc=elem&&elem.ownerDocument;if(!doc){return;}docElem=doc.documentElement;// Make sure it's not a disconnected DOM node\nif(!jQuery.contains(docElem,elem)){return box;}box=elem.getBoundingClientRect();win=getWindow(doc);return{top:box.top+win.pageYOffset-docElem.clientTop,left:box.left+win.pageXOffset-docElem.clientLeft};},position:function position(){if(!this[0]){return;}var offsetParent,offset,elem=this[0],parentOffset={top:0,left:0};// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n// because it is its only offset parent\nif(jQuery.css(elem,\"position\")===\"fixed\"){// Assume getBoundingClientRect is there when computed position is fixed\noffset=elem.getBoundingClientRect();}else{// Get *real* offsetParent\noffsetParent=this.offsetParent();// Get correct offsets\noffset=this.offset();if(!jQuery.nodeName(offsetParent[0],\"html\")){parentOffset=offsetParent.offset();}// Add offsetParent borders\nparentOffset.top+=jQuery.css(offsetParent[0],\"borderTopWidth\",true);parentOffset.left+=jQuery.css(offsetParent[0],\"borderLeftWidth\",true);}// Subtract parent offsets and element margins\nreturn{top:offset.top-parentOffset.top-jQuery.css(elem,\"marginTop\",true),left:offset.left-parentOffset.left-jQuery.css(elem,\"marginLeft\",true)};},// This method will return documentElement in the following cases:\n// 1) For the element inside the iframe without offsetParent, this method will return\n//    documentElement of the parent window\n// 2) For the hidden or detached element\n// 3) For body or html element, i.e. in case of the html node - it will return itself\n//\n// but those exceptions were never presented as a real life use-cases\n// and might be considered as more preferable results.\n//\n// This logic, however, is not guaranteed and can change at any point in the future\noffsetParent:function offsetParent(){return this.map(function(){var offsetParent=this.offsetParent;while(offsetParent&&jQuery.css(offsetParent,\"position\")===\"static\"){offsetParent=offsetParent.offsetParent;}return offsetParent||documentElement;});}});// Create scrollLeft and scrollTop methods\njQuery.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(method,prop){var top=\"pageYOffset\"===prop;jQuery.fn[method]=function(val){return access(this,function(elem,method,val){var win=getWindow(elem);if(val===undefined){return win?win[prop]:elem[method];}if(win){win.scrollTo(!top?val:win.pageXOffset,top?val:win.pageYOffset);}else{elem[method]=val;}},method,val,arguments.length);};});// Support: Safari<7-8+, Chrome<37-44+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each([\"top\",\"left\"],function(i,prop){jQuery.cssHooks[prop]=addGetHookIf(support.pixelPosition,function(elem,computed){if(computed){computed=curCSS(elem,prop);// If curCSS returns percentage, fallback to offset\nreturn rnumnonpx.test(computed)?jQuery(elem).position()[prop]+\"px\":computed;}});});// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each({Height:\"height\",Width:\"width\"},function(name,type){jQuery.each({padding:\"inner\"+name,content:type,\"\":\"outer\"+name},function(defaultExtra,funcName){// Margin is only for outerHeight, outerWidth\njQuery.fn[funcName]=function(margin,value){var chainable=arguments.length&&(defaultExtra||typeof margin!==\"boolean\"),extra=defaultExtra||(margin===true||value===true?\"margin\":\"border\");return access(this,function(elem,type,value){var doc;if(jQuery.isWindow(elem)){// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n// isn't a whole lot we can do. See pull request at this URL for discussion:\n// https://github.com/jquery/jquery/pull/764\nreturn elem.document.documentElement[\"client\"+name];}// Get document width or height\nif(elem.nodeType===9){doc=elem.documentElement;// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n// whichever is greatest\nreturn Math.max(elem.body[\"scroll\"+name],doc[\"scroll\"+name],elem.body[\"offset\"+name],doc[\"offset\"+name],doc[\"client\"+name]);}return value===undefined?// Get width or height on the element, requesting but not forcing parseFloat\njQuery.css(elem,type,extra):// Set width or height on the element\njQuery.style(elem,type,value,extra);},type,chainable?margin:undefined,chainable,null);};});});jQuery.fn.extend({bind:function bind(types,data,fn){return this.on(types,null,data,fn);},unbind:function unbind(types,fn){return this.off(types,null,fn);},delegate:function delegate(selector,types,data,fn){return this.on(types,selector,data,fn);},undelegate:function undelegate(selector,types,fn){// ( namespace ) or ( selector, types [, fn] )\nreturn arguments.length===1?this.off(selector,\"**\"):this.off(types,selector||\"**\",fn);},size:function size(){return this.length;}});jQuery.fn.andSelf=jQuery.fn.addBack;// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\nif(typeof define===\"function\"&&define.amd){define(\"jquery\",[],function(){return jQuery;});}var// Map over jQuery in case of overwrite\n_jQuery=window.jQuery,// Map over the $ in case of overwrite\n_$=window.$;jQuery.noConflict=function(deep){if(window.$===jQuery){window.$=_$;}if(deep&&window.jQuery===jQuery){window.jQuery=_jQuery;}return jQuery;};// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif(!noGlobal){window.jQuery=window.$=jQuery;}return jQuery;});\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _jquery = require(\"./jquery/dist/jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * jQuery mmenu v5.3.4\n * @requires jQuery 1.7.0 or later\n *\n * mmenu.frebsite.nl\n *\n * Copyright (c) Fred Heusschen\n * www.frebsite.nl\n *\n * Licensed under the MIT license:\n * http://en.wikipedia.org/wiki/MIT_License\n */\n!function (e) {\n  function t() {\n    e[n].glbl || (l = { $wndw: e(window), $html: e(\"html\"), $body: e(\"body\") }, a = {}, i = {}, r = {}, e.each([a, i, r], function (e, t) {\n      t.add = function (e) {\n        e = e.split(\" \");for (var n = 0, s = e.length; s > n; n++) {\n          t[e[n]] = t.mm(e[n]);\n        }\n      };\n    }), a.mm = function (e) {\n      return \"mm-\" + e;\n    }, a.add(\"wrapper menu panel nopanel current highest opened subopened navbar hasnavbar title btn prev next listview nolistview inset vertical selected divider spacer hidden fullsubopen\"), a.umm = function (e) {\n      return \"mm-\" == e.slice(0, 3) && (e = e.slice(3)), e;\n    }, i.mm = function (e) {\n      return \"mm-\" + e;\n    }, i.add(\"parent sub\"), r.mm = function (e) {\n      return e + \".mm\";\n    }, r.add(\"transitionend webkitTransitionEnd mousedown mouseup touchstart touchmove touchend click keydown\"), e[n]._c = a, e[n]._d = i, e[n]._e = r, e[n].glbl = l);\n  }var n = \"mmenu\",\n      s = \"5.3.4\";if (!e[n]) {\n    e[n] = function (e, t, n) {\n      this.$menu = e, this._api = [\"bind\", \"init\", \"update\", \"setSelected\", \"getInstance\", \"openPanel\", \"closePanel\", \"closeAllPanels\"], this.opts = t, this.conf = n, this.vars = {}, this.cbck = {}, \"function\" == typeof this.___deprecated && this.___deprecated(), this._initMenu(), this._initAnchors();var s = this.$menu.children(this.conf.panelNodetype);return this._initAddons(), this.init(s), \"function\" == typeof this.___debug && this.___debug(), this;\n    }, e[n].version = s, e[n].addons = {}, e[n].uniqueId = 0, e[n].defaults = { extensions: [], navbar: { add: !0, title: \"Menu\", titleLink: \"panel\" }, onClick: { setSelected: !0 }, slidingSubmenus: !0 }, e[n].configuration = { classNames: { divider: \"Divider\", inset: \"Inset\", panel: \"Panel\", selected: \"Selected\", spacer: \"Spacer\", vertical: \"Vertical\" }, clone: !1, openingInterval: 25, panelNodetype: \"ul, ol, div\", transitionDuration: 400 }, e[n].prototype = { init: function init(e) {\n        e = e.not(\".\" + a.nopanel), e = this._initPanels(e), this.trigger(\"init\", e), this.trigger(\"update\");\n      }, update: function update() {\n        this.trigger(\"update\");\n      }, setSelected: function setSelected(e) {\n        this.$menu.find(\".\" + a.listview).children().removeClass(a.selected), e.addClass(a.selected), this.trigger(\"setSelected\", e);\n      }, openPanel: function openPanel(t) {\n        var s = t.parent();if (s.hasClass(a.vertical)) {\n          var i = s.parents(\".\" + a.subopened);if (i.length) return this.openPanel(i.first());s.addClass(a.opened);\n        } else {\n          if (t.hasClass(a.current)) return;var r = this.$menu.children(\".\" + a.panel),\n              l = r.filter(\".\" + a.current);r.removeClass(a.highest).removeClass(a.current).not(t).not(l).not(\".\" + a.vertical).addClass(a.hidden), e[n].support.csstransitions || l.addClass(a.hidden), t.hasClass(a.opened) ? t.nextAll(\".\" + a.opened).addClass(a.highest).removeClass(a.opened).removeClass(a.subopened) : (t.addClass(a.highest), l.addClass(a.subopened)), t.removeClass(a.hidden).addClass(a.current), setTimeout(function () {\n            t.removeClass(a.subopened).addClass(a.opened);\n          }, this.conf.openingInterval);\n        }this.trigger(\"openPanel\", t);\n      }, closePanel: function closePanel(e) {\n        var t = e.parent();t.hasClass(a.vertical) && (t.removeClass(a.opened), this.trigger(\"closePanel\", e));\n      }, closeAllPanels: function closeAllPanels() {\n        this.$menu.find(\".\" + a.listview).children().removeClass(a.selected).filter(\".\" + a.vertical).removeClass(a.opened);var e = this.$menu.children(\".\" + a.panel),\n            t = e.first();this.$menu.children(\".\" + a.panel).not(t).removeClass(a.subopened).removeClass(a.opened).removeClass(a.current).removeClass(a.highest).addClass(a.hidden), this.openPanel(t);\n      }, togglePanel: function togglePanel(e) {\n        var t = e.parent();t.hasClass(a.vertical) && this[t.hasClass(a.opened) ? \"closePanel\" : \"openPanel\"](e);\n      }, getInstance: function getInstance() {\n        return this;\n      }, bind: function bind(e, t) {\n        this.cbck[e] = this.cbck[e] || [], this.cbck[e].push(t);\n      }, trigger: function trigger() {\n        var e = this,\n            t = Array.prototype.slice.call(arguments),\n            n = t.shift();if (this.cbck[n]) for (var s = 0, a = this.cbck[n].length; a > s; s++) {\n          this.cbck[n][s].apply(e, t);\n        }\n      }, _initMenu: function _initMenu() {\n        this.opts.offCanvas && this.conf.clone && (this.$menu = this.$menu.clone(!0), this.$menu.add(this.$menu.find(\"[id]\")).filter(\"[id]\").each(function () {\n          e(this).attr(\"id\", a.mm(e(this).attr(\"id\")));\n        })), this.$menu.contents().each(function () {\n          3 == e(this)[0].nodeType && e(this).remove();\n        }), this.$menu.parent().addClass(a.wrapper);var t = [a.menu];this.opts.slidingSubmenus || t.push(a.vertical), this.opts.extensions = this.opts.extensions.length ? \"mm-\" + this.opts.extensions.join(\" mm-\") : \"\", this.opts.extensions && t.push(this.opts.extensions), this.$menu.addClass(t.join(\" \"));\n      }, _initPanels: function _initPanels(t) {\n        var n = this,\n            s = this.__findAddBack(t, \"ul, ol\");this.__refactorClass(s, this.conf.classNames.inset, \"inset\").addClass(a.nolistview + \" \" + a.nopanel), s.not(\".\" + a.nolistview).addClass(a.listview);var r = this.__findAddBack(t, \".\" + a.listview).children();this.__refactorClass(r, this.conf.classNames.selected, \"selected\"), this.__refactorClass(r, this.conf.classNames.divider, \"divider\"), this.__refactorClass(r, this.conf.classNames.spacer, \"spacer\"), this.__refactorClass(this.__findAddBack(t, \".\" + this.conf.classNames.panel), this.conf.classNames.panel, \"panel\");var l = e(),\n            d = t.add(t.find(\".\" + a.panel)).add(this.__findAddBack(t, \".\" + a.listview).children().children(this.conf.panelNodetype)).not(\".\" + a.nopanel);this.__refactorClass(d, this.conf.classNames.vertical, \"vertical\"), this.opts.slidingSubmenus || d.addClass(a.vertical), d.each(function () {\n          var t = e(this),\n              s = t;t.is(\"ul, ol\") ? (t.wrap('<div class=\"' + a.panel + '\" />'), s = t.parent()) : s.addClass(a.panel);var i = t.attr(\"id\");t.removeAttr(\"id\"), s.attr(\"id\", i || n.__getUniqueId()), t.hasClass(a.vertical) && (t.removeClass(n.conf.classNames.vertical), s.add(s.parent()).addClass(a.vertical)), l = l.add(s);\n        });var o = e(\".\" + a.panel, this.$menu);l.each(function () {\n          var t = e(this),\n              s = t.parent(),\n              r = s.children(\"a, span\").first();if (s.is(\".\" + a.menu) || (s.data(i.sub, t), t.data(i.parent, s)), !s.children(\".\" + a.next).length && s.parent().is(\".\" + a.listview)) {\n            var l = t.attr(\"id\"),\n                d = e('<a class=\"' + a.next + '\" href=\"#' + l + '\" data-target=\"#' + l + '\" />').insertBefore(r);r.is(\"span\") && d.addClass(a.fullsubopen);\n          }if (!t.children(\".\" + a.navbar).length && !s.hasClass(a.vertical)) {\n            if (s.parent().is(\".\" + a.listview)) var s = s.closest(\".\" + a.panel);else var r = s.closest(\".\" + a.panel).find('a[href=\"#' + t.attr(\"id\") + '\"]').first(),\n                s = r.closest(\".\" + a.panel);var o = e('<div class=\"' + a.navbar + '\" />');if (s.length) {\n              var l = s.attr(\"id\");var _url;switch (n.opts.navbar.titleLink) {case \"anchor\":\n                  _url = r.attr(\"href\");break;case \"panel\":case \"parent\":\n                  _url = \"#\" + l;break;case \"none\":default:\n                  _url = !1;}o.append('<a class=\"' + a.btn + \" \" + a.prev + '\" href=\"#' + l + '\" data-target=\"#' + l + '\"></a>').append('<a class=\"' + a.title + '\"' + (_url ? ' href=\"' + _url + '\"' : \"\") + \">\" + r.text() + \"</a>\").prependTo(t), n.opts.navbar.add && t.addClass(a.hasnavbar);\n            } else n.opts.navbar.title && (o.append('<a class=\"' + a.title + '\">' + n.opts.navbar.title + \"</a>\").prependTo(t), n.opts.navbar.add && t.addClass(a.hasnavbar));\n          }\n        });var c = this.__findAddBack(t, \".\" + a.listview).children(\".\" + a.selected).removeClass(a.selected).last().addClass(a.selected);c.add(c.parentsUntil(\".\" + a.menu, \"li\")).filter(\".\" + a.vertical).addClass(a.opened).end().not(\".\" + a.vertical).each(function () {\n          e(this).parentsUntil(\".\" + a.menu, \".\" + a.panel).not(\".\" + a.vertical).first().addClass(a.opened).parentsUntil(\".\" + a.menu, \".\" + a.panel).not(\".\" + a.vertical).first().addClass(a.opened).addClass(a.subopened);\n        }), c.children(\".\" + a.panel).not(\".\" + a.vertical).addClass(a.opened).parentsUntil(\".\" + a.menu, \".\" + a.panel).not(\".\" + a.vertical).first().addClass(a.opened).addClass(a.subopened);var u = o.filter(\".\" + a.opened);return u.length || (u = l.first()), u.addClass(a.opened).last().addClass(a.current), l.not(\".\" + a.vertical).not(u.last()).addClass(a.hidden).end().appendTo(this.$menu), l;\n      }, _initAnchors: function _initAnchors() {\n        var t = this;l.$body.on(r.click + \"-oncanvas\", \"a[href]\", function (s) {\n          var i = e(this),\n              r = !1,\n              d = t.$menu.find(i).length;for (var o in e[n].addons) {\n            if (r = e[n].addons[o].clickAnchor.call(t, i, d)) break;\n          }if (!r && d) {\n            var c = i.attr(\"href\");if (c.length > 1 && \"#\" == c.slice(0, 1)) try {\n              var u = e(c, t.$menu);u.is(\".\" + a.panel) && (r = !0, t[i.parent().hasClass(a.vertical) ? \"togglePanel\" : \"openPanel\"](u));\n            } catch (h) {}\n          }if (r && s.preventDefault(), !r && d && i.is(\".\" + a.listview + \" > li > a\") && !i.is('[rel=\"external\"]') && !i.is('[target=\"_blank\"]')) {\n            t.__valueOrFn(t.opts.onClick.setSelected, i) && t.setSelected(e(s.target).parent());var p = t.__valueOrFn(t.opts.onClick.preventDefault, i, \"#\" == c.slice(0, 1));p && s.preventDefault(), t.__valueOrFn(t.opts.onClick.blockUI, i, !p) && l.$html.addClass(a.blocking), t.__valueOrFn(t.opts.onClick.close, i, p) && t.close();\n          }\n        });\n      }, _initAddons: function _initAddons() {\n        for (var t in e[n].addons) {\n          e[n].addons[t].add.call(this), e[n].addons[t].add = function () {};\n        }for (var t in e[n].addons) {\n          e[n].addons[t].setup.call(this);\n        }\n      }, __api: function __api() {\n        var t = this,\n            n = {};return e.each(this._api, function () {\n          var e = this;n[e] = function () {\n            var s = t[e].apply(t, arguments);return \"undefined\" == typeof s ? n : s;\n          };\n        }), n;\n      }, __valueOrFn: function __valueOrFn(e, t, n) {\n        return \"function\" == typeof e ? e.call(t[0]) : \"undefined\" == typeof e && \"undefined\" != typeof n ? n : e;\n      }, __refactorClass: function __refactorClass(e, t, n) {\n        return e.filter(\".\" + t).removeClass(t).addClass(a[n]);\n      }, __findAddBack: function __findAddBack(e, t) {\n        return e.find(t).add(e.filter(t));\n      }, __filterListItems: function __filterListItems(e) {\n        return e.not(\".\" + a.divider).not(\".\" + a.hidden);\n      }, __transitionend: function __transitionend(e, t, n) {\n        var s = !1,\n            a = function a() {\n          s || t.call(e[0]), s = !0;\n        };e.one(r.transitionend, a), e.one(r.webkitTransitionEnd, a), setTimeout(a, 1.1 * n);\n      }, __getUniqueId: function __getUniqueId() {\n        return a.mm(e[n].uniqueId++);\n      } }, e.fn[n] = function (s, a) {\n      return t(), s = e.extend(!0, {}, e[n].defaults, s), a = e.extend(!0, {}, e[n].configuration, a), this.each(function () {\n        var t = e(this);if (!t.data(n)) {\n          var i = new e[n](t, s, a);t.data(n, i.__api());\n        }\n      });\n    }, e[n].support = { touch: \"ontouchstart\" in window || navigator.msMaxTouchPoints, csstransitions: function () {\n        if (\"undefined\" != typeof Modernizr) return Modernizr.csstransitions;var e = document.body || document.documentElement,\n            t = e.style,\n            n = \"transition\";if (\"string\" == typeof t[n]) return !0;var s = [\"Moz\", \"webkit\", \"Webkit\", \"Khtml\", \"O\", \"ms\"];n = n.charAt(0).toUpperCase() + n.substr(1);for (var a = 0; a < s.length; a++) {\n          if (\"string\" == typeof t[s[a] + n]) return !0;\n        }return !1;\n      }() };var a, i, r, l;\n  }\n}(_jquery2.default);\n/*\n * jQuery mmenu offCanvas addon\n * mmenu.frebsite.nl\n *\n * Copyright (c) Fred Heusschen\n */\n!function (t) {\n  var e = \"mmenu\",\n      o = \"offCanvas\";t[e].addons[o] = { setup: function setup() {\n      if (this.opts[o]) {\n        var n = this.opts[o],\n            i = this.conf[o];a = t[e].glbl, this._api = t.merge(this._api, [\"open\", \"close\", \"setPage\"]), (\"top\" == n.position || \"bottom\" == n.position) && (n.zposition = \"front\"), \"string\" != typeof i.pageSelector && (i.pageSelector = \"> \" + i.pageNodetype), a.$allMenus = (a.$allMenus || t()).add(this.$menu), this.vars.opened = !1;var r = [s.offcanvas];\"left\" != n.position && r.push(s.mm(n.position)), \"back\" != n.zposition && r.push(s.mm(n.zposition)), this.$menu.addClass(r.join(\" \")).parent().removeClass(s.wrapper), this.setPage(a.$page), this._initBlocker(), this[\"_initWindow_\" + o](), this.$menu[i.menuInjectMethod + \"To\"](i.menuWrapperSelector);\n      }\n    }, add: function add() {\n      s = t[e]._c, n = t[e]._d, i = t[e]._e, s.add(\"offcanvas slideout modal background opening blocker page\"), n.add(\"style\"), i.add(\"resize\");\n    }, clickAnchor: function clickAnchor(t) {\n      if (!this.opts[o]) return !1;var e = this.$menu.attr(\"id\");if (e && e.length && (this.conf.clone && (e = s.umm(e)), t.is('[href=\"#' + e + '\"]'))) return this.open(), !0;if (a.$page) {\n        var e = a.$page.first().attr(\"id\");return e && e.length && t.is('[href=\"#' + e + '\"]') ? (this.close(), !0) : !1;\n      }\n    } }, t[e].defaults[o] = { position: \"left\", zposition: \"back\", modal: !1, moveBackground: !0 }, t[e].configuration[o] = { pageNodetype: \"div\", pageSelector: null, wrapPageIfNeeded: !0, menuWrapperSelector: \"body\", menuInjectMethod: \"prepend\" }, t[e].prototype.open = function () {\n    if (!this.vars.opened) {\n      var t = this;this._openSetup(), setTimeout(function () {\n        t._openFinish();\n      }, this.conf.openingInterval), this.trigger(\"open\");\n    }\n  }, t[e].prototype._openSetup = function () {\n    var e = this;this.closeAllOthers(), a.$page.each(function () {\n      t(this).data(n.style, t(this).attr(\"style\") || \"\");\n    }), a.$wndw.trigger(i.resize + \"-offcanvas\", [!0]);var r = [s.opened];this.opts[o].modal && r.push(s.modal), this.opts[o].moveBackground && r.push(s.background), \"left\" != this.opts[o].position && r.push(s.mm(this.opts[o].position)), \"back\" != this.opts[o].zposition && r.push(s.mm(this.opts[o].zposition)), this.opts.extensions && r.push(this.opts.extensions), a.$html.addClass(r.join(\" \")), setTimeout(function () {\n      e.vars.opened = !0;\n    }, this.conf.openingInterval), this.$menu.addClass(s.current + \" \" + s.opened);\n  }, t[e].prototype._openFinish = function () {\n    var t = this;this.__transitionend(a.$page.first(), function () {\n      t.trigger(\"opened\");\n    }, this.conf.transitionDuration), a.$html.addClass(s.opening), this.trigger(\"opening\");\n  }, t[e].prototype.close = function () {\n    if (this.vars.opened) {\n      var e = this;this.__transitionend(a.$page.first(), function () {\n        e.$menu.removeClass(s.current).removeClass(s.opened), a.$html.removeClass(s.opened).removeClass(s.modal).removeClass(s.background).removeClass(s.mm(e.opts[o].position)).removeClass(s.mm(e.opts[o].zposition)), e.opts.extensions && a.$html.removeClass(e.opts.extensions), a.$page.each(function () {\n          t(this).attr(\"style\", t(this).data(n.style));\n        }), e.vars.opened = !1, e.trigger(\"closed\");\n      }, this.conf.transitionDuration), a.$html.removeClass(s.opening), this.trigger(\"close\"), this.trigger(\"closing\");\n    }\n  }, t[e].prototype.closeAllOthers = function () {\n    a.$allMenus.not(this.$menu).each(function () {\n      var o = t(this).data(e);o && o.close && o.close();\n    });\n  }, t[e].prototype.setPage = function (e) {\n    var n = this,\n        i = this.conf[o];e && e.length || (e = a.$body.find(i.pageSelector), e.length > 1 && i.wrapPageIfNeeded && (e = e.wrapAll(\"<\" + this.conf[o].pageNodetype + \" />\").parent())), e.each(function () {\n      t(this).attr(\"id\", t(this).attr(\"id\") || n.__getUniqueId());\n    }), e.addClass(s.page + \" \" + s.slideout), a.$page = e, this.trigger(\"setPage\", e);\n  }, t[e].prototype[\"_initWindow_\" + o] = function () {\n    a.$wndw.off(i.keydown + \"-offcanvas\").on(i.keydown + \"-offcanvas\", function (t) {\n      return a.$html.hasClass(s.opened) && 9 == t.keyCode ? (t.preventDefault(), !1) : void 0;\n    });var t = 0;a.$wndw.off(i.resize + \"-offcanvas\").on(i.resize + \"-offcanvas\", function (e, o) {\n      if (1 == a.$page.length && (o || a.$html.hasClass(s.opened))) {\n        var n = a.$wndw.height();(o || n != t) && (t = n, a.$page.css(\"minHeight\", n));\n      }\n    });\n  }, t[e].prototype._initBlocker = function () {\n    var e = this;a.$blck || (a.$blck = t('<div id=\"' + s.blocker + '\" class=\"' + s.slideout + '\" />')), a.$blck.appendTo(a.$body).off(i.touchstart + \"-offcanvas \" + i.touchmove + \"-offcanvas\").on(i.touchstart + \"-offcanvas \" + i.touchmove + \"-offcanvas\", function (t) {\n      t.preventDefault(), t.stopPropagation(), a.$blck.trigger(i.mousedown + \"-offcanvas\");\n    }).off(i.mousedown + \"-offcanvas\").on(i.mousedown + \"-offcanvas\", function (t) {\n      t.preventDefault(), a.$html.hasClass(s.modal) || (e.closeAllOthers(), e.close());\n    });\n  };var s, n, i, a;\n}(_jquery2.default);\n\n},{\"./jquery/dist/jquery\":6}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _jquery = require(\"./../../vendor/jquery/dist/jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function rdSlickIFFE(factory, $) {\n\n\tif ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object') {\n\t\t// Node/CommonJS\n\t\tmodule.exports = factory($);\n\t} else {\n\t\t// Browser globals\n\t\twindow.noUiSlider = factory($);\n\t}\n})(function ($) {\n\t\"use strict\";\n\n\t//added new classes\n\t// slick-slide-lazy\n\t// slick-slide-lazy-loading\n\n\t//can potentially add in scroll to top of slider on hash handle\n\n\t//need to add\n\t// last\n\t// first\n\t//can specify where to put dots and can specify how dots are built, can use for pagination\n\t// can create a build/update pangnation function\n\n\t//try adding on hover arrow, peak at next slide\n\t//thinking about arrows to go between case studies\n\n\tvar instanceUid = 0;\n\n\tvar buildActions = {\n\t\tbuildRows: function buildRows() {\n\t\t\tvar newSlides, numOfSlides, originalSlides, slidesPerSection;\n\n\t\t\tnewSlides = document.createDocumentFragment();\n\t\t\toriginalSlides = this.$slider.children();\n\n\t\t\tif (this.options.rows > 1) {\n\n\t\t\t\tslidesPerSection = this.options.slidesPerRow * this.options.rows;\n\n\t\t\t\tnumOfSlides = Math.ceil(originalSlides.length / slidesPerSection);\n\n\t\t\t\tfor (var aIndex = 0; aIndex < numOfSlides; aIndex++) {\n\t\t\t\t\tvar slide = document.createElement('div');\n\n\t\t\t\t\tfor (var bIndex = 0; bIndex < this.options.rows; bIndex++) {\n\t\t\t\t\t\tvar row = document.createElement('div');\n\n\t\t\t\t\t\tfor (var cIndex = 0; cIndex < this.options.slidesPerRow; cIndex++) {\n\t\t\t\t\t\t\tvar target = aIndex * slidesPerSection + (bIndex * this.options.slidesPerRow + cIndex);\n\n\t\t\t\t\t\t\tif (originalSlides.get(target)) {\n\t\t\t\t\t\t\t\trow.appendChild(originalSlides.get(target));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tslide.appendChild(row);\n\t\t\t\t\t}\n\t\t\t\t\tnewSlides.appendChild(slide);\n\t\t\t\t}\n\n\t\t\t\tthis.$slider.html(newSlides);\n\t\t\t\tthis.$slider.children().children().children().css({\n\t\t\t\t\t'width': 100 / this.options.slidesPerRow + '%',\n\t\t\t\t\t'display': 'inline-block'\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tbuildOut: function buildOut() {\n\t\t\tthis.$slides = this.$slider.children(this.options.slide + ':not(.slick-cloned)').addClass('slick-slide');\n\n\t\t\tthis.slideCount = this.$slides.length;\n\n\t\t\tthis.$slides.each(function (index, element) {\n\t\t\t\t$(element).attr('data-slick-index', index).data('originalStyling', $(element).attr('style') || '');\n\n\t\t\t\tif ($(element).data(this.options.lazyLoadData)) {\n\t\t\t\t\t$(element).addClass('slick-slide-lazy');\n\t\t\t\t}\n\t\t\t}.bind(this));\n\n\t\t\tthis.$slider.addClass('slick-slider');\n\n\t\t\tthis.$slideTrack = this.slideCount === 0 ? $('<div class=\"slick-track\"/>').appendTo(this.$slider) : this.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\n\t\t\tthis.$list = this.$slideTrack.wrap('<div class=\"slick-list\"/>').parent();\n\t\t\tthis.$slideTrack.css('opacity', 0);\n\n\t\t\tif (this.options.swipeToSlide === true) {\n\t\t\t\tthis.options.slidesToScroll = 1;\n\t\t\t}\n\n\t\t\tthis.setupInfinite();\n\t\t\tthis.buildArrows();\n\t\t\tthis.buildDots();\n\t\t\tthis.buildPagination();\n\t\t\tthis.updateDots();\n\t\t\tthis.updatePagination();\n\n\t\t\tthis.setSlideClasses(typeof this.currentSlide === 'number' ? this.currentSlide : 0);\n\n\t\t\tif (this.options.draggable === true) {\n\t\t\t\tthis.$list.addClass('draggable');\n\t\t\t}\n\t\t},\n\n\t\tsetupInfinite: function setupInfinite() {\n\t\t\tvar slideIndex, infiniteCount;\n\n\t\t\tif (this.options.infinite === true && this.options.fade === false) {\n\t\t\t\tslideIndex = null;\n\n\t\t\t\tif (this.slideCount > this.options.slidesToShow) {\n\n\t\t\t\t\tinfiniteCount = this.options.slidesToShow;\n\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i = this.slideCount; i > this.slideCount - infiniteCount; i -= 1) {\n\t\t\t\t\t\tslideIndex = i - 1;\n\n\t\t\t\t\t\t$(this.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex - this.slideCount).prependTo(this.$slideTrack).addClass('slick-cloned');\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < infiniteCount; i += 1) {\n\t\t\t\t\t\tslideIndex = i;\n\n\t\t\t\t\t\t$(this.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex + this.slideCount).appendTo(this.$slideTrack).addClass('slick-cloned');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.$slideTrack.find('.slick-cloned').find('[id]').each(function () {\n\t\t\t\t\t\t$(this).attr('id', '');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tbuildArrows: function buildArrows() {\n\t\t\tif (this.options.arrows === true) {\n\t\t\t\tthis.$prevArrow = $(this.options.prevArrow).addClass('slick-arrow');\n\t\t\t\tthis.$nextArrow = $(this.options.nextArrow).addClass('slick-arrow');\n\n\t\t\t\tif (this.slideCount > this.options.slidesToShow) {\n\t\t\t\t\tthis.$prevArrow.removeClass('slick-hidden');\n\t\t\t\t\tthis.$nextArrow.removeClass('slick-hidden');\n\n\t\t\t\t\tif (this.htmlExpr.test(this.options.prevArrow)) {\n\t\t\t\t\t\tthis.$prevArrow.prependTo(this.options.appendArrows);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.htmlExpr.test(this.options.nextArrow)) {\n\t\t\t\t\t\tthis.$nextArrow.appendTo(this.options.appendArrows);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.options.infinite !== true) {\n\t\t\t\t\t\tthis.$prevArrow.addClass('slick-disabled');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.$prevArrow.add(this.$nextArrow).addClass('slick-hidden');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tbuildDots: function buildDots() {\n\t\t\tvar dotString;\n\n\t\t\tif (this.options.dots === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tdotString = '<ul';\n\t\t\t\tif (this.options.dotsClass) {\n\t\t\t\t\tdotString += ' class=\"' + this.options.dotsClass + '\"';\n\t\t\t\t}\n\t\t\t\tdotString += '>';\n\n\t\t\t\tfor (var i = 0; i <= this.getDotCount(); i += 1) {\n\t\t\t\t\tdotString += '<li>' + this.options.customPaging.call(this, this, i) + '</li>';\n\t\t\t\t}\n\n\t\t\t\tdotString += '</ul>';\n\n\t\t\t\tthis.$dots = $(dotString).appendTo(this.options.appendDots);\n\n\t\t\t\tthis.$dots.find('li').first().addClass('slick-active');\n\t\t\t}\n\t\t},\n\n\t\tbuildPagination: function buildPagination() {\n\t\t\tvar pagString;\n\n\t\t\tif (this.options.pagination === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tpagString = '<ul';\n\t\t\t\tif (this.options.paginationClass) {\n\t\t\t\t\tpagString += 'class=\"' + this.options.paginationClass + '\"';\n\t\t\t\t}\n\t\t\t\tpagString += '>';\n\n\t\t\t\tpagString += '<li><button class=\"slick-pag-first\"><svg><use xlink:href=\"#arrow-left-2\" /></svg></button></li>';\n\t\t\t\tpagString += '<li><button class=\"slick-pag-prev\"><svg><use xlink:href=\"#arrow-left\" /></svg></button></li>';\n\n\t\t\t\tfor (var i = 0; i <= this.getDotCount(); i += 1) {\n\t\t\t\t\tpagString += '<li><button data-slick-id-target=\"' + i + '\" class=\"slick-pag-number\">' + (i + 1) + '</button></li>';\n\t\t\t\t}\n\n\t\t\t\tpagString += '<li><button class=\"slick-pag-next\"><svg><use xlink:href=\"#arrow-right\" /></svg></button></li>';\n\t\t\t\tpagString += '<li><button class=\"slick-pag-last\"><svg><use xlink:href=\"#arrow-right-2\" /></svg></button></li>';\n\n\t\t\t\tpagString += '</ul>';\n\t\t\t\t$(this.options.appendPagination).html('');\n\t\t\t\tthis.$pagination = $(pagString).appendTo(this.options.appendPagination);\n\n\t\t\t\tvar paginationObject = {\n\t\t\t\t\tfirst: this.$pagination.find('.slick-pag-first'),\n\t\t\t\t\tprev: this.$pagination.find('.slick-pag-prev'),\n\t\t\t\t\tnext: this.$pagination.find('.slick-pag-next'),\n\t\t\t\t\tlast: this.$pagination.find('.slick-pag-last'),\n\t\t\t\t\tnumbers: this.$pagination.find('.slick-pag-number'),\n\t\t\t\t\tall: this.$pagination\n\t\t\t\t};\n\t\t\t\tthis.$pagination = paginationObject;\n\t\t\t\tthis.$pagination.numbers.first().parent('li').addClass('slick-active');\n\t\t\t}\n\t\t},\n\n\t\tsetProps: function setProps() {\n\t\t\tvar bodyStyle = document.body.style;\n\n\t\t\tthis.positionProp = this.options.vertical === true ? 'top' : 'left';\n\n\t\t\tif (this.positionProp === 'top') {\n\t\t\t\tthis.$slider.addClass('slick-vertical');\n\t\t\t} else {\n\t\t\t\tthis.$slider.removeClass('slick-vertical');\n\t\t\t}\n\n\t\t\tif (bodyStyle.WebkitTransition !== undefined || bodyStyle.MozTransition !== undefined || bodyStyle.msTransition !== undefined) {\n\n\t\t\t\tif (this.options.useCSS === true) {\n\t\t\t\t\tthis.cssTransitions = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.fade) {\n\t\t\t\tif (typeof this.options.zIndex === 'number') {\n\t\t\t\t\tif (this.options.zIndex < 3) {\n\t\t\t\t\t\tthis.options.zIndex = 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.options.zIndex = this.defaults.zIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (bodyStyle.OTransform !== undefined) {\n\t\t\t\tthis.animType = 'OTransform';\n\t\t\t\tthis.transformType = '-o-transform';\n\t\t\t\tthis.transitionType = 'OTransition';\n\t\t\t\tif (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) {\n\t\t\t\t\tthis.animType = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bodyStyle.MozTransform !== undefined) {\n\t\t\t\tthis.animType = 'MozTransform';\n\t\t\t\tthis.transformType = '-moz-transform';\n\t\t\t\tthis.transitionType = 'MozTransition';\n\t\t\t\tif (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) {\n\t\t\t\t\tthis.animType = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bodyStyle.webkitTransform !== undefined) {\n\t\t\t\tthis.animType = 'webkitTransform';\n\t\t\t\tthis.transformType = '-webkit-transform';\n\t\t\t\tthis.transitionType = 'webkitTransition';\n\t\t\t\tif (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) {\n\t\t\t\t\tthis.animType = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bodyStyle.msTransform !== undefined) {\n\t\t\t\tthis.animType = 'msTransform';\n\t\t\t\tthis.transformType = '-ms-transform';\n\t\t\t\tthis.transitionType = 'msTransition';\n\t\t\t\tif (bodyStyle.msTransform === undefined) {\n\t\t\t\t\tthis.animType = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bodyStyle.transform !== undefined && this.animType !== false) {\n\t\t\t\tthis.animType = 'transform';\n\t\t\t\tthis.transformType = 'transform';\n\t\t\t\tthis.transitionType = 'transition';\n\t\t\t}\n\n\t\t\tthis.transformsEnabled = this.options.useTransform && this.animType !== null && this.animType !== false;\n\t\t},\n\n\t\tstartLoad: function startLoad() {\n\t\t\tif (this.options.arrows === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$prevArrow.hide();\n\t\t\t\tthis.$nextArrow.hide();\n\t\t\t}\n\n\t\t\tif (this.options.dots === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$dots.hide();\n\t\t\t}\n\n\t\t\tif (this.options.pagination === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$pagination.all.hide();\n\t\t\t}\n\n\t\t\tthis.$slider.addClass('slick-loading');\n\t\t},\n\n\t\tloadSlider: function loadSlider() {\n\t\t\tthis.setPosition();\n\n\t\t\tthis.$slideTrack.css({\n\t\t\t\topacity: 1\n\t\t\t});\n\n\t\t\tthis.$slider.removeClass('slick-loading');\n\n\t\t\tthis.initUI();\n\n\t\t\tif (this.options.lazyLoad === 'progressive') {\n\t\t\t\tthis.progressiveLazyLoad();\n\t\t\t}\n\t\t},\n\n\t\tinitUI: function initUI() {\n\t\t\tif (this.options.arrows === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$prevArrow.show();\n\t\t\t\tthis.$nextArrow.show();\n\t\t\t}\n\n\t\t\tif (this.options.dots === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$dots.show();\n\t\t\t}\n\n\t\t\tif (this.options.pagination === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$pagination.all.show();\n\t\t\t}\n\n\t\t\tif (this.options.autoplay === true) {\n\t\t\t\tthis.autoPlay();\n\t\t\t}\n\t\t}\n\t};\n\n\tvar updates = {\n\t\tupdateArrows: function updateArrows() {\n\t\t\tif (this.options.arrows === true && this.slideCount > this.options.slidesToShow && !this.options.infinite) {\n\t\t\t\tthis.$prevArrow.removeClass('slick-disabled');\n\t\t\t\tthis.$nextArrow.removeClass('slick-disabled');\n\n\t\t\t\tif (this.currentSlide === 0) {\n\t\t\t\t\tthis.$prevArrow.addClass('slick-disabled');\n\t\t\t\t\tthis.$nextArrow.removeClass('slick-disabled');\n\t\t\t\t} else if (this.currentSlide >= this.slideCount - this.options.slidesToShow) {\n\t\t\t\t\tthis.$nextArrow.addClass('slick-disabled');\n\t\t\t\t\tthis.$prevArrow.removeClass('slick-disabled');\n\t\t\t\t} else if (this.currentSlide >= this.slideCount - 1) {\n\t\t\t\t\tthis.$nextArrow.addClass('slick-disabled');\n\t\t\t\t\tthis.$prevArrow.removeClass('slick-disabled');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupdateDots: function updateDots() {\n\t\t\tif (this.$dots !== null) {\n\t\t\t\tthis.$dots.find('li').removeClass('slick-active');\n\t\t\t\tthis.$dots.find('li').eq(Math.floor(this.currentSlide / this.options.slidesToScroll)).addClass('slick-active');\n\t\t\t}\n\t\t},\n\n\t\tupdatePagination: function updatePagination() {\n\t\t\tif (this.$pagination !== null) {\n\t\t\t\tthis.$pagination.numbers.parents().removeClass('slick-active');\n\t\t\t\tthis.$pagination.numbers.eq(Math.floor(this.currentSlide / this.options.slidesToScroll)).parent('li').addClass('slick-active');\n\n\t\t\t\tthis.$pagination.first.removeClass('slick-disabled');\n\t\t\t\tthis.$pagination.prev.removeClass('slick-disabled');\n\t\t\t\tthis.$pagination.next.removeClass('slick-disabled');\n\t\t\t\tthis.$pagination.last.removeClass('slick-disabled');\n\n\t\t\t\tif (this.currentSlide === 0) {\n\t\t\t\t\tthis.$pagination.first.addClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.prev.addClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.next.removeClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.last.removeClass('slick-disabled');\n\t\t\t\t} else if (this.currentSlide >= this.slideCount - this.options.slidesToShow) {\n\t\t\t\t\tthis.$pagination.first.removeClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.prev.removeClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.next.addClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.last.addClass('slick-disabled');\n\t\t\t\t} else if (this.currentSlide >= this.slideCount - 1) {\n\t\t\t\t\tthis.$pagination.first.removeClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.prev.removeClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.next.addClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.last.addClass('slick-disabled');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tsetSlideClasses: function setSlideClasses(index) {\n\t\t\tvar allSlides, indexOffset, remainder;\n\n\t\t\tallSlides = this.$slider.find('.slick-slide').removeClass('slick-active slick-current');\n\n\t\t\tthis.$slides.eq(index).addClass('slick-current');\n\n\t\t\tif (index >= 0 && index <= this.slideCount - this.options.slidesToShow) {\n\t\t\t\tthis.$slides.slice(index, index + this.options.slidesToShow).addClass('slick-active');\n\t\t\t} else if (allSlides.length <= this.options.slidesToShow) {\n\t\t\t\tallSlides.addClass('slick-active');\n\t\t\t} else {\n\t\t\t\tremainder = this.slideCount % this.options.slidesToShow;\n\t\t\t\tindexOffset = this.options.infinite === true ? this.options.slidesToShow + index : index;\n\n\t\t\t\tif (this.options.slidesToShow === this.options.slidesToScroll && this.slideCount - index < this.options.slidesToShow) {\n\t\t\t\t\tallSlides.slice(indexOffset - (this.options.slidesToShow - remainder), indexOffset + remainder).addClass('slick-active');\n\t\t\t\t} else {\n\t\t\t\t\tallSlides.slice(indexOffset, indexOffset + this.options.slidesToShow).addClass('slick-active');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.lazyLoad === 'ondemand') {\n\t\t\t\tthis.lazyLoad();\n\t\t\t}\n\t\t},\n\n\t\tsetPosition: function setPosition() {\n\t\t\tthis.setDimensions();\n\n\t\t\tthis.setHeight();\n\n\t\t\tif (this.options.fade === false) {\n\t\t\t\tthis.setCSS(this.getLeft(this.currentSlide));\n\t\t\t} else {\n\t\t\t\tthis.setFade();\n\t\t\t}\n\n\t\t\tthis.$slider.trigger('setPosition', [this]);\n\t\t},\n\n\t\tsetDimensions: function setDimensions() {\n\t\t\tif (this.options.vertical === true) {\n\t\t\t\tthis.$list.height(this.$slides.first().outerHeight(true) * this.options.slidesToShow);\n\t\t\t}\n\n\t\t\tthis.listWidth = this.$list.width();\n\t\t\tthis.listHeight = this.$list.height();\n\n\t\t\tif (this.options.vertical === false && this.options.variableWidth === false) {\n\t\t\t\tthis.slideWidth = Math.ceil(this.listWidth / this.options.slidesToShow);\n\t\t\t\tthis.$slideTrack.width(Math.ceil(this.slideWidth * this.$slideTrack.children('.slick-slide').length));\n\t\t\t} else if (this.options.variableWidth === true) {\n\t\t\t\tthis.$slideTrack.width(5000 * this.slideCount);\n\t\t\t} else {\n\t\t\t\tthis.slideWidth = Math.ceil(this.listWidth);\n\t\t\t\tthis.$slideTrack.height(Math.ceil(this.$slides.first().outerHeight(true) * this.$slideTrack.children('.slick-slide').length));\n\t\t\t}\n\n\t\t\tvar offset = this.$slides.first().outerWidth(true) - this.$slides.first().width();\n\t\t\tif (this.options.variableWidth === false) {\n\t\t\t\tthis.$slideTrack.children('.slick-slide').width(this.slideWidth - offset);\n\t\t\t}\n\t\t},\n\n\t\tsetHeight: function setHeight() {\n\t\t\tif (this.options.slidesToShow === 1 && this.options.adaptiveHeight === true && this.options.vertical === false) {\n\t\t\t\tvar targetHeight = this.$slides.eq(this.currentSlide).outerHeight(true);\n\t\t\t\tthis.$list.css('height', targetHeight);\n\t\t\t}\n\t\t},\n\n\t\tsetCSS: function setCSS(position) {\n\t\t\tvar positionProps = {};\n\n\t\t\tvar x = this.positionProp === 'left' ? Math.ceil(position) + 'px' : '0px';\n\t\t\tvar y = this.positionProp === 'top' ? Math.ceil(position) + 'px' : '0px';\n\n\t\t\tpositionProps[this.positionProp] = position;\n\n\t\t\tif (this.transformsEnabled === false) {\n\t\t\t\tthis.$slideTrack.css(positionProps);\n\t\t\t} else {\n\t\t\t\tpositionProps = {};\n\t\t\t\tif (this.cssTransitions === false) {\n\t\t\t\t\tpositionProps[this.animType] = 'translate(' + x + ', ' + y + ')';\n\t\t\t\t\tthis.$slideTrack.css(positionProps);\n\t\t\t\t} else {\n\t\t\t\t\tpositionProps[this.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n\t\t\t\t\tthis.$slideTrack.css(positionProps);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tsetFade: function setFade() {\n\t\t\tvar targetLeft;\n\n\t\t\tthis.$slides.each(function (index, element) {\n\t\t\t\ttargetLeft = this.slideWidth * index * -1;\n\t\t\t\t$(element).css({\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tleft: targetLeft,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tzIndex: this.options.zIndex - 2,\n\t\t\t\t\topacity: 0\n\t\t\t\t});\n\t\t\t}.bind(this));\n\n\t\t\tthis.$slides.eq(this.currentSlide).css({\n\t\t\t\tzIndex: this.options.zIndex - 1,\n\t\t\t\topacity: 1\n\t\t\t});\n\t\t}\n\t};\n\n\tvar responsive = {\n\t\tregisterBreakpoints: function registerBreakpoints() {\n\t\t\tvar breakpoint,\n\t\t\t    currentBreakpoint,\n\t\t\t    length,\n\t\t\t    responsiveSettings = this.options.responsive || null;\n\n\t\t\tif ($.type(responsiveSettings) === \"array\" && responsiveSettings.length) {\n\t\t\t\tthis.respondTo = this.options.respondTo || 'window';\n\n\t\t\t\tfor (breakpoint in responsiveSettings) {\n\t\t\t\t\tlength = this.breakpoints.length - 1;\n\t\t\t\t\tcurrentBreakpoint = responsiveSettings[breakpoint].breakpoint;\n\n\t\t\t\t\tif (responsiveSettings.hasOwnProperty(breakpoint)) {\n\t\t\t\t\t\t// loop through the breakpoints and cut out any existing\n\t\t\t\t\t\t// ones with the same breakpoint number, we don't want dupes.\n\t\t\t\t\t\twhile (length >= 0) {\n\t\t\t\t\t\t\tif (this.breakpoints[length] && this.breakpoints[length] === currentBreakpoint) {\n\t\t\t\t\t\t\t\tthis.breakpoints.splice(length, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlength--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.breakpoints.push(currentBreakpoint);\n\t\t\t\t\t\tthis.breakpointCallbacks[currentBreakpoint] = responsiveSettings[breakpoint].callback;\n\t\t\t\t\t\tthis.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.breakpoints.sort(function (a, b) {\n\t\t\t\t\treturn this.options.mobileFirst ? a - b : b - a;\n\t\t\t\t}.bind(this));\n\t\t\t}\n\t\t},\n\n\t\tcheckResponsive: function checkResponsive(initial, forceUpdate) {\n\t\t\tvar breakpoint,\n\t\t\t    targetBreakpoint,\n\t\t\t    respondToWidth,\n\t\t\t    triggerBreakpoint = false;\n\t\t\tvar sliderWidth = this.$slider.width();\n\t\t\tvar windowWidth = window.innerWidth || $(window).width();\n\n\t\t\tif (this.respondTo === 'window') {\n\t\t\t\trespondToWidth = windowWidth;\n\t\t\t} else if (this.respondTo === 'slider') {\n\t\t\t\trespondToWidth = sliderWidth;\n\t\t\t} else if (this.respondTo === 'min') {\n\t\t\t\trespondToWidth = Math.min(windowWidth, sliderWidth);\n\t\t\t}\n\n\t\t\tif (this.options.responsive && this.options.responsive.length && this.options.responsive !== null) {\n\n\t\t\t\ttargetBreakpoint = null;\n\n\t\t\t\tfor (breakpoint in this.breakpoints) {\n\t\t\t\t\tif (this.breakpoints.hasOwnProperty(breakpoint)) {\n\t\t\t\t\t\tif (this.originalSettings.mobileFirst === false) {\n\t\t\t\t\t\t\tif (respondToWidth < this.breakpoints[breakpoint]) {\n\t\t\t\t\t\t\t\ttargetBreakpoint = this.breakpoints[breakpoint];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (respondToWidth > this.breakpoints[breakpoint]) {\n\t\t\t\t\t\t\t\ttargetBreakpoint = this.breakpoints[breakpoint];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (targetBreakpoint !== null) {\n\t\t\t\t\tif (this.activeBreakpoint !== null) {\n\t\t\t\t\t\tif (targetBreakpoint !== this.activeBreakpoint || forceUpdate) {\n\t\t\t\t\t\t\tthis.activeBreakpoint = targetBreakpoint;\n\n\t\t\t\t\t\t\tif (this.breakpointSettings[targetBreakpoint] === 'unslick') {\n\t\t\t\t\t\t\t\tthis.unslick(targetBreakpoint);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.options = $.extend({}, this.originalSettings, this.breakpointSettings[targetBreakpoint]);\n\n\t\t\t\t\t\t\t\tif (initial === true) {\n\t\t\t\t\t\t\t\t\tthis.currentSlide = this.options.initialSlide;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.refresh(initial);\n\n\t\t\t\t\t\t\t\tif (this.breakpointCallbacks[targetBreakpoint]) {\n\t\t\t\t\t\t\t\t\tthis.breakpointCallbacks[targetBreakpoint](this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttriggerBreakpoint = targetBreakpoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.activeBreakpoint = targetBreakpoint;\n\n\t\t\t\t\t\tif (this.breakpointSettings[targetBreakpoint] === 'unslick') {\n\t\t\t\t\t\t\tthis.unslick(targetBreakpoint);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.options = $.extend({}, this.originalSettings, this.breakpointSettings[targetBreakpoint]);\n\n\t\t\t\t\t\t\tif (initial === true) {\n\t\t\t\t\t\t\t\tthis.currentSlide = this.options.initialSlide;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.refresh(initial);\n\n\t\t\t\t\t\t\tif (this.breakpointCallbacks[targetBreakpoint]) {\n\t\t\t\t\t\t\t\tthis.breakpointCallbacks[targetBreakpoint](this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttriggerBreakpoint = targetBreakpoint;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tif (this.activeBreakpoint !== null) {\n\t\t\t\t\t\tthis.activeBreakpoint = null;\n\t\t\t\t\t\tthis.options = this.originalSettings;\n\n\t\t\t\t\t\tif (initial === true) {\n\t\t\t\t\t\t\tthis.currentSlide = this.options.initialSlide;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.refresh(initial);\n\n\t\t\t\t\t\tif (this.breakpointCallbacks[targetBreakpoint]) {\n\t\t\t\t\t\t\tthis.breakpointCallbacks[targetBreakpoint](this);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttriggerBreakpoint = targetBreakpoint;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// only trigger breakpoints during an actual break. not on initialize.\n\t\t\t\tif (!initial && triggerBreakpoint !== false) {\n\t\t\t\t\tthis.$slider.trigger('breakpoint', [this, triggerBreakpoint]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar util = {\n\t\tgetLeft: function getLeft(slideIndex) {\n\t\t\tvar targetLeft,\n\t\t\t    verticalHeight,\n\t\t\t    verticalOffset = 0,\n\t\t\t    targetSlide;\n\n\t\t\tthis.slideOffset = 0;\n\t\t\tverticalHeight = this.$slides.first().outerHeight(true);\n\n\t\t\tif (this.options.infinite === true) {\n\t\t\t\tif (this.slideCount > this.options.slidesToShow) {\n\t\t\t\t\tthis.slideOffset = this.slideWidth * this.options.slidesToShow * -1;\n\t\t\t\t\tverticalOffset = verticalHeight * this.options.slidesToShow * -1;\n\t\t\t\t}\n\t\t\t\tif (this.slideCount % this.options.slidesToScroll !== 0) {\n\t\t\t\t\tif (slideIndex + this.options.slidesToScroll > this.slideCount && this.slideCount > this.options.slidesToShow) {\n\t\t\t\t\t\tif (slideIndex > this.slideCount) {\n\t\t\t\t\t\t\tthis.slideOffset = (this.options.slidesToShow - (slideIndex - this.slideCount)) * this.slideWidth * -1;\n\t\t\t\t\t\t\tverticalOffset = (this.options.slidesToShow - (slideIndex - this.slideCount)) * verticalHeight * -1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.slideOffset = this.slideCount % this.options.slidesToScroll * this.slideWidth * -1;\n\t\t\t\t\t\t\tverticalOffset = this.slideCount % this.options.slidesToScroll * verticalHeight * -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (slideIndex + this.options.slidesToShow > this.slideCount) {\n\t\t\t\t\tthis.slideOffset = (slideIndex + this.options.slidesToShow - this.slideCount) * this.slideWidth;\n\t\t\t\t\tverticalOffset = (slideIndex + this.options.slidesToShow - this.slideCount) * verticalHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.slideCount <= this.options.slidesToShow) {\n\t\t\t\tthis.slideOffset = 0;\n\t\t\t\tverticalOffset = 0;\n\t\t\t}\n\n\t\t\tif (this.options.vertical === false) {\n\t\t\t\ttargetLeft = slideIndex * this.slideWidth * -1 + this.slideOffset;\n\t\t\t} else {\n\t\t\t\ttargetLeft = slideIndex * verticalHeight * -1 + verticalOffset;\n\t\t\t}\n\n\t\t\tif (this.options.variableWidth === true) {\n\n\t\t\t\tif (this.slideCount <= this.options.slidesToShow || this.options.infinite === false) {\n\t\t\t\t\ttargetSlide = this.$slideTrack.children('.slick-slide').eq(slideIndex);\n\t\t\t\t} else {\n\t\t\t\t\ttargetSlide = this.$slideTrack.children('.slick-slide').eq(slideIndex + this.options.slidesToShow);\n\t\t\t\t}\n\n\t\t\t\ttargetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n\t\t\t}\n\n\t\t\treturn targetLeft;\n\t\t},\n\n\t\tcheckNavigable: function checkNavigable(index) {\n\t\t\tvar navigables, prevNavigable;\n\n\t\t\tnavigables = this.getNavigableIndexes();\n\t\t\tprevNavigable = 0;\n\t\t\tif (index > navigables[navigables.length - 1]) {\n\t\t\t\tindex = navigables[navigables.length - 1];\n\t\t\t} else {\n\t\t\t\tfor (var n in navigables) {\n\t\t\t\t\tif (index < navigables[n]) {\n\t\t\t\t\t\tindex = prevNavigable;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tprevNavigable = navigables[n];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn index;\n\t\t},\n\n\t\tgetNavigableIndexes: function getNavigableIndexes() {\n\t\t\tvar breakPoint = 0,\n\t\t\t    counter = 0,\n\t\t\t    indexes = [],\n\t\t\t    max;\n\n\t\t\tif (this.options.infinite === false) {\n\t\t\t\tmax = this.slideCount;\n\t\t\t} else {\n\t\t\t\tbreakPoint = this.options.slidesToScroll * -1;\n\t\t\t\tcounter = this.options.slidesToScroll * -1;\n\t\t\t\tmax = this.slideCount * 2;\n\t\t\t}\n\n\t\t\twhile (breakPoint < max) {\n\t\t\t\tindexes.push(breakPoint);\n\t\t\t\tbreakPoint = counter + this.options.slidesToScroll;\n\t\t\t\tcounter += this.options.slidesToScroll <= this.options.slidesToShow ? this.options.slidesToScroll : this.options.slidesToShow;\n\t\t\t}\n\n\t\t\treturn indexes;\n\t\t},\n\n\t\tgetSlideCount: function getSlideCount() {\n\t\t\tvar slidesTraversed, swipedSlide;\n\n\t\t\tif (this.options.swipeToSlide === true) {\n\t\t\t\tthis.$slideTrack.find('.slick-slide').each(function (index, slide) {\n\t\t\t\t\tif (slide.offsetLeft + $(slide).outerWidth() / 2 > this.swipeLeft * -1) {\n\t\t\t\t\t\tswipedSlide = slide;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tslidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - this.currentSlide) || 1;\n\n\t\t\t\treturn slidesTraversed;\n\t\t\t} else {\n\t\t\t\treturn this.options.slidesToScroll;\n\t\t\t}\n\t\t},\n\n\t\tgetDotCount: function getDotCount() {\n\t\t\tvar breakPoint = 0;\n\t\t\tvar counter = 0;\n\t\t\tvar pagerQty = 0;\n\n\t\t\tif (this.options.infinite === true) {\n\t\t\t\twhile (breakPoint < this.slideCount) {\n\t\t\t\t\t++pagerQty;\n\t\t\t\t\tbreakPoint = counter + this.options.slidesToScroll;\n\t\t\t\t\tcounter += this.options.slidesToScroll <= this.options.slidesToShow ? this.options.slidesToScroll : this.options.slidesToShow;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile (breakPoint < this.slideCount) {\n\t\t\t\t\t++pagerQty;\n\t\t\t\t\tbreakPoint = counter + this.options.slidesToScroll;\n\t\t\t\t\tcounter += this.options.slidesToScroll <= this.options.slidesToShow ? this.options.slidesToScroll : this.options.slidesToShow;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn pagerQty - 1;\n\t\t},\n\n\t\tasNavFor: function asNavFor(index) {\n\t\t\tvar asNavFor = this.options.asNavFor;\n\n\t\t\tif (asNavFor && asNavFor !== null) {\n\t\t\t\tasNavFor = $(asNavFor).not(this.$slider);\n\t\t\t}\n\n\t\t\tif (asNavFor !== null && (typeof asNavFor === \"undefined\" ? \"undefined\" : _typeof(asNavFor)) === 'object') {\n\t\t\t\tasNavFor.each(function (i, element) {\n\t\t\t\t\tvar target = $(element).rdslick('getSlick');\n\t\t\t\t\tif (!target.unslicked) {\n\t\t\t\t\t\ttarget.slideHandler(index, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tswipeDirection: function swipeDirection() {\n\t\t\tvar xDist, yDist, r, swipeAngle;\n\n\t\t\txDist = this.touchObject.startX - this.touchObject.curX;\n\t\t\tyDist = this.touchObject.startY - this.touchObject.curY;\n\t\t\tr = Math.atan2(yDist, xDist);\n\n\t\t\tswipeAngle = Math.round(r * 180 / Math.PI);\n\t\t\tif (swipeAngle < 0) {\n\t\t\t\tswipeAngle = 360 - Math.abs(swipeAngle);\n\t\t\t}\n\n\t\t\tif (swipeAngle <= 45 && swipeAngle >= 0) {\n\t\t\t\treturn 'left';\n\t\t\t}\n\n\t\t\tif (swipeAngle <= 360 && swipeAngle >= 315) {\n\t\t\t\treturn 'left';\n\t\t\t}\n\n\t\t\tif (swipeAngle >= 135 && swipeAngle <= 225) {\n\t\t\t\treturn 'right';\n\t\t\t}\n\n\t\t\tif (this.options.verticalSwiping === true) {\n\t\t\t\tif (swipeAngle >= 35 && swipeAngle <= 135) {\n\t\t\t\t\treturn 'left';\n\t\t\t\t} else {\n\t\t\t\t\treturn 'right';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 'vertical';\n\t\t},\n\n\t\tvisibility: function visibility() {\n\t\t\tif (document[this.hidden]) {\n\t\t\t\tthis.paused = true;\n\t\t\t\tthis.autoPlayClear();\n\t\t\t} else {\n\t\t\t\tif (this.options.autoplay === true) {\n\t\t\t\t\tthis.paused = false;\n\t\t\t\t\tthis.autoPlay();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function destroy(refresh) {\n\t\t\tthis.autoPlayClear();\n\t\t\tthis.touchObject = {};\n\t\t\tthis.cleanUpEvents();\n\n\t\t\t$('.slick-cloned', this.$slider).detach();\n\n\t\t\tif (this.$dots) {\n\t\t\t\tthis.$dots.remove();\n\t\t\t}\n\n\t\t\tif (this.$pagination) {\n\t\t\t\tthis.$pagination.all.remove();\n\t\t\t}\n\n\t\t\tif (this.$prevArrow && this.$prevArrow.length) {\n\t\t\t\tthis.$prevArrow.removeClass('slick-disabled slick-arrow slick-hidden').css(\"display\", \"\");\n\n\t\t\t\tif (this.htmlExpr.test(this.options.prevArrow)) {\n\t\t\t\t\tthis.$prevArrow.remove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.$nextArrow && this.$nextArrow.length) {\n\t\t\t\tthis.$nextArrow.removeClass('slick-disabled slick-arrow slick-hidden').css(\"display\", \"\");\n\n\t\t\t\tif (this.htmlExpr.test(this.options.nextArrow)) {\n\t\t\t\t\tthis.$nextArrow.remove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.$slides) {\n\t\t\t\tthis.$slides.removeClass('slick-slide slick-active slick-center slick-visible slick-current').removeAttr('data-slick-index').each(function () {\n\t\t\t\t\t$(this).attr('style', $(this).data('originalStyling'));\n\t\t\t\t});\n\t\t\t\tthis.$slideTrack.children(this.options.slide).detach();\n\t\t\t\tthis.$slideTrack.detach();\n\t\t\t\tthis.$list.detach();\n\t\t\t\tthis.$slider.append(this.$slides);\n\t\t\t}\n\n\t\t\tthis.cleanUpRows();\n\n\t\t\tthis.$slider.removeClass('slick-slider');\n\t\t\tthis.$slider.removeClass('slick-initialized');\n\n\t\t\tthis.unslicked = true;\n\n\t\t\tif (!refresh) {\n\t\t\t\tthis.$slider.trigger('destroy', [this]);\n\t\t\t}\n\t\t},\n\n\t\tunslick: function unslick(fromBreakpoint) {\n\t\t\tthis.$slider.trigger('unslick', [this, fromBreakpoint]);\n\t\t\tthis.destroy();\n\t\t},\n\n\t\trefresh: function refresh(initializing) {\n\t\t\tvar currentSlide, firstVisible;\n\n\t\t\tfirstVisible = this.slideCount - this.options.slidesToShow;\n\n\t\t\t// check that the new breakpoint can actually accept the\n\t\t\t// \"current slide\" as the current slide, otherwise we need\n\t\t\t// to set it to the closest possible value.\n\t\t\tif (!this.options.infinite) {\n\t\t\t\tif (this.slideCount <= this.options.slidesToShow) {\n\t\t\t\t\tthis.currentSlide = 0;\n\t\t\t\t} else if (this.currentSlide > firstVisible) {\n\t\t\t\t\tthis.currentSlide = firstVisible;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrentSlide = this.currentSlide;\n\n\t\t\tthis.destroy(true);\n\n\t\t\t$.extend(this, this.initials, { currentSlide: currentSlide });\n\n\t\t\tthis.init();\n\n\t\t\tif (!initializing) {\n\t\t\t\tthis.changeSlide({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tmessage: 'index',\n\t\t\t\t\t\tindex: currentSlide\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t}\n\t\t},\n\n\t\tcleanUpRows: function cleanUpRows() {\n\t\t\tvar originalSlides;\n\n\t\t\tif (this.options.rows > 1) {\n\t\t\t\toriginalSlides = this.$slides.children().children();\n\t\t\t\toriginalSlides.removeAttr('style');\n\t\t\t\tthis.$slider.html(originalSlides);\n\t\t\t}\n\t\t},\n\n\t\tunload: function unload() {\n\t\t\t$('.slick-cloned', this.$slider).remove();\n\n\t\t\tif (this.$dots) {\n\t\t\t\tthis.$dots.remove();\n\t\t\t}\n\n\t\t\tif (this.$pagination) {\n\t\t\t\tthis.$pagination.all.remove();\n\t\t\t}\n\n\t\t\tif (this.$prevArrow && this.htmlExpr.test(this.options.prevArrow)) {\n\t\t\t\tthis.$prevArrow.remove();\n\t\t\t}\n\n\t\t\tif (this.$nextArrow && this.htmlExpr.test(this.options.nextArrow)) {\n\t\t\t\tthis.$nextArrow.remove();\n\t\t\t}\n\n\t\t\tthis.$slides.removeClass('slick-slide slick-active slick-visible slick-current').css('width', '');\n\t\t},\n\n\t\treinit: function reinit() {\n\t\t\tthis.$slides = this.$slideTrack.children(this.options.slide).addClass('slick-slide');\n\n\t\t\tthis.slideCount = this.$slides.length;\n\n\t\t\tif (this.currentSlide >= this.slideCount && this.currentSlide !== 0) {\n\t\t\t\tthis.currentSlide = this.currentSlide - this.options.slidesToScroll;\n\t\t\t}\n\n\t\t\tif (this.slideCount <= this.options.slidesToShow) {\n\t\t\t\tthis.currentSlide = 0;\n\t\t\t}\n\n\t\t\tthis.registerBreakpoints();\n\n\t\t\tthis.setProps();\n\t\t\tthis.setupInfinite();\n\t\t\tthis.buildArrows();\n\t\t\tthis.updateArrows();\n\t\t\tthis.initArrowEvents();\n\t\t\tthis.buildDots();\n\t\t\tthis.updateDots();\n\t\t\tthis.updatePagination();\n\t\t\tthis.initDotEvents();\n\t\t\tthis.initPaginationEvents();\n\n\t\t\tthis.checkResponsive(false, true);\n\n\t\t\tif (this.options.focusOnSelect === true) {\n\t\t\t\t$(this.$slideTrack).children().on('click.slick', this.selectHandler);\n\t\t\t}\n\n\t\t\tthis.setSlideClasses(0);\n\n\t\t\tthis.setPosition();\n\n\t\t\tthis.$slider.trigger('reInit', [this]);\n\n\t\t\tif (this.options.autoplay === true) {\n\t\t\t\tthis.focusHandler();\n\t\t\t}\n\t\t},\n\n\t\tgetIndexFromID: function getIndexFromID(slickID) {\n\t\t\tif (typeof slickID !== \"string\") {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tvar slide = this.$list.find('[data-' + this.options.sliderIDData + '=' + slickID + ']').first();\n\n\t\t\tif (slide.length) {\n\t\t\t\treturn slide.data('slick-index') || 0;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t};\n\n\tvar events = {\n\t\tinitializeEvents: function initializeEvents() {\n\t\t\tthis.initArrowEvents();\n\t\t\tthis.initDotEvents();\n\t\t\tthis.initPaginationEvents();\n\n\t\t\tthis.$list.on('touchstart.slick mousedown.slick', {\n\t\t\t\taction: 'start'\n\t\t\t}, this.swipeHandler);\n\n\t\t\tthis.$list.on('touchmove.slick mousemove.slick', {\n\t\t\t\taction: 'move'\n\t\t\t}, this.swipeHandler);\n\n\t\t\tthis.$list.on('touchend.slick mouseup.slick', {\n\t\t\t\taction: 'end'\n\t\t\t}, this.swipeHandler);\n\n\t\t\tthis.$list.on('touchcancel.slick mouseleave.slick', {\n\t\t\t\taction: 'end'\n\t\t\t}, this.swipeHandler);\n\n\t\t\tthis.$list.on('click.slick', this.clickHandler);\n\n\t\t\t$(document).on(this.visibilityChange, this.visibility.bind(this));\n\n\t\t\tthis.$list.on('mouseenter.slick', this.setPaused.bind(this, true));\n\t\t\tthis.$list.on('mouseleave.slick', this.setPaused.bind(this, false));\n\n\t\t\tif (this.options.focusOnSelect === true) {\n\t\t\t\t$(this.$slideTrack).children().on('click.slick', this.selectHandler);\n\t\t\t}\n\n\t\t\t$(window).on('orientationchange.slick.slick-' + this.instanceUid, this.orientationChange.bind(this));\n\n\t\t\t$(window).on('resize.slick.slick-' + this.instanceUid, this.resize.bind(this));\n\n\t\t\t$('[draggable!=true]', this.$slideTrack).on('dragstart', this.preventDefault);\n\n\t\t\t$(window).on('load.slick.slick-' + this.instanceUid, this.setPosition);\n\t\t\t$(document).on('ready.slick.slick-' + this.instanceUid, this.setPosition);\n\n\t\t\tif (this.options.hashLink) {\n\t\t\t\t$(window).on('hashchange.slick.slick-' + this.instanceUid, this.hashHandle);\n\t\t\t}\n\t\t},\n\n\t\tcleanUpEvents: function cleanUpEvents() {\n\t\t\tif (this.options.dots && this.$dots !== null) {\n\t\t\t\t$('li', this.$dots).off('click.slick', this.changeSlide);\n\n\t\t\t\tif (this.options.pauseOnDotsHover === true && this.options.autoplay === true) {\n\t\t\t\t\t$('li', this.$dots).off('mouseenter.slick', $.proxy(this.setPaused, this, true)).off('mouseleave.slick', $.proxy(this.setPaused, this, false));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.pangnation && this.$pangnation.all !== null) {\n\t\t\t\tthis.$pagination.numbers.off('click.slick', function (e) {\n\t\t\t\t\tthis.changeSlide({\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tmessage: 'index',\n\t\t\t\t\t\t\tindex: $(e.target).data('slick-id-target')\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}.bind(this));\n\n\t\t\t\tthis.$pagination.prev.off('click.slick', {\n\t\t\t\t\tmessage: 'previous'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$pagination.next.off('click.slick', {\n\t\t\t\t\tmessage: 'next'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$pagination.first.off('click.slick', {\n\t\t\t\t\tmessage: 'first'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$pagination.last.off('click.slick', {\n\t\t\t\t\tmessage: 'last'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tif (this.options.pagination === true && this.options.pauseOnDotsHover === true && this.options.autoplay === true) {\n\t\t\t\t\tthis.$pagination.numbers.parents().off('mouseenter.slick', this.setPaused.bind(this, true)).off('mouseleave.slick', this.setPaused.bind(this, false));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.arrows === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$prevArrow && this.$prevArrow.off('click.slick', this.changeSlide);\n\t\t\t\tthis.$nextArrow && this.$nextArrow.off('click.slick', this.changeSlide);\n\t\t\t}\n\n\t\t\tthis.$list.off('touchstart.slick mousedown.slick', this.swipeHandler);\n\t\t\tthis.$list.off('touchmove.slick mousemove.slick', this.swipeHandler);\n\t\t\tthis.$list.off('touchend.slick mouseup.slick', this.swipeHandler);\n\t\t\tthis.$list.off('touchcancel.slick mouseleave.slick', this.swipeHandler);\n\n\t\t\tthis.$list.off('click.slick', this.clickHandler);\n\n\t\t\t$(document).off(this.visibilityChange, this.visibility);\n\n\t\t\tthis.$list.off('mouseenter.slick', this.setPaused.bind(this, true));\n\t\t\tthis.$list.off('mouseleave.slick', this.setPaused.bind(this, false));\n\n\t\t\tif (this.options.focusOnSelect === true) {\n\t\t\t\t$(this.$slideTrack).children().off('click.slick', this.selectHandler);\n\t\t\t}\n\n\t\t\t$(window).off('orientationchange.slick.slick-' + this.instanceUid, this.orientationChange);\n\n\t\t\t$(window).off('resize.slick.slick-' + this.instanceUid, this.resize);\n\n\t\t\t$('[draggable!=true]', this.$slideTrack).off('dragstart', this.preventDefault);\n\n\t\t\t$(window).off('load.slick.slick-' + this.instanceUid, this.setPosition);\n\t\t\t$(document).off('ready.slick.slick-' + this.instanceUid, this.setPosition);\n\n\t\t\tif (this.options.hashLink) {\n\t\t\t\t$(window).off('hashchange.slick.slick-' + this.instanceUid, this.hashHandle);\n\t\t\t}\n\t\t},\n\n\t\tinitArrowEvents: function initArrowEvents() {\n\t\t\tif (this.options.arrows === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$prevArrow.on('click.slick', {\n\t\t\t\t\tmessage: 'previous'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$nextArrow.on('click.slick', {\n\t\t\t\t\tmessage: 'next'\n\t\t\t\t}, this.changeSlide);\n\t\t\t}\n\t\t},\n\n\t\tinitDotEvents: function initDotEvents() {\n\t\t\tif (this.options.dots === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\t$('li', this.$dots).on('click.slick', {\n\t\t\t\t\tmessage: 'index'\n\t\t\t\t}, this.changeSlide);\n\t\t\t}\n\n\t\t\tif (this.options.dots === true && this.options.pauseOnDotsHover === true && this.options.autoplay === true) {\n\t\t\t\t$('li', this.$dots).on('mouseenter.slick', this.setPaused.bind(this, true)).on('mouseleave.slick', this.setPaused.bind(this, false));\n\t\t\t}\n\t\t},\n\n\t\tinitPaginationEvents: function initPaginationEvents() {\n\t\t\tif (this.options.pagination === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$pagination.numbers.on('click.slick', function (e) {\n\t\t\t\t\tthis.changeSlide({\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tmessage: 'index',\n\t\t\t\t\t\t\tindex: $(e.target).data('slick-id-target')\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}.bind(this));\n\n\t\t\t\tthis.$pagination.prev.on('click.slick', {\n\t\t\t\t\tmessage: 'previous'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$pagination.next.on('click.slick', {\n\t\t\t\t\tmessage: 'next'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$pagination.first.on('click.slick', {\n\t\t\t\t\tmessage: 'first'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$pagination.last.on('click.slick', {\n\t\t\t\t\tmessage: 'last'\n\t\t\t\t}, this.changeSlide);\n\t\t\t}\n\n\t\t\tif (this.options.pagination === true && this.options.pauseOnDotsHover === true && this.options.autoplay === true) {\n\t\t\t\tthis.$pagination.numbers.parents().on('mouseenter.slick', this.setPaused.bind(this, true)).on('mouseleave.slick', this.setPaused.bind(this, false));\n\t\t\t}\n\t\t},\n\n\t\tswipeHandler: function swipeHandler(event) {\n\t\t\tif (this.options.swipe === false || 'ontouchend' in document && this.options.swipe === false) {\n\t\t\t\treturn;\n\t\t\t} else if (this.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ? event.originalEvent.touches.length : 1;\n\n\t\t\tthis.touchObject.minSwipe = this.listWidth / this.options.touchThreshold;\n\n\t\t\tif (this.options.verticalSwiping === true) {\n\t\t\t\tthis.touchObject.minSwipe = this.listHeight / this.options.touchThreshold;\n\t\t\t}\n\n\t\t\tswitch (event.data.action) {\n\t\t\t\tcase 'start':\n\t\t\t\t\tthis.swipeStart(event);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'move':\n\t\t\t\t\tthis.swipeMove(event);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'end':\n\t\t\t\t\tthis.swipeEnd(event);\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t},\n\n\t\tswipeStart: function swipeStart(event) {\n\t\t\tvar touches;\n\n\t\t\tif (this.touchObject.fingerCount !== 1 || this.slideCount <= this.options.slidesToShow) {\n\t\t\t\tthis.touchObject = {};\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n\t\t\t\ttouches = event.originalEvent.touches[0];\n\t\t\t}\n\n\t\t\tthis.touchObject.startX = this.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n\t\t\tthis.touchObject.startY = this.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\n\t\t\tthis.dragging = true;\n\t\t},\n\n\t\tswipeMove: function swipeMove(event) {\n\t\t\tvar curLeft, swipeDirection, swipeLength, positionOffset, touches;\n\n\t\t\ttouches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\n\t\t\tif (!this.dragging || touches && touches.length !== 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tcurLeft = this.getLeft(this.currentSlide);\n\n\t\t\tthis.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n\t\t\tthis.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\n\t\t\tthis.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(this.touchObject.curX - this.touchObject.startX, 2)));\n\n\t\t\tif (this.options.verticalSwiping === true) {\n\t\t\t\tthis.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(this.touchObject.curY - this.touchObject.startY, 2)));\n\t\t\t}\n\n\t\t\tswipeDirection = this.swipeDirection();\n\n\t\t\tif (swipeDirection === 'vertical') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (event.originalEvent !== undefined && this.touchObject.swipeLength > 4) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tpositionOffset = this.touchObject.curX > this.touchObject.startX ? 1 : -1;\n\t\t\tif (this.options.verticalSwiping === true) {\n\t\t\t\tpositionOffset = this.touchObject.curY > this.touchObject.startY ? 1 : -1;\n\t\t\t}\n\n\t\t\tswipeLength = this.touchObject.swipeLength;\n\n\t\t\tthis.touchObject.edgeHit = false;\n\n\t\t\tif (this.options.infinite === false) {\n\t\t\t\tif (this.currentSlide === 0 && swipeDirection === 'right' || this.currentSlide >= this.getDotCount() && swipeDirection === 'left') {\n\t\t\t\t\tswipeLength = this.touchObject.swipeLength * this.options.edgeFriction;\n\t\t\t\t\tthis.touchObject.edgeHit = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.vertical === false) {\n\t\t\t\tthis.swipeLeft = curLeft + swipeLength * positionOffset;\n\t\t\t} else {\n\t\t\t\tthis.swipeLeft = curLeft + swipeLength * (this.$list.height() / this.listWidth) * positionOffset;\n\t\t\t}\n\t\t\tif (this.options.verticalSwiping === true) {\n\t\t\t\tthis.swipeLeft = curLeft + swipeLength * positionOffset;\n\t\t\t}\n\n\t\t\tif (this.options.fade === true || this.options.touchMove === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.animating === true) {\n\t\t\t\tthis.swipeLeft = null;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.setCSS(this.swipeLeft);\n\t\t},\n\n\t\tswipeEnd: function swipeEnd() {\n\t\t\tvar slideCount;\n\n\t\t\tthis.dragging = false;\n\n\t\t\tthis.shouldClick = this.touchObject.swipeLength > 10 ? false : true;\n\n\t\t\tif (this.touchObject.curX === undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.touchObject.edgeHit === true) {\n\t\t\t\tthis.$slider.trigger('edge', [this, this.swipeDirection()]);\n\t\t\t}\n\n\t\t\tif (this.touchObject.swipeLength >= this.touchObject.minSwipe) {\n\n\t\t\t\tswitch (this.swipeDirection()) {\n\t\t\t\t\tcase 'left':\n\t\t\t\t\t\tslideCount = this.options.swipeToSlide ? this.checkNavigable(this.currentSlide + this.getSlideCount()) : this.currentSlide + this.getSlideCount();\n\t\t\t\t\t\tthis.slideHandler(slideCount);\n\t\t\t\t\t\tthis.currentDirection = 0;\n\t\t\t\t\t\tthis.touchObject = {};\n\t\t\t\t\t\tthis.$slider.trigger('swipe', [this, 'left']);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'right':\n\t\t\t\t\t\tslideCount = this.options.swipeToSlide ? this.checkNavigable(this.currentSlide - this.getSlideCount()) : this.currentSlide - this.getSlideCount();\n\t\t\t\t\t\tthis.slideHandler(slideCount);\n\t\t\t\t\t\tthis.currentDirection = 1;\n\t\t\t\t\t\tthis.touchObject = {};\n\t\t\t\t\t\tthis.$slider.trigger('swipe', [this, 'right']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.touchObject.startX !== this.touchObject.curX) {\n\t\t\t\t\tthis.slideHandler(this.currentSlide);\n\t\t\t\t\tthis.touchObject = {};\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tslideHandler: function slideHandler(index, sync, dontAnimate) {\n\t\t\tvar targetSlide,\n\t\t\t    animSlide,\n\t\t\t    oldSlide,\n\t\t\t    slideLeft,\n\t\t\t    targetLeft = null;\n\n\t\t\tsync = sync || false;\n\n\t\t\tif (this.animating === true && this.options.waitForAnimate === true) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.options.fade === true && this.currentSlide === index) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.slideCount <= this.options.slidesToShow) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (sync === false) {\n\t\t\t\tthis.asNavFor(index);\n\t\t\t}\n\n\t\t\ttargetSlide = index;\n\t\t\ttargetLeft = this.getLeft(targetSlide);\n\t\t\tslideLeft = this.getLeft(this.currentSlide);\n\n\t\t\tthis.currentLeft = this.swipeLeft === null ? slideLeft : this.swipeLeft;\n\n\t\t\tif (this.options.infinite === false && (index < 0 || index > this.getDotCount() * this.options.slidesToScroll)) {\n\t\t\t\tif (this.options.fade === false) {\n\t\t\t\t\ttargetSlide = this.currentSlide;\n\t\t\t\t\tif (dontAnimate !== true) {\n\t\t\t\t\t\tthis.animateSlide(slideLeft, function () {\n\t\t\t\t\t\t\tthis.postSlide(targetSlide);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.postSlide(targetSlide);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else if (this.options.infinite === false && (index < 0 || index > this.slideCount - this.options.slidesToScroll)) {\n\t\t\t\tif (this.options.fade === false) {\n\t\t\t\t\ttargetSlide = this.currentSlide;\n\t\t\t\t\tif (dontAnimate !== true) {\n\t\t\t\t\t\tthis.animateSlide(slideLeft, function () {\n\t\t\t\t\t\t\tthis.postSlide(targetSlide);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.postSlide(targetSlide);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.options.autoplay === true) {\n\t\t\t\tclearInterval(this.autoPlayTimer);\n\t\t\t}\n\n\t\t\tif (targetSlide < 0) {\n\t\t\t\tif (this.slideCount % this.options.slidesToScroll !== 0) {\n\t\t\t\t\tanimSlide = this.slideCount - this.slideCount % this.options.slidesToScroll;\n\t\t\t\t} else {\n\t\t\t\t\tanimSlide = this.slideCount + targetSlide;\n\t\t\t\t}\n\t\t\t} else if (targetSlide >= this.slideCount) {\n\t\t\t\tif (this.slideCount % this.options.slidesToScroll !== 0) {\n\t\t\t\t\tanimSlide = 0;\n\t\t\t\t} else {\n\t\t\t\t\tanimSlide = targetSlide - this.slideCount;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanimSlide = targetSlide;\n\t\t\t}\n\n\t\t\tthis.animating = true;\n\n\t\t\tthis.$slider.trigger('beforeChange', [this, this.currentSlide, animSlide]);\n\n\t\t\toldSlide = this.currentSlide;\n\t\t\tthis.currentSlide = animSlide;\n\n\t\t\tthis.setSlideClasses(this.currentSlide);\n\n\t\t\tthis.updateDots();\n\t\t\tthis.updatePagination();\n\t\t\tthis.updateArrows();\n\n\t\t\tif (this.options.fade === true) {\n\t\t\t\tif (dontAnimate !== true) {\n\n\t\t\t\t\tthis.fadeSlideOut(oldSlide);\n\n\t\t\t\t\tthis.fadeSlide(animSlide, function () {\n\t\t\t\t\t\tthis.postSlide(animSlide);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.postSlide(animSlide);\n\t\t\t\t}\n\t\t\t\tthis.animateHeight();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (dontAnimate !== true) {\n\t\t\t\tthis.animateSlide(targetLeft, function () {\n\t\t\t\t\tthis.postSlide(animSlide);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.postSlide(animSlide);\n\t\t\t}\n\t\t},\n\n\t\tclickHandler: function clickHandler(event) {\n\t\t\tif (this.shouldClick === false) {\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\tselectHandler: function selectHandler(event) {\n\t\t\tvar targetElement = $(event.target).is('.slick-slide') ? $(event.target) : $(event.target).parents('.slick-slide');\n\n\t\t\tvar index = parseInt(targetElement.attr('data-slick-index'));\n\n\t\t\tif (!index) {\n\t\t\t\tindex = 0;\n\t\t\t}\n\n\t\t\tif (this.slideCount <= this.options.slidesToShow) {\n\t\t\t\tthis.setSlideClasses(index);\n\t\t\t\tthis.asNavFor(index);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.slideHandler(index);\n\t\t},\n\n\t\torientationChange: function orientationChange() {\n\t\t\tthis.checkResponsive();\n\t\t\tthis.setPosition();\n\t\t},\n\n\t\tresize: function resize() {\n\t\t\tif ($(window).width() !== this.windowWidth) {\n\t\t\t\tclearTimeout(this.windowDelay);\n\n\t\t\t\tthis.windowDelay = window.setTimeout(function () {\n\t\t\t\t\tthis.windowWidth = $(window).width();\n\t\t\t\t\tthis.checkResponsive();\n\t\t\t\t\tif (!this.unslicked) {\n\t\t\t\t\t\tthis.setPosition();\n\t\t\t\t\t}\n\t\t\t\t}.bind(this), 50);\n\t\t\t}\n\t\t},\n\n\t\tfocusHandler: function focusHandler() {\n\t\t\tthis.$slider.on('focus.slick blur.slick', '*', function (event) {\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\tvar sf = $(this);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (this.isPlay) {\n\t\t\t\t\t\tif (sf.is(':focus')) {\n\t\t\t\t\t\t\tthis.autoPlayClear();\n\t\t\t\t\t\t\tthis.paused = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.paused = false;\n\t\t\t\t\t\t\tthis.autoPlay();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}.bind(this), 0);\n\t\t\t});\n\t\t},\n\n\t\thashHandle: function hashHandle() {\n\t\t\tvar hash = window.location.hash;\n\t\t\tif (hash) {\n\t\t\t\thash = hash.substr(1);\n\t\t\t\tthis.changeSlide({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tmessage: 'indexID',\n\t\t\t\t\t\tindexID: hash\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar slideControllers = {\n\t\tautoPlay: function autoPlay() {\n\t\t\tif (this.autoPlayTimer) {\n\t\t\t\tclearInterval(this.autoPlayTimer);\n\t\t\t}\n\n\t\t\tif (this.slideCount > this.options.slidesToShow && this.paused !== true) {\n\t\t\t\tthis.autoPlayTimer = setInterval(this.autoPlayIterator, this.options.autoplaySpeed);\n\t\t\t}\n\t\t},\n\n\t\tautoPlayClear: function autoPlayClear() {\n\t\t\tif (this.autoPlayTimer) {\n\t\t\t\tclearInterval(this.autoPlayTimer);\n\t\t\t}\n\t\t},\n\n\t\tautoPlayIterator: function autoPlayIterator() {\n\t\t\tif (this.options.infinite === false) {\n\t\t\t\tif (this.direction === 1) {\n\n\t\t\t\t\tif (this.currentSlide + 1 === this.slideCount - 1) {\n\t\t\t\t\t\tthis.direction = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.slideHandler(this.currentSlide + this.options.slidesToScroll);\n\t\t\t\t} else {\n\n\t\t\t\t\tif (this.currentSlide - 1 === 0) {\n\t\t\t\t\t\tthis.direction = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.slideHandler(this.currentSlide - this.options.slidesToScroll);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.slideHandler(this.currentSlide + this.options.slidesToScroll);\n\t\t\t}\n\t\t},\n\n\t\tsetPaused: function setPaused(paused) {\n\t\t\tif (this.options.autoplay === true && this.options.pauseOnHover === true) {\n\t\t\t\tthis.paused = paused;\n\t\t\t\tif (!paused) {\n\t\t\t\t\tthis.autoPlay();\n\t\t\t\t} else {\n\t\t\t\t\tthis.autoPlayClear();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tchangeSlide: function changeSlide(event, dontAnimate) {\n\t\t\tvar $target = $(event.target),\n\t\t\t    indexOffset,\n\t\t\t    slideOffset,\n\t\t\t    unevenOffset,\n\t\t\t    index;\n\n\t\t\t// If target is a link, prevent default action.\n\t\t\tif ($target.is('a')) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\t// If target is not the <li> element (ie: a child), find the <li>.\n\t\t\tif (!$target.is('li')) {\n\t\t\t\t$target = $target.closest('li');\n\t\t\t}\n\n\t\t\tunevenOffset = this.slideCount % this.options.slidesToScroll !== 0;\n\t\t\tindexOffset = unevenOffset ? 0 : (this.slideCount - this.currentSlide) % this.options.slidesToScroll;\n\n\t\t\tswitch (event.data.message) {\n\t\t\t\tcase 'previous':\n\t\t\t\t\tslideOffset = indexOffset === 0 ? this.options.slidesToScroll : this.options.slidesToShow - indexOffset;\n\t\t\t\t\tif (this.slideCount > this.options.slidesToShow) {\n\t\t\t\t\t\tthis.slideHandler(this.currentSlide - slideOffset, false, dontAnimate);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'next':\n\t\t\t\t\tslideOffset = indexOffset === 0 ? this.options.slidesToScroll : indexOffset;\n\t\t\t\t\tif (this.slideCount > this.options.slidesToShow) {\n\t\t\t\t\t\tthis.slideHandler(this.currentSlide + slideOffset, false, dontAnimate);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'first':\n\t\t\t\t\tthis.slideHandler(0, false, dontAnimate);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'last':\n\t\t\t\t\tthis.slideHandler(this.slideCount - 1, false, dontAnimate);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'index':\n\t\t\t\t\tindex = event.data.index === 0 ? 0 : event.data.index || $target.index() * this.options.slidesToScroll;\n\n\t\t\t\t\tthis.slideHandler(this.checkNavigable(index), false, dontAnimate);\n\t\t\t\t\t$target.children().trigger('focus');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'indexID':\n\t\t\t\t\tif (this.options.infinite) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex = this.getIndexFromID(event.data.indexID);\n\t\t\t\t\tthis.slideHandler(this.checkNavigable(index), false, dontAnimate);\n\t\t\t\t\t$target.children().trigger('focus');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\n\t\tanimateSlide: function animateSlide(targetLeft, callback) {\n\t\t\tvar animProps = {};\n\n\t\t\tthis.animateHeight();\n\n\t\t\tthis.applyTransition();\n\t\t\ttargetLeft = Math.ceil(targetLeft);\n\n\t\t\tif (this.options.vertical === false) {\n\t\t\t\tanimProps[this.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n\t\t\t} else {\n\t\t\t\tanimProps[this.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n\t\t\t}\n\t\t\tthis.$slideTrack.css(animProps);\n\n\t\t\tif (callback) {\n\t\t\t\tsetTimeout(function () {\n\n\t\t\t\t\tthis.disableTransition();\n\n\t\t\t\t\tcallback.call(this);\n\t\t\t\t}.bind(this), this.options.speed);\n\t\t\t}\n\t\t},\n\n\t\tapplyTransition: function applyTransition(slide) {\n\t\t\tvar transition = {};\n\n\t\t\tif (this.options.fade === false) {\n\t\t\t\ttransition[this.transitionType] = this.transformType + ' ' + this.options.speed + 'ms ' + this.options.cssEase;\n\t\t\t} else {\n\t\t\t\ttransition[this.transitionType] = 'opacity ' + this.options.speed + 'ms ' + this.options.cssEase;\n\t\t\t}\n\n\t\t\tif (this.options.fade === false) {\n\t\t\t\tthis.$slideTrack.css(transition);\n\t\t\t} else {\n\t\t\t\tthis.$slides.eq(slide).css(transition);\n\t\t\t}\n\t\t},\n\n\t\tdisableTransition: function disableTransition(slide) {\n\t\t\tvar transition = {};\n\n\t\t\ttransition[this.transitionType] = '';\n\n\t\t\tif (this.options.fade === false) {\n\t\t\t\tthis.$slideTrack.css(transition);\n\t\t\t} else {\n\t\t\t\tthis.$slides.eq(slide).css(transition);\n\t\t\t}\n\t\t},\n\n\t\tpostSlide: function postSlide(index) {\n\t\t\tthis.$slider.trigger('afterChange', [this, index]);\n\n\t\t\tthis.animating = false;\n\n\t\t\tthis.setPosition();\n\n\t\t\tthis.swipeLeft = null;\n\n\t\t\tif (this.options.autoplay === true && this.paused === false) {\n\t\t\t\tthis.autoPlay();\n\t\t\t}\n\t\t},\n\n\t\tfadeSlideOut: function fadeSlideOut(slideIndex) {\n\t\t\tif (this.cssTransitions === false) {\n\n\t\t\t\tthis.$slides.eq(slideIndex).animate({\n\t\t\t\t\topacity: 0,\n\t\t\t\t\tzIndex: this.options.zIndex - 2\n\t\t\t\t}, this.options.speed, this.options.easing);\n\t\t\t} else {\n\n\t\t\t\tthis.applyTransition(slideIndex);\n\n\t\t\t\tthis.$slides.eq(slideIndex).css({\n\t\t\t\t\topacity: 0,\n\t\t\t\t\tzIndex: this.options.zIndex - 2\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tfadeSlide: function fadeSlide(slideIndex, callback) {\n\t\t\tif (this.cssTransitions === false) {\n\n\t\t\t\tthis.$slides.eq(slideIndex).css({\n\t\t\t\t\tzIndex: this.options.zIndex\n\t\t\t\t});\n\n\t\t\t\tthis.$slides.eq(slideIndex).animate({\n\t\t\t\t\topacity: 1\n\t\t\t\t}, this.options.speed, this.options.easing, callback);\n\t\t\t} else {\n\n\t\t\t\tthis.applyTransition(slideIndex);\n\n\t\t\t\tthis.$slides.eq(slideIndex).css({\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tzIndex: this.options.zIndex\n\t\t\t\t});\n\n\t\t\t\tif (callback) {\n\t\t\t\t\tsetTimeout(function () {\n\n\t\t\t\t\t\tthis.disableTransition(slideIndex);\n\n\t\t\t\t\t\tcallback.call(this);\n\t\t\t\t\t}.bind(this), this.options.speed);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tanimateHeight: function animateHeight() {\n\t\t\tif (this.options.slidesToShow === 1 && this.options.adaptiveHeight === true && this.options.vertical === false) {\n\t\t\t\tvar targetHeight = this.$slides.eq(this.currentSlide).outerHeight(true);\n\t\t\t\tthis.$list.animate({\n\t\t\t\t\theight: targetHeight\n\t\t\t\t}, this.options.speed);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar slickMethods = {\n\t\taddSlide: function addSlide(markup, index, addBefore) {\n\t\t\tif (typeof index === 'boolean') {\n\t\t\t\taddBefore = index;\n\t\t\t\tindex = null;\n\t\t\t} else if (index < 0 || index >= this.slideCount) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.unload();\n\n\t\t\tif (typeof index === 'number') {\n\t\t\t\tif (index === 0 && this.$slides.length === 0) {\n\t\t\t\t\t$(markup).appendTo(this.$slideTrack);\n\t\t\t\t} else if (addBefore) {\n\t\t\t\t\t$(markup).insertBefore(this.$slides.eq(index));\n\t\t\t\t} else {\n\t\t\t\t\t$(markup).insertAfter(this.$slides.eq(index));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (addBefore === true) {\n\t\t\t\t\t$(markup).prependTo(this.$slideTrack);\n\t\t\t\t} else {\n\t\t\t\t\t$(markup).appendTo(this.$slideTrack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.$slides = this.$slideTrack.children(this.options.slide);\n\n\t\t\tthis.$slideTrack.children(this.options.slide).detach();\n\n\t\t\tthis.$slideTrack.append(this.$slides);\n\n\t\t\tthis.$slides.each(function (index, element) {\n\t\t\t\t$(element).attr('data-slick-index', index);\n\t\t\t});\n\n\t\t\tthis.$slidesCache = this.$slides;\n\n\t\t\tthis.reinit();\n\t\t},\n\n\t\tremoveSlide: function removeSlide(index, removeBefore, removeAll) {\n\t\t\tif (typeof index === 'boolean') {\n\t\t\t\tremoveBefore = index;\n\t\t\t\tindex = removeBefore === true ? 0 : this.slideCount - 1;\n\t\t\t} else {\n\t\t\t\tindex = removeBefore === true ? --index : index;\n\t\t\t}\n\n\t\t\tif (this.slideCount < 1 || index < 0 || index > this.slideCount - 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.unload();\n\n\t\t\tif (removeAll === true) {\n\t\t\t\tthis.$slideTrack.children().remove();\n\t\t\t} else {\n\t\t\t\tthis.$slideTrack.children(this.options.slide).eq(index).remove();\n\t\t\t}\n\n\t\t\tthis.$slides = this.$slideTrack.children(this.options.slide);\n\n\t\t\tthis.$slideTrack.children(this.options.slide).detach();\n\n\t\t\tthis.$slideTrack.append(this.$slides);\n\n\t\t\tthis.$slidesCache = this.$slides;\n\n\t\t\tthis.reinit();\n\t\t},\n\n\t\tgetCurrent: function getCurrent() {\n\t\t\treturn this.currentSlide;\n\t\t},\n\n\t\tgetOption: function getOption(option) {\n\t\t\treturn this.options[option];\n\t\t},\n\n\t\tsetOption: function setOption(option, value, refresh) {\n\t\t\tvar length, item;\n\n\t\t\tif (option === \"responsive\" && $.type(value) === \"array\") {\n\t\t\t\tfor (item in value) {\n\t\t\t\t\tif ($.type(this.options.responsive) !== \"array\") {\n\t\t\t\t\t\tthis.options.responsive = [value[item]];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlength = this.options.responsive.length - 1;\n\t\t\t\t\t\t// loop through the responsive object and splice out duplicates.\n\t\t\t\t\t\twhile (length >= 0) {\n\t\t\t\t\t\t\tif (this.options.responsive[length].breakpoint === value[item].breakpoint) {\n\t\t\t\t\t\t\t\tthis.options.responsive.splice(length, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlength--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.options.responsive.push(value[item]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.options[option] = value;\n\t\t\t}\n\n\t\t\tif (refresh === true) {\n\t\t\t\tthis.unload();\n\t\t\t\tthis.reinit();\n\t\t\t}\n\t\t},\n\n\t\tgoTo: function goTo(slide, dontAnimate) {\n\t\t\tthis.changeSlide({\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'index',\n\t\t\t\t\tindex: parseInt(slide)\n\t\t\t\t}\n\t\t\t}, dontAnimate);\n\t\t},\n\n\t\tgoToID: function goToID(slideID, dontAnimate) {\n\t\t\tthis.changeSlide({\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'indexID',\n\t\t\t\t\tindexID: slideID\n\t\t\t\t}\n\t\t\t}, dontAnimate);\n\t\t},\n\n\t\tpause: function pause() {\n\t\t\tthis.autoPlayClear();\n\t\t\tthis.paused = true;\n\t\t},\n\n\t\tplay: function play() {\n\t\t\tthis.paused = false;\n\t\t\tthis.autoPlay();\n\t\t},\n\n\t\tprev: function prev() {\n\t\t\tthis.changeSlide({\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'previous'\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tnext: function next() {\n\t\t\tthis.changeSlide({\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'next'\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tgetSlick: function getSlick() {\n\t\t\treturn this;\n\t\t}\n\t};\n\n\tvar lazyLoad = {\n\t\tlazyLoad: function lazyLoad() {\n\t\t\tvar loadRange, cloneRange, rangeStart, rangeEnd;\n\n\t\t\tvar loadSlides = function loadSlides(slides) {\n\t\t\t\tslides.each(function (index, element) {\n\t\t\t\t\tvar url = $(element).data(this.options.lazyLoadData);\n\t\t\t\t\tvar lazyCB = this.options.lazyLoadCB;\n\t\t\t\t\tvar resetSlide = this.animateHeight.bind(this);\n\t\t\t\t\tif (!url) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t$(element).addClass('slick-slide-lazy-loading');\n\t\t\t\t\t$.ajax(url).done(function (data) {\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t$(element).html(data);\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tif (lazyCB) {\n\t\t\t\t\t\t\t\t\tlazyCB(element);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresetSlide();\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t}).always(function () {\n\t\t\t\t\t\t$(element).removeClass('slick-slide-lazy-loading slick-slide-lazy');\n\t\t\t\t\t});\n\t\t\t\t}.bind(this));\n\t\t\t};\n\n\t\t\tloadSlides = loadSlides.bind(this);\n\n\t\t\trangeStart = this.options.infinite ? this.options.slidesToShow + this.currentSlide : this.currentSlide;\n\t\t\trangeEnd = rangeStart + this.options.slidesToShow;\n\t\t\tif (this.options.fade === true) {\n\t\t\t\tif (rangeStart > 0) {\n\t\t\t\t\trangeStart--;\n\t\t\t\t}\n\t\t\t\tif (rangeEnd <= this.slideCount) {\n\t\t\t\t\trangeEnd++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tloadRange = this.$slides.slice(rangeStart, rangeEnd);\n\t\t\tloadSlides(loadRange);\n\n\t\t\tif (this.slideCount <= this.options.slidesToShow) {\n\t\t\t\tcloneRange = this.$slider.find('.slick-slide');\n\t\t\t\tloadSlides(cloneRange);\n\t\t\t} else if (this.currentSlide >= this.slideCount - this.options.slidesToShow) {\n\t\t\t\tcloneRange = this.$slider.find('.slick-cloned').slice(0, this.options.slidesToShow);\n\t\t\t\tloadSlides(cloneRange);\n\t\t\t} else if (this.currentSlide === 0) {\n\t\t\t\tcloneRange = this.$slider.find('.slick-cloned').slice(this.options.slidesToShow * -1);\n\t\t\t\tloadSlides(cloneRange);\n\t\t\t}\n\t\t},\n\n\t\tprogressiveLazyLoad: function progressiveLazyLoad() {\n\t\t\tthis.$list.find('[data-' + this.options.lazyLoadData + ']').each(function (index, element) {\n\t\t\t\tvar url = $(element).data(this.options.lazyLoadData);\n\t\t\t\tif (!url) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$(element).addClass('slick-slide-lazy-loading');\n\t\t\t\t$.ajax(url).done(function (data) {\n\t\t\t\t\t$(element).html(data);\n\t\t\t\t}).always(function () {\n\t\t\t\t\t$(element).removeClass('slick-slide-lazy-loading slick-slide-lazy');\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t}\n\t};\n\n\tvar Slick = {\n\t\tsetup: setup,\n\t\tinit: init,\n\n\t\t//build actions\n\t\tbuildRows: buildActions.buildRows,\n\t\tbuildOut: buildActions.buildOut,\n\t\tsetupInfinite: buildActions.setupInfinite,\n\t\tbuildArrows: buildActions.buildArrows,\n\t\tbuildDots: buildActions.buildDots,\n\t\tbuildPagination: buildActions.buildPagination,\n\t\tsetProps: buildActions.setProps,\n\t\tstartLoad: buildActions.startLoad,\n\t\tloadSlider: buildActions.loadSlider,\n\t\tinitUI: buildActions.initUI,\n\n\t\t//update actions\n\t\tupdateArrows: updates.updateArrows,\n\t\tupdateDots: updates.updateDots,\n\t\tupdatePagination: updates.updatePagination,\n\t\tsetSlideClasses: updates.setSlideClasses,\n\t\tsetPosition: updates.setPosition,\n\t\tsetDimensions: updates.setDimensions,\n\t\tsetHeight: updates.setHeight,\n\t\tsetCSS: updates.setCSS,\n\t\tsetFade: updates.setFade,\n\n\t\t//responsive\n\t\tregisterBreakpoints: responsive.registerBreakpoints,\n\t\tcheckResponsive: responsive.checkResponsive,\n\n\t\t//util\n\t\tgetLeft: util.getLeft,\n\t\tcheckNavigable: util.checkNavigable,\n\t\tgetNavigableIndexes: util.getNavigableIndexes,\n\t\tgetSlideCount: util.getSlideCount,\n\t\tgetDotCount: util.getDotCount,\n\t\tasNavFor: util.asNavFor,\n\t\tswipeDirection: util.swipeDirection,\n\t\tvisibility: util.visibility,\n\t\tdestroy: util.destroy,\n\t\tunslick: util.unslick,\n\t\trefresh: util.refresh,\n\t\tcleanUpRows: util.cleanUpRows,\n\t\tunload: util.unload,\n\t\treinit: util.reinit,\n\t\tgetIndexFromID: util.getIndexFromID,\n\n\t\t//events\n\t\tinitializeEvents: events.initializeEvents,\n\t\tcleanUpEvents: events.cleanUpEvents,\n\t\tinitArrowEvents: events.initArrowEvents,\n\t\tinitDotEvents: events.initDotEvents,\n\t\tinitPaginationEvents: events.initPaginationEvents,\n\t\tswipeHandler: events.swipeHandler,\n\t\tswipeStart: events.swipeStart,\n\t\tswipeMove: events.swipeMove,\n\t\tswipeEnd: events.swipeEnd,\n\t\tslideHandler: events.slideHandler,\n\t\tclickHandler: events.clickHandler,\n\t\tkeyHandler: events.keyHandler,\n\t\tselectHandler: events.selectHandler,\n\t\torientationChange: events.orientationChange,\n\t\tresize: events.resize,\n\t\tfocusHandler: events.focusHandler,\n\t\thashHandle: events.hashHandle,\n\n\t\t//slide controllers\n\t\tautoPlay: slideControllers.autoPlay,\n\t\tautoPlayClear: slideControllers.autoPlayClear,\n\t\tautoPlayIterator: slideControllers.autoPlayIterator,\n\t\tchangeSlide: slideControllers.changeSlide,\n\t\tsetPaused: slideControllers.setPaused,\n\t\tanimateSlide: slideControllers.animateSlide,\n\t\tapplyTransition: slideControllers.applyTransition,\n\t\tdisableTransition: slideControllers.disableTransition,\n\t\tpostSlide: slideControllers.postSlide,\n\t\tfadeSlideOut: slideControllers.fadeSlideOut,\n\t\tfadeSlide: slideControllers.fadeSlide,\n\t\tanimateHeight: slideControllers.animateHeight,\n\n\t\t//lazyLoad\n\t\tlazyLoad: lazyLoad.lazyLoad,\n\t\tprogressiveLazyLoad: lazyLoad.progressiveLazyLoad,\n\n\t\t//slick methods\n\t\taddSlide: slickMethods.addSlide,\n\t\tremoveSlide: slickMethods.removeSlide,\n\t\tgetCurrent: slickMethods.getCurrent,\n\t\tgetOption: slickMethods.getOption,\n\t\tsetOption: slickMethods.setOption,\n\t\tgoTo: slickMethods.goTo,\n\t\tpause: slickMethods.pause,\n\t\tplay: slickMethods.play,\n\t\tprev: slickMethods.prev,\n\t\tnext: slickMethods.next,\n\t\tgoToID: slickMethods.goToID,\n\t\tgetSlick: slickMethods.getSlick,\n\n\t\tslickAdd: slickMethods.addSlide,\n\t\tslickRemove: slickMethods.removeSlide,\n\t\tslickCurrentSlide: slickMethods.getCurrent,\n\t\tslickGetOption: slickMethods.getOption,\n\t\tslickSetOption: slickMethods.setOption,\n\t\tslickGoTo: slickMethods.goTo,\n\t\tslickPause: slickMethods.pause,\n\t\tslickPlay: slickMethods.play,\n\t\tslickPrev: slickMethods.prev,\n\t\tslickNext: slickMethods.next,\n\t\tslickGoToID: slickMethods.goToID\n\t};\n\n\tfunction setup(element, settings) {\n\t\tthis.defaults = {\n\t\t\tadaptiveHeight: false,\n\t\t\tappendArrows: $(element),\n\t\t\tappendDots: $(element),\n\t\t\tarrows: true,\n\t\t\tasNavFor: null,\n\t\t\tprevArrow: '<button class=\"slick-prev\">Previous</button>',\n\t\t\tnextArrow: '<button class=\"slick-next\">Next</button>',\n\t\t\tautoplay: false,\n\t\t\tautoplaySpeed: 3000,\n\t\t\tcssEase: 'ease',\n\t\t\tcustomPaging: function customPaging(slider, i) {\n\t\t\t\treturn '<button class=\"slick-number\">' + (i + 1) + '</button>';\n\t\t\t},\n\t\t\tdots: false,\n\t\t\tdotsClass: 'slick-dots',\n\t\t\thashLink: false,\n\t\t\tsliderIDData: 'slick-id',\n\t\t\tdraggable: true,\n\t\t\tedgeFriction: 0.35,\n\t\t\tfade: false,\n\t\t\tfocusOnSelect: false,\n\t\t\tinfinite: false,\n\t\t\tinitialSlide: 0,\n\t\t\tlazyLoad: 'ondemand',\n\t\t\tlazyLoadData: 'slick-slide-lazyload',\n\t\t\tlazyLoadCB: null,\n\t\t\tmobileFirst: false,\n\t\t\tpauseOnHover: true,\n\t\t\tpauseOnDotsHover: false,\n\t\t\trespondTo: 'window',\n\t\t\tresponsive: null,\n\t\t\trows: 1,\n\t\t\tslide: '',\n\t\t\tslidesPerRow: 1,\n\t\t\tslidesToShow: 1,\n\t\t\tslidesToScroll: 1,\n\t\t\tspeed: 500,\n\t\t\tswipe: true,\n\t\t\tswipeToSlide: false,\n\t\t\ttouchMove: true,\n\t\t\ttouchThreshold: 5,\n\t\t\tuseCSS: true,\n\t\t\tuseTransform: true,\n\t\t\tvariableWidth: false,\n\t\t\tvertical: false,\n\t\t\tverticalSwiping: false,\n\t\t\twaitForAnimate: true,\n\t\t\tzIndex: 1000,\n\t\t\tpagination: false,\n\t\t\tpaginationClass: 'slick-pagination',\n\t\t\tappendPagination: $(element)\n\t\t};\n\n\t\tthis.initials = {\n\t\t\tanimating: false,\n\t\t\tdragging: false,\n\t\t\tautoPlayTimer: null,\n\t\t\tcurrentDirection: 0,\n\t\t\tcurrentLeft: null,\n\t\t\tcurrentSlide: 0,\n\t\t\tdirection: 1,\n\t\t\t$dots: null,\n\t\t\t$pagination: null,\n\t\t\tlistWidth: null,\n\t\t\tlistHeight: null,\n\t\t\tloadIndex: 0,\n\t\t\t$nextArrow: null,\n\t\t\t$prevArrow: null,\n\t\t\tslideCount: null,\n\t\t\tslideWidth: null,\n\t\t\t$slideTrack: null,\n\t\t\t$slides: null,\n\t\t\tsliding: false,\n\t\t\tslideOffset: 0,\n\t\t\tswipeLeft: null,\n\t\t\t$list: null,\n\t\t\ttouchObject: {},\n\t\t\ttransformsEnabled: false,\n\t\t\tunslicked: false\n\t\t};\n\n\t\t$.extend(this, this.initials);\n\n\t\tthis.activeBreakpoint = null;\n\t\tthis.animType = null;\n\t\tthis.animProp = null;\n\t\tthis.breakpoints = [];\n\t\tthis.breakpointSettings = [];\n\t\tthis.breakpointCallbacks = [];\n\t\tthis.cssTransitions = false;\n\t\tthis.hidden = 'hidden';\n\t\tthis.paused = false;\n\t\tthis.positionProp = null;\n\t\tthis.respondTo = null;\n\t\tthis.rowCount = 1;\n\t\tthis.shouldClick = true;\n\t\tthis.$slider = $(element);\n\t\tthis.$slidesCache = null;\n\t\tthis.transformType = null;\n\t\tthis.transitionType = null;\n\t\tthis.visibilityChange = 'visibilitychange';\n\t\tthis.windowWidth = 0;\n\t\tthis.windowTimer = null;\n\n\t\tvar dataSettings = $(element).data('slick') || {};\n\n\t\tthis.options = $.extend({}, this.defaults, dataSettings, settings);\n\n\t\tthis.currentSlide = this.options.initialSlide;\n\n\t\tthis.originalSettings = this.options;\n\n\t\tif (typeof document.mozHidden !== 'undefined') {\n\t\t\tthis.hidden = 'mozHidden';\n\t\t\tthis.visibilityChange = 'mozvisibilitychange';\n\t\t} else if (typeof document.webkitHidden !== 'undefined') {\n\t\t\tthis.hidden = 'webkitHidden';\n\t\t\tthis.visibilityChange = 'webkitvisibilitychange';\n\t\t}\n\n\t\tthis.autoPlay = this.autoPlay.bind(this);\n\t\tthis.autoPlayClear = this.autoPlayClear.bind(this);\n\t\tthis.autoPlayIterator = this.autoPlayIterator.bind(this);\n\t\tthis.changeSlide = this.changeSlide.bind(this);\n\t\tthis.clickHandler = this.clickHandler.bind(this);\n\t\tthis.selectHandler = this.selectHandler.bind(this);\n\t\tthis.setPosition = this.setPosition.bind(this);\n\t\tthis.swipeHandler = this.swipeHandler.bind(this);\n\t\tthis.disableTransition = this.disableTransition.bind(this);\n\t\tthis.focusHandler = this.focusHandler.bind(this);\n\t\tthis.hashHandle = this.hashHandle.bind(this);\n\n\t\tthis.instanceUid = instanceUid++;\n\n\t\t// A simple way to check for HTML strings\n\t\t// Strict HTML recognition (must start with <)\n\t\t// Extracted from jQuery v1.11 source\n\t\tthis.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\n\t\tthis.registerBreakpoints();\n\t\tthis.init(true);\n\t\tthis.checkResponsive(true);\n\n\t\treturn this;\n\t}\n\n\tfunction init(creation) {\n\t\tif (!$(this.$slider).hasClass('slick-initialized')) {\n\t\t\t$(this.$slider).addClass('slick-initialized');\n\n\t\t\tthis.buildRows();\n\t\t\tthis.buildOut();\n\t\t\tthis.setProps();\n\t\t\tthis.startLoad();\n\t\t\tthis.loadSlider();\n\t\t\tthis.initializeEvents();\n\t\t\tthis.updateArrows();\n\t\t\tthis.updateDots();\n\t\t\tthis.updatePagination();\n\n\t\t\tif (this.options.hashLink) {\n\t\t\t\tthis.hashHandle();\n\t\t\t}\n\t\t}\n\n\t\tif (creation) {\n\t\t\tthis.$slider.trigger('init', [this]);\n\t\t}\n\t}\n\n\treturn function () {\n\t\tvar opt = arguments[0],\n\t\t    args = Array.prototype.slice.call(arguments, 1),\n\t\t    length = this.length,\n\t\t    i,\n\t\t    ret,\n\t\t    _ = this;\n\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tif ((typeof opt === \"undefined\" ? \"undefined\" : _typeof(opt)) === 'object' || typeof opt === 'undefined') {\n\t\t\t\t_[i].slick = Object.create(Slick).setup(_[i], opt);\n\t\t\t} else {\n\t\t\t\tret = _[i].slick[opt].apply(_[i].slick, args);\n\t\t\t}\n\t\t\tif (typeof ret !== 'undefined') {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn _;\n\t};\n}, _jquery2.default);\n\n},{\"./../../vendor/jquery/dist/jquery\":6}]},{},[3])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"sourceRoot":"/source/"}