{"version":3,"sources":["main.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","footerLinkToggle","undefined","_jquery","_jquery2","linkToggle","footerLinks","on","toggleClass","hasClass","find","attr","./../vendor/jquery/dist/jquery","2","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","sum","b","arguments","square","variable","MyClass","credentials","this","name","enrollmentNo","3","init","fn","slick","_rdslick2","runImportedFunctions","_navigation","navigation","_slider","slider","_footer","removeClass","closest","addClass","each","prepend","_rdslick","document","ready","./../vendor/mmenu.min","./../vendor/slick/rdslick.js","./footer","./import","./navigation","./slider","4","navBtn","navBtnClose","nav","preventDefault","5","dots","infinite","speed","slidesToShow","centerMode","6","_typeof","Symbol","iterator","constructor","global","factory","w","window","noGlobal","isArrayLike","type","jQuery","isWindow","winnow","elements","qualifier","not","isFunction","grep","elem","nodeType","risSimple","test","filter","indexOf","sibling","cur","dir","createOptions","options","object","match","rnotwhite","_","flag","completed","removeEventListener","Data","expando","uid","dataAttr","data","replace","rmultiDash","toLowerCase","getAttribute","rbrace","parseJSON","dataUser","set","adjustCSS","prop","valueParts","tween","adjusted","scale","maxIterations","currentValue","css","initial","unit","cssNumber","initialInUnit","rcssNum","exec","style","start","end","getAll","context","tag","ret","getElementsByTagName","querySelectorAll","nodeName","merge","setGlobalEval","elems","refElements","dataPriv","get","buildFragment","scripts","selection","ignored","tmp","wrap","contains","j","fragment","createDocumentFragment","nodes","rhtml","appendChild","createElement","rtagName","wrapMap","_default","innerHTML","htmlPrefilter","lastChild","childNodes","firstChild","textContent","push","createTextNode","inArray","ownerDocument","rscriptType","returnTrue","returnFalse","safeActiveElement","activeElement","err","_on","types","selector","one","origFn","event","off","apply","guid","add","manipulationTarget","content","disableScript","restoreScript","rscriptTypeMasked","removeAttribute","cloneCopyEvent","src","dest","pdataOld","pdataCur","udataOld","udataCur","events","hasData","access","handle","extend","fixInput","rcheckableType","checked","defaultValue","domManip","collection","args","callback","concat","first","hasScripts","node","doc","iNoClone","support","checkClone","rchecked","index","self","eq","html","map","clone","_evalUrl","globalEval","rcleanScript","_remove","keepData","cleanData","parentNode","removeChild","actualDisplay","appendTo","body","display","detach","defaultDisplay","elemdisplay","iframe","documentElement","contentDocument","write","close","curCSS","computed","width","minWidth","maxWidth","getStyles","getPropertyValue","pixelMarginRight","rnumnonpx","rmargin","addGetHookIf","conditionFn","hookFn","vendorPropName","emptyStyle","capName","toUpperCase","slice","cssPrefixes","setPositiveNumber","subtract","matches","Math","max","augmentWidthOrHeight","extra","isBorderBox","styles","val","cssExpand","getWidthOrHeight","valueIsBorderBox","offsetWidth","offsetHeight","msFullscreenElement","top","getClientRects","round","getBoundingClientRect","boxSizingReliable","parseFloat","showHide","show","hidden","values","isHidden","Tween","easing","createFxNow","setTimeout","fxNow","now","genFx","includeWidth","which","attrs","height","opacity","createTween","animation","Animation","tweeners","defaultPrefilter","opts","toggle","hooks","oldfire","checkDisplay","anim","orig","dataShow","queue","_queueHooks","unqueued","empty","fire","always","overflow","overflowX","overflowY","rfxtypes","isEmptyObject","done","hide","remove","propFilter","specialEasing","camelCase","isArray","cssHooks","expand","properties","result","stopped","prefilters","deferred","Deferred","tick","currentTime","remaining","startTime","duration","temp","percent","tweens","run","notifyWith","resolveWith","promise","originalProperties","originalOptions","stop","gotoEnd","rejectWith","proxy","fx","timer","progress","complete","fail","getClass","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataType","dataTypes","unshift","inspectPrefiltersOrTransports","jqXHR","inspect","selected","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","deep","flatOptions","ajaxSettings","ajaxHandleResponses","responses","ct","finalDataType","firstDataType","contents","shift","mimeType","getResponseHeader","converters","ajaxConvert","response","isSuccess","conv2","current","conv","prev","responseFields","dataFilter","split","state","error","buildParams","prefix","traditional","v","rbracket","getWindow","defaultView","arr","_slice","class2type","toString","hasOwn","hasOwnProperty","version","rtrim","rmsPrefix","rdashAlpha","fcamelCase","all","letter","jquery","toArray","num","pushStack","prevObject","last","len","sort","splice","copy","copyIsArray","isPlainObject","random","isReady","msg","noop","Array","isNumeric","realStringObj","script","indirect","eval","trim","text","head","string","makeArray","results","second","invert","callbackInverse","callbackExpect","arg","Date","Sizzle","seed","m","nid","nidselect","groups","newSelector","newContext","preferredDoc","setDocument","documentIsHTML","rquickExpr","getElementById","id","getElementsByClassName","qsa","compilerCache","rbuggyQSA","rescape","setAttribute","tokenize","ridentifier","toSelector","join","rsibling","testContext","qsaError","select","createCache","cache","keys","Expr","cacheLength","markFunction","assert","div","addHandle","handler","attrHandle","siblingCheck","diff","sourceIndex","MAX_NEGATIVE","nextSibling","createInputPseudo","createButtonPseudo","createPositionalPseudo","argument","matchIndexes","setFilters","tokens","addCombinator","matcher","combinator","base","checkNonElements","doneName","xml","oldCache","uniqueCache","outerCache","newCache","dirruns","uniqueID","elementMatcher","matchers","multipleContexts","contexts","condense","unmatched","newUnmatched","mapped","setMatcher","preFilter","postFilter","postFinder","postSelector","preMap","postMap","preexisting","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","pop","uniqueSort","getText","isXML","compile","sortInput","hasDuplicate","docElem","rbuggyMatches","classCache","tokenCache","sortOrder","push_native","list","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","runescape","funescape","escaped","escapedWhitespace","high","String","fromCharCode","unloadHandler","els","hasCompare","parent","addEventListener","attachEvent","className","createComment","getById","getElementsByName","attrId","getAttributeNode","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","expr","specified","duplicates","detectDuplicates","sortStable","nodeValue","selectors","createPseudo",">"," ","+","~","excess","unquoted","nodeNameSelector","pattern","operator","check","what","simple","forward","ofType","nodeIndex","useCache","pseudo","idx","matched","has","innerText","lang","elemLang","hash","location","root","focus","hasFocus","href","tabIndex","enabled","disabled","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","filters","parseOnly","soFar","preFilters","cached","token","compiled","div1","unique","isXMLDoc","_dir","until","truncate","is","_siblings","rneedsContext","rsingleTag","rootjQuery","parseHTML","rparentsprev","guaranteedUnique","children","next","targets","pos","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","reverse","Callbacks","firing","memory","_fired","_locked","firingIndex","once","stopOnFalse","disable","lock","locked","fireWith","fired","tuples","_state","_promise","then","fns","newDefer","tuple","returned","notify","resolve","reject","pipe","stateString","when","subordinate","progressValues","progressContexts","resolveContexts","resolveValues","updateFunc","readyList","readyWait","holdReady","hold","wait","triggerHandler","readyState","doScroll","chainable","emptyGet","raw","bulk","acceptData","owner","register","stored","camel","_data","removeData","_removeData","camelKey","dequeue","startLength","setter","clearQueue","count","defer","pnum","source","el","option","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","handleObjIn","eventHandle","handleObj","special","handlers","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","fix","handlerQueue","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","stopPropagation","postDispatch","_handlers","sel","isNaN","fixHooks","keyHooks","original","charCode","keyCode","mouseHooks","eventDoc","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","originalEvent","fixHook","Event","load","noBubble","trigger","blur","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","timeStamp","stopImmediatePropagation","mouseenter","mouseleave","pointerenter","pointerleave","related","relatedTarget","rxhtmlTag","rnoInnerhtml","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","append","insertBefore","before","after","replaceWith","replaceChild","prependTo","insertAfter","replaceAll","insert","HTML","BODY","view","opener","getComputedStyle","swap","old","computeStyleTests","cssText","container","divStyle","pixelPositionVal","reliableMarginLeftVal","marginLeft","boxSizingReliableVal","marginRight","pixelMarginRightVal","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginLeft","reliableMarginRight","marginDiv","rdisplayswap","cssShow","position","visibility","cssNormalTransform","letterSpacing","fontWeight","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","cssProps","float","origName","isFinite","left","margin","padding","border","suffix","expanded","parts","propHooks","eased","step","linear","p","swing","cos","PI","timerId","rrun","*","tweener","prefilter","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","interval","setInterval","clearInterval","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","optDisabled","radioValue","boolHook","removeAttr","nType","attrHooks","propName","attrNames","propFix","getter","rfocusable","rclickable","removeProp","tabindex","parseInt","for","class","rclass","classes","curValue","clazz","finalValue","stateVal","classNames","rreturn","rspaces","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","parentWindow","simulate","isSimulated","hover","fnOver","fnOut","focusin","attaches","nonce","rquery","JSON","parse","parseXML","DOMParser","parseFromString","rhash","rts","rheaders","rlocalProtocol","rnoContent","rprotocol","allTypes","originAnchor","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","status","nativeStatusText","headers","success","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","_statusCode","fireGlobals","globalEventContext","completeDeferred","responseHeaders","urlAnchor","requestHeaders","requestHeadersNames","strAbort","getAllResponseHeaders","setRequestHeader","lname","overrideMimeType","abort","finalText","method","crossDomain","host","param","hasContent","beforeSend","send","getJSON","getScript","throws","wrapAll","firstElementChild","wrapInner","unwrap","visible","r20","rCRLF","rsubmitterTypes","rsubmittable","encodeURIComponent","serialize","serializeArray","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","_callback","errorCallback","open","username","xhrFields","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","text script","_callback2","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","keepScripts","parsed","_load","params","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","win","box","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","bind","unbind","delegate","undelegate","size","andSelf","define","amd","_jQuery","_$","$","noConflict","7","glbl","$wndw","$html","$body","mm","umm","_c","_d","_e","$menu","_api","conf","vars","cbck","___deprecated","_initMenu","_initAnchors","panelNodetype","_initAddons","___debug","addons","uniqueId","defaults","extensions","navbar","title","titleLink","onClick","setSelected","slidingSubmenus","configuration","divider","inset","panel","spacer","vertical","openingInterval","transitionDuration","nopanel","_initPanels","update","listview","openPanel","subopened","opened","highest","csstransitions","closePanel","closeAllPanels","togglePanel","getInstance","offCanvas","wrapper","menu","__findAddBack","__refactorClass","nolistview","d","__getUniqueId","sub","fullsubopen","_url","btn","hasnavbar","c","clickAnchor","h","__valueOrFn","blockUI","blocking","__api","__filterListItems","__transitionend","transitionend","webkitTransitionEnd","touch","navigator","msMaxTouchPoints","Modernizr","charAt","substr","zposition","pageSelector","pageNodetype","$allMenus","offcanvas","setPage","$page","_initBlocker","menuInjectMethod","menuWrapperSelector","modal","moveBackground","wrapPageIfNeeded","_openSetup","_openFinish","closeAllOthers","resize","background","opening","page","slideout","keydown","$blck","blocker","touchstart","touchmove","mousedown","./jquery/dist/jquery","8","noUiSlider","element","adaptiveHeight","appendArrows","appendDots","arrows","asNavFor","prevArrow","nextArrow","autoplay","autoplaySpeed","cssEase","customPaging","dotsClass","hashLink","sliderIDData","draggable","edgeFriction","fade","focusOnSelect","initialSlide","lazyLoad","lazyLoadData","lazyLoadCB","mobileFirst","pauseOnHover","pauseOnDotsHover","respondTo","responsive","rows","slide","slidesPerRow","slidesToScroll","swipe","swipeToSlide","touchMove","touchThreshold","useCSS","useTransform","variableWidth","verticalSwiping","waitForAnimate","pagination","paginationClass","appendPagination","initials","animating","dragging","autoPlayTimer","currentDirection","currentLeft","currentSlide","direction","$dots","$pagination","listWidth","listHeight","loadIndex","$nextArrow","$prevArrow","slideCount","slideWidth","$slideTrack","$slides","sliding","slideOffset","swipeLeft","$list","touchObject","transformsEnabled","unslicked","activeBreakpoint","animType","animProp","breakpoints","breakpointSettings","breakpointCallbacks","cssTransitions","paused","positionProp","rowCount","shouldClick","$slider","$slidesCache","transformType","transitionType","visibilityChange","windowWidth","windowTimer","dataSettings","mozHidden","webkitHidden","autoPlay","autoPlayClear","autoPlayIterator","changeSlide","clickHandler","selectHandler","setPosition","swipeHandler","disableTransition","focusHandler","hashHandle","instanceUid","htmlExpr","registerBreakpoints","checkResponsive","creation","buildRows","buildOut","setProps","startLoad","loadSlider","initializeEvents","updateArrows","updateDots","updatePagination","buildActions","newSlides","numOfSlides","originalSlides","slidesPerSection","ceil","aIndex","bIndex","row","cIndex","setupInfinite","buildArrows","buildDots","buildPagination","setSlideClasses","slideIndex","infiniteCount","dotString","getDotCount","pagString","paginationObject","numbers","bodyStyle","WebkitTransition","MozTransition","msTransition","OTransform","perspectiveProperty","webkitPerspective","MozTransform","MozPerspective","webkitTransform","msTransform","transform","initUI","progressiveLazyLoad","updates","floor","allSlides","indexOffset","remainder","setDimensions","setHeight","setCSS","getLeft","setFade","outerHeight","outerWidth","targetHeight","positionProps","x","y","targetLeft","breakpoint","currentBreakpoint","responsiveSettings","forceUpdate","targetBreakpoint","respondToWidth","triggerBreakpoint","sliderWidth","innerWidth","min","unslick","refresh","util","verticalHeight","targetSlide","verticalOffset","offsetLeft","checkNavigable","navigables","prevNavigable","getNavigableIndexes","breakPoint","counter","indexes","getSlideCount","slidesTraversed","swipedSlide","abs","pagerQty","rdslick","slideHandler","swipeDirection","xDist","yDist","swipeAngle","startX","curX","startY","curY","atan2","destroy","cleanUpEvents","cleanUpRows","fromBreakpoint","initializing","firstVisible","message","unload","reinit","initArrowEvents","initDotEvents","initPaginationEvents","getIndexFromID","slickID","action","setPaused","orientationChange","pangnation","$pangnation","fingerCount","touches","minSwipe","swipeStart","swipeMove","swipeEnd","swipeLength","positionOffset","sqrt","pow","edgeHit","sync","dontAnimate","animSlide","oldSlide","slideLeft","animateSlide","postSlide","fadeSlideOut","fadeSlide","animateHeight","targetElement","windowDelay","sf","isPlay","indexID","slideControllers","unevenOffset","$target","animProps","applyTransition","transition","slickMethods","addSlide","markup","addBefore","removeSlide","removeBefore","removeAll","getCurrent","getOption","setOption","item","goTo","goToID","slideID","pause","play","getSlick","loadRange","cloneRange","rangeStart","rangeEnd","loadSlides","slides","lazyCB","resetSlide","Slick","keyHandler","slickAdd","slickRemove","slickCurrentSlide","slickGetOption","slickSetOption","slickGoTo","slickPause","slickPlay","slickPrev","slickNext","slickGoToID","create","./../../vendor/jquery/dist/jquery"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.footerLinkToggle = undefined;\n\nvar _jquery = require(\"./../vendor/jquery/dist/jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar footerLinkToggle = function footerLinkToggle() {\n\n\tvar linkToggle = (0, _jquery2.default)(\".links-toggle\"),\n\t    footerLinks = (0, _jquery2.default)(\".footer__links\");\n\n\tlinkToggle.on(\"click\", function () {\n\n\t\tfooterLinks.toggleClass(\"isHidden\");\n\n\t\tif (footerLinks.hasClass(\"isHidden\")) {\n\t\t\tlinkToggle.find('use').attr('xlink:href', '#arrows-bold-right');\n\t\t} else {\n\t\t\tlinkToggle.find('use').attr('xlink:href', '#arrows-bold-down');\n\t\t}\n\t});\n};\n\nexports.footerLinkToggle = footerLinkToggle;\n\n},{\"./../vendor/jquery/dist/jquery\":6}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar sum = function sum(a) {\n    var b = arguments.length <= 1 || arguments[1] === undefined ? 6 : arguments[1];\n    return a + b;\n};\n\nvar square = function square(b) {\n    return b * b;\n};\n\nvar variable = 8;\n\nvar MyClass = function () {\n    function MyClass(credentials) {\n        _classCallCheck(this, MyClass);\n\n        this.name = credentials.name;\n        this.enrollmentNo = credentials.enrollmentNo;\n    }\n\n    _createClass(MyClass, [{\n        key: \"getName\",\n        value: function getName() {\n            return this.name;\n        }\n    }]);\n\n    return MyClass;\n}();\n\nexports.sum = sum;\nexports.square = square;\nexports.variable = variable;\nexports.MyClass = MyClass;\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nvar _jquery = require(\"./../vendor/jquery/dist/jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _import = require(\"./import\");\n\nrequire(\"./../vendor/mmenu.min\");\n\nvar _rdslick = require(\"./../vendor/slick/rdslick.js\");\n\nvar _rdslick2 = _interopRequireDefault(_rdslick);\n\nvar _navigation = require(\"./navigation\");\n\nvar _slider = require(\"./slider\");\n\nvar _footer = require(\"./footer\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _jquery2.default)(document).ready(init);\n\nfunction init() {\n\t_jquery2.default.fn.slick = _rdslick2.default;\n\trunImportedFunctions();\n}\n\nfunction runImportedFunctions() {\n\n\t(0, _navigation.navigation)();\n\t(0, _slider.slider)();\n\t(0, _footer.footerLinkToggle)();\n\n\t(0, _jquery2.default)(\".portlet-faq\").on(\"click\", function (e) {\n\t\t(0, _jquery2.default)(\".portlet-faq\").removeClass(\"isActive\");\n\t\t(0, _jquery2.default)(e.target).closest(\".portlet-faq\").addClass(\"isActive\");\n\t});\n\n\t(0, _jquery2.default)(\".about-us, .bill, .account\").find('.page-sidebar ul li').each(function () {\n\t\t(0, _jquery2.default)(this).addClass('about-us-portlet');\n\t});\n\n\t// $(\".bill\").find('.page-sidebar ul li').each(function() {\n\t// \t$(this).addClass('about-us-portlet');\n\t// });\n\n\t// $(\".account\").find('.page-sidebar ul li').each(function() {\n\t// \t$(this).addClass('about-us-portlet');\n\t// });\n\n\t(0, _jquery2.default)(\".about-us-portlet\").prepend('<svg><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#arrows-bold-right\"></use></svg>');\n}\n\n},{\"./../vendor/jquery/dist/jquery\":6,\"./../vendor/mmenu.min\":7,\"./../vendor/slick/rdslick.js\":8,\"./footer\":1,\"./import\":2,\"./navigation\":4,\"./slider\":5}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.navigation = undefined;\n\nvar _jquery = require(\"./../vendor/jquery/dist/jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar navigation = function navigation() {\n\n\tvar navBtn = (0, _jquery2.default)(\".header__nav--menu\"),\n\t    navBtnClose = (0, _jquery2.default)(\".close-nav\"),\n\t    nav = (0, _jquery2.default)(\".main__nav\");\n\n\tnavBtn.on(\"click\", function (e) {\n\t\te.preventDefault();\n\t\tnav.toggleClass(\"active\");\n\t});\n\n\tnavBtnClose.on(\"click\", function (e) {\n\t\te.preventDefault();\n\t\tnav.removeClass(\"active\");\n\t});\n};\n\nexports.navigation = navigation;\n\n},{\"./../vendor/jquery/dist/jquery\":6}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.slider = undefined;\n\nvar _jquery = require(\"./../vendor/jquery/dist/jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _rdslick = require(\"./../vendor/slick/rdslick.js\");\n\nvar _rdslick2 = _interopRequireDefault(_rdslick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar slider = function slider() {\n\n\t(0, _jquery2.default)(\".hero-slider\").slick({\n\t\tdots: true, infinite: true, speed: 300, slidesToShow: 1, centerMode: false\n\t});\n};\n\nexports.slider = slider;\n\n},{\"./../vendor/jquery/dist/jquery\":6,\"./../vendor/slick/rdslick.js\":8}],6:[function(require,module,exports){\n\"use strict\";var _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol?\"symbol\":typeof obj;};/*!\n * jQuery JavaScript Library v2.2.3\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-04-05T19:26Z\n */(function(global,factory){if((typeof module===\"undefined\"?\"undefined\":_typeof(module))===\"object\"&&_typeof(module.exports)===\"object\"){// For CommonJS and CommonJS-like environments where a proper `window`\n// is present, execute the factory and get jQuery.\n// For environments that do not have a `window` with a `document`\n// (such as Node.js), expose a factory as module.exports.\n// This accentuates the need for the creation of a real `window`.\n// e.g. var jQuery = require(\"jquery\")(window);\n// See ticket #14549 for more info.\nmodule.exports=global.document?factory(global,true):function(w){if(!w.document){throw new Error(\"jQuery requires a window with a document\");}return factory(w);};}else{factory(global);}// Pass this if window is not defined yet\n})(typeof window!==\"undefined\"?window:undefined,function(window,noGlobal){// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\"use strict\";\nvar arr=[];var document=window.document;var _slice=arr.slice;var concat=arr.concat;var push=arr.push;var indexOf=arr.indexOf;var class2type={};var toString=class2type.toString;var hasOwn=class2type.hasOwnProperty;var support={};var version=\"2.2.3\",// Define a local copy of jQuery\njQuery=function jQuery(selector,context){// The jQuery object is actually just the init constructor 'enhanced'\n// Need init if jQuery is called (just allow error to be thrown if not included)\nreturn new jQuery.fn.init(selector,context);},// Support: Android<4.1\n// Make sure we trim BOM and NBSP\nrtrim=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,// Matches dashed string for camelizing\nrmsPrefix=/^-ms-/,rdashAlpha=/-([\\da-z])/gi,// Used by jQuery.camelCase as callback to replace()\nfcamelCase=function fcamelCase(all,letter){return letter.toUpperCase();};jQuery.fn=jQuery.prototype={// The current version of jQuery being used\njquery:version,constructor:jQuery,// Start with an empty selector\nselector:\"\",// The default length of a jQuery object is 0\nlength:0,toArray:function toArray(){return _slice.call(this);},// Get the Nth element in the matched element set OR\n// Get the whole matched element set as a clean array\nget:function get(num){return num!=null?// Return just the one element from the set\nnum<0?this[num+this.length]:this[num]:// Return all the elements in a clean array\n_slice.call(this);},// Take an array of elements and push it onto the stack\n// (returning the new matched element set)\npushStack:function pushStack(elems){// Build a new jQuery matched element set\nvar ret=jQuery.merge(this.constructor(),elems);// Add the old object onto the stack (as a reference)\nret.prevObject=this;ret.context=this.context;// Return the newly-formed element set\nreturn ret;},// Execute a callback for every element in the matched set.\neach:function each(callback){return jQuery.each(this,callback);},map:function map(callback){return this.pushStack(jQuery.map(this,function(elem,i){return callback.call(elem,i,elem);}));},slice:function slice(){return this.pushStack(_slice.apply(this,arguments));},first:function first(){return this.eq(0);},last:function last(){return this.eq(-1);},eq:function eq(i){var len=this.length,j=+i+(i<0?len:0);return this.pushStack(j>=0&&j<len?[this[j]]:[]);},end:function end(){return this.prevObject||this.constructor();},// For internal use only.\n// Behaves like an Array's method, not like a jQuery method.\npush:push,sort:arr.sort,splice:arr.splice};jQuery.extend=jQuery.fn.extend=function(){var options,name,src,copy,copyIsArray,clone,target=arguments[0]||{},i=1,length=arguments.length,deep=false;// Handle a deep copy situation\nif(typeof target===\"boolean\"){deep=target;// Skip the boolean and the target\ntarget=arguments[i]||{};i++;}// Handle case when target is a string or something (possible in deep copy)\nif((typeof target===\"undefined\"?\"undefined\":_typeof(target))!==\"object\"&&!jQuery.isFunction(target)){target={};}// Extend jQuery itself if only one argument is passed\nif(i===length){target=this;i--;}for(;i<length;i++){// Only deal with non-null/undefined values\nif((options=arguments[i])!=null){// Extend the base object\nfor(name in options){src=target[name];copy=options[name];// Prevent never-ending loop\nif(target===copy){continue;}// Recurse if we're merging plain objects or arrays\nif(deep&&copy&&(jQuery.isPlainObject(copy)||(copyIsArray=jQuery.isArray(copy)))){if(copyIsArray){copyIsArray=false;clone=src&&jQuery.isArray(src)?src:[];}else{clone=src&&jQuery.isPlainObject(src)?src:{};}// Never move original objects, clone them\ntarget[name]=jQuery.extend(deep,clone,copy);// Don't bring in undefined values\n}else if(copy!==undefined){target[name]=copy;}}}}// Return the modified object\nreturn target;};jQuery.extend({// Unique for each copy of jQuery on the page\nexpando:\"jQuery\"+(version+Math.random()).replace(/\\D/g,\"\"),// Assume jQuery is ready without the ready module\nisReady:true,error:function error(msg){throw new Error(msg);},noop:function noop(){},isFunction:function isFunction(obj){return jQuery.type(obj)===\"function\";},isArray:Array.isArray,isWindow:function isWindow(obj){return obj!=null&&obj===obj.window;},isNumeric:function isNumeric(obj){// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n// subtraction forces infinities to NaN\n// adding 1 corrects loss of precision from parseFloat (#15100)\nvar realStringObj=obj&&obj.toString();return!jQuery.isArray(obj)&&realStringObj-parseFloat(realStringObj)+1>=0;},isPlainObject:function isPlainObject(obj){var key;// Not plain objects:\n// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n// - DOM nodes\n// - window\nif(jQuery.type(obj)!==\"object\"||obj.nodeType||jQuery.isWindow(obj)){return false;}// Not own constructor property must be Object\nif(obj.constructor&&!hasOwn.call(obj,\"constructor\")&&!hasOwn.call(obj.constructor.prototype||{},\"isPrototypeOf\")){return false;}// Own properties are enumerated firstly, so to speed up,\n// if last one is own, then all properties are own\nfor(key in obj){}return key===undefined||hasOwn.call(obj,key);},isEmptyObject:function isEmptyObject(obj){var name;for(name in obj){return false;}return true;},type:function type(obj){if(obj==null){return obj+\"\";}// Support: Android<4.0, iOS<6 (functionish RegExp)\nreturn(typeof obj===\"undefined\"?\"undefined\":_typeof(obj))===\"object\"||typeof obj===\"function\"?class2type[toString.call(obj)]||\"object\":typeof obj===\"undefined\"?\"undefined\":_typeof(obj);},// Evaluates a script in a global context\nglobalEval:function globalEval(code){var script,indirect=eval;code=jQuery.trim(code);if(code){// If the code includes a valid, prologue position\n// strict mode pragma, execute code by injecting a\n// script tag into the document.\nif(code.indexOf(\"use strict\")===1){script=document.createElement(\"script\");script.text=code;document.head.appendChild(script).parentNode.removeChild(script);}else{// Otherwise, avoid the DOM node creation, insertion\n// and removal by using an indirect global eval\nindirect(code);}}},// Convert dashed to camelCase; used by the css and data modules\n// Support: IE9-11+\n// Microsoft forgot to hump their vendor prefix (#9572)\ncamelCase:function camelCase(string){return string.replace(rmsPrefix,\"ms-\").replace(rdashAlpha,fcamelCase);},nodeName:function nodeName(elem,name){return elem.nodeName&&elem.nodeName.toLowerCase()===name.toLowerCase();},each:function each(obj,callback){var length,i=0;if(isArrayLike(obj)){length=obj.length;for(;i<length;i++){if(callback.call(obj[i],i,obj[i])===false){break;}}}else{for(i in obj){if(callback.call(obj[i],i,obj[i])===false){break;}}}return obj;},// Support: Android<4.1\ntrim:function trim(text){return text==null?\"\":(text+\"\").replace(rtrim,\"\");},// results is for internal usage only\nmakeArray:function makeArray(arr,results){var ret=results||[];if(arr!=null){if(isArrayLike(Object(arr))){jQuery.merge(ret,typeof arr===\"string\"?[arr]:arr);}else{push.call(ret,arr);}}return ret;},inArray:function inArray(elem,arr,i){return arr==null?-1:indexOf.call(arr,elem,i);},merge:function merge(first,second){var len=+second.length,j=0,i=first.length;for(;j<len;j++){first[i++]=second[j];}first.length=i;return first;},grep:function grep(elems,callback,invert){var callbackInverse,matches=[],i=0,length=elems.length,callbackExpect=!invert;// Go through the array, only saving the items\n// that pass the validator function\nfor(;i<length;i++){callbackInverse=!callback(elems[i],i);if(callbackInverse!==callbackExpect){matches.push(elems[i]);}}return matches;},// arg is for internal usage only\nmap:function map(elems,callback,arg){var length,value,i=0,ret=[];// Go through the array, translating each of the items to their new values\nif(isArrayLike(elems)){length=elems.length;for(;i<length;i++){value=callback(elems[i],i,arg);if(value!=null){ret.push(value);}}// Go through every key on the object,\n}else{for(i in elems){value=callback(elems[i],i,arg);if(value!=null){ret.push(value);}}}// Flatten any nested arrays\nreturn concat.apply([],ret);},// A global GUID counter for objects\nguid:1,// Bind a function to a context, optionally partially applying any\n// arguments.\nproxy:function proxy(fn,context){var tmp,args,proxy;if(typeof context===\"string\"){tmp=fn[context];context=fn;fn=tmp;}// Quick check to determine if target is callable, in the spec\n// this throws a TypeError, but we will just return undefined.\nif(!jQuery.isFunction(fn)){return undefined;}// Simulated bind\nargs=_slice.call(arguments,2);proxy=function proxy(){return fn.apply(context||this,args.concat(_slice.call(arguments)));};// Set the guid of unique handler to the same of original handler, so it can be removed\nproxy.guid=fn.guid=fn.guid||jQuery.guid++;return proxy;},now:Date.now,// jQuery.support is not used in Core but other projects attach their\n// properties to it so it needs to exist.\nsupport:support});// JSHint would error on this code due to the Symbol not being defined in ES5.\n// Defining this global in .jshintrc would create a danger of using the global\n// unguarded in another place, it seems safer to just disable JSHint for these\n// three lines.\n/* jshint ignore: start */if(typeof Symbol===\"function\"){jQuery.fn[Symbol.iterator]=arr[Symbol.iterator];}/* jshint ignore: end */// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(i,name){class2type[\"[object \"+name+\"]\"]=name.toLowerCase();});function isArrayLike(obj){// Support: iOS 8.2 (not reproducible in simulator)\n// `in` check used to prevent JIT error (gh-2145)\n// hasOwn isn't used here due to false negatives\n// regarding Nodelist length in IE\nvar length=!!obj&&\"length\"in obj&&obj.length,type=jQuery.type(obj);if(type===\"function\"||jQuery.isWindow(obj)){return false;}return type===\"array\"||length===0||typeof length===\"number\"&&length>0&&length-1 in obj;}var Sizzle=/*!\n * Sizzle CSS Selector Engine v2.2.1\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2015-10-17\n */function(window){var i,support,Expr,getText,isXML,tokenize,compile,select,outermostContext,sortInput,hasDuplicate,// Local document vars\nsetDocument,document,docElem,documentIsHTML,rbuggyQSA,rbuggyMatches,matches,contains,// Instance-specific data\nexpando=\"sizzle\"+1*new Date(),preferredDoc=window.document,dirruns=0,done=0,classCache=createCache(),tokenCache=createCache(),compilerCache=createCache(),sortOrder=function sortOrder(a,b){if(a===b){hasDuplicate=true;}return 0;},// General-purpose constants\nMAX_NEGATIVE=1<<31,// Instance methods\nhasOwn={}.hasOwnProperty,arr=[],pop=arr.pop,push_native=arr.push,push=arr.push,slice=arr.slice,// Use a stripped-down indexOf as it's faster than native\n// http://jsperf.com/thor-indexof-vs-for/5\nindexOf=function indexOf(list,elem){var i=0,len=list.length;for(;i<len;i++){if(list[i]===elem){return i;}}return-1;},booleans=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",// Regular expressions\n// http://www.w3.org/TR/css3-selectors/#whitespace\nwhitespace=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\nidentifier=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\nattributes=\"\\\\[\"+whitespace+\"*(\"+identifier+\")(?:\"+whitespace+// Operator (capture 2)\n\"*([*^$|!~]?=)\"+whitespace+// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+identifier+\"))|)\"+whitespace+\"*\\\\]\",pseudos=\":(\"+identifier+\")(?:\\\\((\"+// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n// 1. quoted (capture 3; capture 4 or capture 5)\n\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\"+// 2. simple (capture 6)\n\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+attributes+\")*)|\"+// 3. anything else (capture 2)\n\".*\"+\")\\\\)|)\",// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\nrwhitespace=new RegExp(whitespace+\"+\",\"g\"),rtrim=new RegExp(\"^\"+whitespace+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+whitespace+\"+$\",\"g\"),rcomma=new RegExp(\"^\"+whitespace+\"*,\"+whitespace+\"*\"),rcombinators=new RegExp(\"^\"+whitespace+\"*([>+~]|\"+whitespace+\")\"+whitespace+\"*\"),rattributeQuotes=new RegExp(\"=\"+whitespace+\"*([^\\\\]'\\\"]*?)\"+whitespace+\"*\\\\]\",\"g\"),rpseudo=new RegExp(pseudos),ridentifier=new RegExp(\"^\"+identifier+\"$\"),matchExpr={\"ID\":new RegExp(\"^#(\"+identifier+\")\"),\"CLASS\":new RegExp(\"^\\\\.(\"+identifier+\")\"),\"TAG\":new RegExp(\"^(\"+identifier+\"|[*])\"),\"ATTR\":new RegExp(\"^\"+attributes),\"PSEUDO\":new RegExp(\"^\"+pseudos),\"CHILD\":new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+whitespace+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+whitespace+\"*(?:([+-]|)\"+whitespace+\"*(\\\\d+)|))\"+whitespace+\"*\\\\)|)\",\"i\"),\"bool\":new RegExp(\"^(?:\"+booleans+\")$\",\"i\"),// For use in libraries implementing .is()\n// We use this for POS matching in `select`\n\"needsContext\":new RegExp(\"^\"+whitespace+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+whitespace+\"*((?:-\\\\d)?\\\\d*)\"+whitespace+\"*\\\\)|)(?=[^-]|$)\",\"i\")},rinputs=/^(?:input|select|textarea|button)$/i,rheader=/^h\\d$/i,rnative=/^[^{]+\\{\\s*\\[native \\w/,// Easily-parseable/retrievable ID or TAG or CLASS selectors\nrquickExpr=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,rsibling=/[+~]/,rescape=/'|\\\\/g,// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\nrunescape=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+whitespace+\"?|(\"+whitespace+\")|.)\",\"ig\"),funescape=function funescape(_,escaped,escapedWhitespace){var high=\"0x\"+escaped-0x10000;// NaN means non-codepoint\n// Support: Firefox<24\n// Workaround erroneous numeric interpretation of +\"0x\"\nreturn high!==high||escapedWhitespace?escaped:high<0?// BMP codepoint\nString.fromCharCode(high+0x10000):// Supplemental Plane codepoint (surrogate pair)\nString.fromCharCode(high>>10|0xD800,high&0x3FF|0xDC00);},// Used for iframes\n// See setDocument()\n// Removing the function wrapper causes a \"Permission Denied\"\n// error in IE\nunloadHandler=function unloadHandler(){setDocument();};// Optimize for push.apply( _, NodeList )\ntry{push.apply(arr=slice.call(preferredDoc.childNodes),preferredDoc.childNodes);// Support: Android<4.0\n// Detect silently failing push.apply\narr[preferredDoc.childNodes.length].nodeType;}catch(e){push={apply:arr.length?// Leverage slice if possible\nfunction(target,els){push_native.apply(target,slice.call(els));}:// Support: IE<9\n// Otherwise append directly\nfunction(target,els){var j=target.length,i=0;// Can't trust NodeList.length\nwhile(target[j++]=els[i++]){}target.length=j-1;}};}function Sizzle(selector,context,results,seed){var m,i,elem,nid,nidselect,match,groups,newSelector,newContext=context&&context.ownerDocument,// nodeType defaults to 9, since context defaults to document\nnodeType=context?context.nodeType:9;results=results||[];// Return early from calls with invalid selector or context\nif(typeof selector!==\"string\"||!selector||nodeType!==1&&nodeType!==9&&nodeType!==11){return results;}// Try to shortcut find operations (as opposed to filters) in HTML documents\nif(!seed){if((context?context.ownerDocument||context:preferredDoc)!==document){setDocument(context);}context=context||document;if(documentIsHTML){// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n// (excepting DocumentFragment context, where the methods don't exist)\nif(nodeType!==11&&(match=rquickExpr.exec(selector))){// ID selector\nif(m=match[1]){// Document context\nif(nodeType===9){if(elem=context.getElementById(m)){// Support: IE, Opera, Webkit\n// TODO: identify versions\n// getElementById can match elements by name instead of ID\nif(elem.id===m){results.push(elem);return results;}}else{return results;}// Element context\n}else{// Support: IE, Opera, Webkit\n// TODO: identify versions\n// getElementById can match elements by name instead of ID\nif(newContext&&(elem=newContext.getElementById(m))&&contains(context,elem)&&elem.id===m){results.push(elem);return results;}}// Type selector\n}else if(match[2]){push.apply(results,context.getElementsByTagName(selector));return results;// Class selector\n}else if((m=match[3])&&support.getElementsByClassName&&context.getElementsByClassName){push.apply(results,context.getElementsByClassName(m));return results;}}// Take advantage of querySelectorAll\nif(support.qsa&&!compilerCache[selector+\" \"]&&(!rbuggyQSA||!rbuggyQSA.test(selector))){if(nodeType!==1){newContext=context;newSelector=selector;// qSA looks outside Element context, which is not what we want\n// Thanks to Andrew Dupont for this workaround technique\n// Support: IE <=8\n// Exclude object elements\n}else if(context.nodeName.toLowerCase()!==\"object\"){// Capture the context ID, setting it first if necessary\nif(nid=context.getAttribute(\"id\")){nid=nid.replace(rescape,\"\\\\$&\");}else{context.setAttribute(\"id\",nid=expando);}// Prefix every selector in the list\ngroups=tokenize(selector);i=groups.length;nidselect=ridentifier.test(nid)?\"#\"+nid:\"[id='\"+nid+\"']\";while(i--){groups[i]=nidselect+\" \"+toSelector(groups[i]);}newSelector=groups.join(\",\");// Expand context for sibling selectors\nnewContext=rsibling.test(selector)&&testContext(context.parentNode)||context;}if(newSelector){try{push.apply(results,newContext.querySelectorAll(newSelector));return results;}catch(qsaError){}finally{if(nid===expando){context.removeAttribute(\"id\");}}}}}}// All others\nreturn select(selector.replace(rtrim,\"$1\"),context,results,seed);}/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */function createCache(){var keys=[];function cache(key,value){// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\nif(keys.push(key+\" \")>Expr.cacheLength){// Only keep the most recent entries\ndelete cache[keys.shift()];}return cache[key+\" \"]=value;}return cache;}/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */function markFunction(fn){fn[expando]=true;return fn;}/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */function assert(fn){var div=document.createElement(\"div\");try{return!!fn(div);}catch(e){return false;}finally{// Remove from its parent by default\nif(div.parentNode){div.parentNode.removeChild(div);}// release memory in IE\ndiv=null;}}/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */function addHandle(attrs,handler){var arr=attrs.split(\"|\"),i=arr.length;while(i--){Expr.attrHandle[arr[i]]=handler;}}/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */function siblingCheck(a,b){var cur=b&&a,diff=cur&&a.nodeType===1&&b.nodeType===1&&(~b.sourceIndex||MAX_NEGATIVE)-(~a.sourceIndex||MAX_NEGATIVE);// Use IE sourceIndex if available on both nodes\nif(diff){return diff;}// Check if b follows a\nif(cur){while(cur=cur.nextSibling){if(cur===b){return-1;}}}return a?1:-1;}/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */function createInputPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return name===\"input\"&&elem.type===type;};}/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */function createButtonPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return(name===\"input\"||name===\"button\")&&elem.type===type;};}/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */function createPositionalPseudo(fn){return markFunction(function(argument){argument=+argument;return markFunction(function(seed,matches){var j,matchIndexes=fn([],seed.length,argument),i=matchIndexes.length;// Match elements found at the specified indexes\nwhile(i--){if(seed[j=matchIndexes[i]]){seed[j]=!(matches[j]=seed[j]);}}});});}/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */function testContext(context){return context&&typeof context.getElementsByTagName!==\"undefined\"&&context;}// Expose support vars for convenience\nsupport=Sizzle.support={};/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */isXML=Sizzle.isXML=function(elem){// documentElement is verified for cases where it doesn't yet exist\n// (such as loading iframes in IE - #4833)\nvar documentElement=elem&&(elem.ownerDocument||elem).documentElement;return documentElement?documentElement.nodeName!==\"HTML\":false;};/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */setDocument=Sizzle.setDocument=function(node){var hasCompare,parent,doc=node?node.ownerDocument||node:preferredDoc;// Return early if doc is invalid or already selected\nif(doc===document||doc.nodeType!==9||!doc.documentElement){return document;}// Update global variables\ndocument=doc;docElem=document.documentElement;documentIsHTML=!isXML(document);// Support: IE 9-11, Edge\n// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\nif((parent=document.defaultView)&&parent.top!==parent){// Support: IE 11\nif(parent.addEventListener){parent.addEventListener(\"unload\",unloadHandler,false);// Support: IE 9 - 10 only\n}else if(parent.attachEvent){parent.attachEvent(\"onunload\",unloadHandler);}}/* Attributes\n\t---------------------------------------------------------------------- */// Support: IE<8\n// Verify that getAttribute really returns attributes and not properties\n// (excepting IE8 booleans)\nsupport.attributes=assert(function(div){div.className=\"i\";return!div.getAttribute(\"className\");});/* getElement(s)By*\n\t---------------------------------------------------------------------- */// Check if getElementsByTagName(\"*\") returns only elements\nsupport.getElementsByTagName=assert(function(div){div.appendChild(document.createComment(\"\"));return!div.getElementsByTagName(\"*\").length;});// Support: IE<9\nsupport.getElementsByClassName=rnative.test(document.getElementsByClassName);// Support: IE<10\n// Check if getElementById returns elements by name\n// The broken getElementById methods don't pick up programatically-set names,\n// so use a roundabout getElementsByName test\nsupport.getById=assert(function(div){docElem.appendChild(div).id=expando;return!document.getElementsByName||!document.getElementsByName(expando).length;});// ID find and filter\nif(support.getById){Expr.find[\"ID\"]=function(id,context){if(typeof context.getElementById!==\"undefined\"&&documentIsHTML){var m=context.getElementById(id);return m?[m]:[];}};Expr.filter[\"ID\"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){return elem.getAttribute(\"id\")===attrId;};};}else{// Support: IE6/7\n// getElementById is not reliable as a find shortcut\ndelete Expr.find[\"ID\"];Expr.filter[\"ID\"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){var node=typeof elem.getAttributeNode!==\"undefined\"&&elem.getAttributeNode(\"id\");return node&&node.value===attrId;};};}// Tag\nExpr.find[\"TAG\"]=support.getElementsByTagName?function(tag,context){if(typeof context.getElementsByTagName!==\"undefined\"){return context.getElementsByTagName(tag);// DocumentFragment nodes don't have gEBTN\n}else if(support.qsa){return context.querySelectorAll(tag);}}:function(tag,context){var elem,tmp=[],i=0,// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\nresults=context.getElementsByTagName(tag);// Filter out possible comments\nif(tag===\"*\"){while(elem=results[i++]){if(elem.nodeType===1){tmp.push(elem);}}return tmp;}return results;};// Class\nExpr.find[\"CLASS\"]=support.getElementsByClassName&&function(className,context){if(typeof context.getElementsByClassName!==\"undefined\"&&documentIsHTML){return context.getElementsByClassName(className);}};/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */// QSA and matchesSelector support\n// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\nrbuggyMatches=[];// qSa(:focus) reports false when true (Chrome 21)\n// We allow this because of a bug in IE8/9 that throws an error\n// whenever `document.activeElement` is accessed on an iframe\n// So, we allow :focus to pass through QSA all the time to avoid the IE error\n// See http://bugs.jquery.com/ticket/13378\nrbuggyQSA=[];if(support.qsa=rnative.test(document.querySelectorAll)){// Build QSA regex\n// Regex strategy adopted from Diego Perini\nassert(function(div){// Select is set to empty string on purpose\n// This is to test IE's treatment of not explicitly\n// setting a boolean content attribute,\n// since its presence should be enough\n// http://bugs.jquery.com/ticket/12359\ndocElem.appendChild(div).innerHTML=\"<a id='\"+expando+\"'></a>\"+\"<select id='\"+expando+\"-\\r\\\\' msallowcapture=''>\"+\"<option selected=''></option></select>\";// Support: IE8, Opera 11-12.16\n// Nothing should be selected when empty strings follow ^= or $= or *=\n// The test attribute must be unknown in Opera but \"safe\" for WinRT\n// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\nif(div.querySelectorAll(\"[msallowcapture^='']\").length){rbuggyQSA.push(\"[*^$]=\"+whitespace+\"*(?:''|\\\"\\\")\");}// Support: IE8\n// Boolean attributes and \"value\" are not treated correctly\nif(!div.querySelectorAll(\"[selected]\").length){rbuggyQSA.push(\"\\\\[\"+whitespace+\"*(?:value|\"+booleans+\")\");}// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\nif(!div.querySelectorAll(\"[id~=\"+expando+\"-]\").length){rbuggyQSA.push(\"~=\");}// Webkit/Opera - :checked should return selected option elements\n// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n// IE8 throws error here and will not see later tests\nif(!div.querySelectorAll(\":checked\").length){rbuggyQSA.push(\":checked\");}// Support: Safari 8+, iOS 8+\n// https://bugs.webkit.org/show_bug.cgi?id=136851\n// In-page `selector#id sibing-combinator selector` fails\nif(!div.querySelectorAll(\"a#\"+expando+\"+*\").length){rbuggyQSA.push(\".#.+[+~]\");}});assert(function(div){// Support: Windows 8 Native Apps\n// The type and name attributes are restricted during .innerHTML assignment\nvar input=document.createElement(\"input\");input.setAttribute(\"type\",\"hidden\");div.appendChild(input).setAttribute(\"name\",\"D\");// Support: IE8\n// Enforce case-sensitivity of name attribute\nif(div.querySelectorAll(\"[name=d]\").length){rbuggyQSA.push(\"name\"+whitespace+\"*[*^$|!~]?=\");}// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n// IE8 throws error here and will not see later tests\nif(!div.querySelectorAll(\":enabled\").length){rbuggyQSA.push(\":enabled\",\":disabled\");}// Opera 10-11 does not throw on post-comma invalid pseudos\ndiv.querySelectorAll(\"*,:x\");rbuggyQSA.push(\",.*:\");});}if(support.matchesSelector=rnative.test(matches=docElem.matches||docElem.webkitMatchesSelector||docElem.mozMatchesSelector||docElem.oMatchesSelector||docElem.msMatchesSelector)){assert(function(div){// Check to see if it's possible to do matchesSelector\n// on a disconnected node (IE 9)\nsupport.disconnectedMatch=matches.call(div,\"div\");// This should fail with an exception\n// Gecko does not error, returns false instead\nmatches.call(div,\"[s!='']:x\");rbuggyMatches.push(\"!=\",pseudos);});}rbuggyQSA=rbuggyQSA.length&&new RegExp(rbuggyQSA.join(\"|\"));rbuggyMatches=rbuggyMatches.length&&new RegExp(rbuggyMatches.join(\"|\"));/* Contains\n\t---------------------------------------------------------------------- */hasCompare=rnative.test(docElem.compareDocumentPosition);// Element contains another\n// Purposefully self-exclusive\n// As in, an element does not contain itself\ncontains=hasCompare||rnative.test(docElem.contains)?function(a,b){var adown=a.nodeType===9?a.documentElement:a,bup=b&&b.parentNode;return a===bup||!!(bup&&bup.nodeType===1&&(adown.contains?adown.contains(bup):a.compareDocumentPosition&&a.compareDocumentPosition(bup)&16));}:function(a,b){if(b){while(b=b.parentNode){if(b===a){return true;}}}return false;};/* Sorting\n\t---------------------------------------------------------------------- */// Document order sorting\nsortOrder=hasCompare?function(a,b){// Flag for duplicate removal\nif(a===b){hasDuplicate=true;return 0;}// Sort on method existence if only one input has compareDocumentPosition\nvar compare=!a.compareDocumentPosition-!b.compareDocumentPosition;if(compare){return compare;}// Calculate position if both inputs belong to the same document\ncompare=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):// Otherwise we know they are disconnected\n1;// Disconnected nodes\nif(compare&1||!support.sortDetached&&b.compareDocumentPosition(a)===compare){// Choose the first element that is related to our preferred document\nif(a===document||a.ownerDocument===preferredDoc&&contains(preferredDoc,a)){return-1;}if(b===document||b.ownerDocument===preferredDoc&&contains(preferredDoc,b)){return 1;}// Maintain original order\nreturn sortInput?indexOf(sortInput,a)-indexOf(sortInput,b):0;}return compare&4?-1:1;}:function(a,b){// Exit early if the nodes are identical\nif(a===b){hasDuplicate=true;return 0;}var cur,i=0,aup=a.parentNode,bup=b.parentNode,ap=[a],bp=[b];// Parentless nodes are either documents or disconnected\nif(!aup||!bup){return a===document?-1:b===document?1:aup?-1:bup?1:sortInput?indexOf(sortInput,a)-indexOf(sortInput,b):0;// If the nodes are siblings, we can do a quick check\n}else if(aup===bup){return siblingCheck(a,b);}// Otherwise we need full lists of their ancestors for comparison\ncur=a;while(cur=cur.parentNode){ap.unshift(cur);}cur=b;while(cur=cur.parentNode){bp.unshift(cur);}// Walk down the tree looking for a discrepancy\nwhile(ap[i]===bp[i]){i++;}return i?// Do a sibling check if the nodes have a common ancestor\nsiblingCheck(ap[i],bp[i]):// Otherwise nodes in our document sort first\nap[i]===preferredDoc?-1:bp[i]===preferredDoc?1:0;};return document;};Sizzle.matches=function(expr,elements){return Sizzle(expr,null,null,elements);};Sizzle.matchesSelector=function(elem,expr){// Set document vars if needed\nif((elem.ownerDocument||elem)!==document){setDocument(elem);}// Make sure that attribute selectors are quoted\nexpr=expr.replace(rattributeQuotes,\"='$1']\");if(support.matchesSelector&&documentIsHTML&&!compilerCache[expr+\" \"]&&(!rbuggyMatches||!rbuggyMatches.test(expr))&&(!rbuggyQSA||!rbuggyQSA.test(expr))){try{var ret=matches.call(elem,expr);// IE 9's matchesSelector returns false on disconnected nodes\nif(ret||support.disconnectedMatch||// As well, disconnected nodes are said to be in a document\n// fragment in IE 9\nelem.document&&elem.document.nodeType!==11){return ret;}}catch(e){}}return Sizzle(expr,document,null,[elem]).length>0;};Sizzle.contains=function(context,elem){// Set document vars if needed\nif((context.ownerDocument||context)!==document){setDocument(context);}return contains(context,elem);};Sizzle.attr=function(elem,name){// Set document vars if needed\nif((elem.ownerDocument||elem)!==document){setDocument(elem);}var fn=Expr.attrHandle[name.toLowerCase()],// Don't get fooled by Object.prototype properties (jQuery #13807)\nval=fn&&hasOwn.call(Expr.attrHandle,name.toLowerCase())?fn(elem,name,!documentIsHTML):undefined;return val!==undefined?val:support.attributes||!documentIsHTML?elem.getAttribute(name):(val=elem.getAttributeNode(name))&&val.specified?val.value:null;};Sizzle.error=function(msg){throw new Error(\"Syntax error, unrecognized expression: \"+msg);};/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */Sizzle.uniqueSort=function(results){var elem,duplicates=[],j=0,i=0;// Unless we *know* we can detect duplicates, assume their presence\nhasDuplicate=!support.detectDuplicates;sortInput=!support.sortStable&&results.slice(0);results.sort(sortOrder);if(hasDuplicate){while(elem=results[i++]){if(elem===results[i]){j=duplicates.push(i);}}while(j--){results.splice(duplicates[j],1);}}// Clear input after sorting to release objects\n// See https://github.com/jquery/sizzle/pull/225\nsortInput=null;return results;};/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */getText=Sizzle.getText=function(elem){var node,ret=\"\",i=0,nodeType=elem.nodeType;if(!nodeType){// If no nodeType, this is expected to be an array\nwhile(node=elem[i++]){// Do not traverse comment nodes\nret+=getText(node);}}else if(nodeType===1||nodeType===9||nodeType===11){// Use textContent for elements\n// innerText usage removed for consistency of new lines (jQuery #11153)\nif(typeof elem.textContent===\"string\"){return elem.textContent;}else{// Traverse its children\nfor(elem=elem.firstChild;elem;elem=elem.nextSibling){ret+=getText(elem);}}}else if(nodeType===3||nodeType===4){return elem.nodeValue;}// Do not include comment or processing instruction nodes\nreturn ret;};Expr=Sizzle.selectors={// Can be adjusted by the user\ncacheLength:50,createPseudo:markFunction,match:matchExpr,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:true},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:true},\"~\":{dir:\"previousSibling\"}},preFilter:{\"ATTR\":function ATTR(match){match[1]=match[1].replace(runescape,funescape);// Move the given value to match[3] whether quoted or unquoted\nmatch[3]=(match[3]||match[4]||match[5]||\"\").replace(runescape,funescape);if(match[2]===\"~=\"){match[3]=\" \"+match[3]+\" \";}return match.slice(0,4);},\"CHILD\":function CHILD(match){/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/match[1]=match[1].toLowerCase();if(match[1].slice(0,3)===\"nth\"){// nth-* requires argument\nif(!match[3]){Sizzle.error(match[0]);}// numeric x and y parameters for Expr.filter.CHILD\n// remember that false/true cast respectively to 0/1\nmatch[4]=+(match[4]?match[5]+(match[6]||1):2*(match[3]===\"even\"||match[3]===\"odd\"));match[5]=+(match[7]+match[8]||match[3]===\"odd\");// other types prohibit arguments\n}else if(match[3]){Sizzle.error(match[0]);}return match;},\"PSEUDO\":function PSEUDO(match){var excess,unquoted=!match[6]&&match[2];if(matchExpr[\"CHILD\"].test(match[0])){return null;}// Accept quoted arguments as-is\nif(match[3]){match[2]=match[4]||match[5]||\"\";// Strip excess characters from unquoted arguments\n}else if(unquoted&&rpseudo.test(unquoted)&&(// Get excess from tokenize (recursively)\nexcess=tokenize(unquoted,true))&&(// advance to the next closing parenthesis\nexcess=unquoted.indexOf(\")\",unquoted.length-excess)-unquoted.length)){// excess is a negative index\nmatch[0]=match[0].slice(0,excess);match[2]=unquoted.slice(0,excess);}// Return only captures needed by the pseudo filter method (type and argument)\nreturn match.slice(0,3);}},filter:{\"TAG\":function TAG(nodeNameSelector){var nodeName=nodeNameSelector.replace(runescape,funescape).toLowerCase();return nodeNameSelector===\"*\"?function(){return true;}:function(elem){return elem.nodeName&&elem.nodeName.toLowerCase()===nodeName;};},\"CLASS\":function CLASS(className){var pattern=classCache[className+\" \"];return pattern||(pattern=new RegExp(\"(^|\"+whitespace+\")\"+className+\"(\"+whitespace+\"|$)\"))&&classCache(className,function(elem){return pattern.test(typeof elem.className===\"string\"&&elem.className||typeof elem.getAttribute!==\"undefined\"&&elem.getAttribute(\"class\")||\"\");});},\"ATTR\":function ATTR(name,operator,check){return function(elem){var result=Sizzle.attr(elem,name);if(result==null){return operator===\"!=\";}if(!operator){return true;}result+=\"\";return operator===\"=\"?result===check:operator===\"!=\"?result!==check:operator===\"^=\"?check&&result.indexOf(check)===0:operator===\"*=\"?check&&result.indexOf(check)>-1:operator===\"$=\"?check&&result.slice(-check.length)===check:operator===\"~=\"?(\" \"+result.replace(rwhitespace,\" \")+\" \").indexOf(check)>-1:operator===\"|=\"?result===check||result.slice(0,check.length+1)===check+\"-\":false;};},\"CHILD\":function CHILD(type,what,argument,first,last){var simple=type.slice(0,3)!==\"nth\",forward=type.slice(-4)!==\"last\",ofType=what===\"of-type\";return first===1&&last===0?// Shortcut for :nth-*(n)\nfunction(elem){return!!elem.parentNode;}:function(elem,context,xml){var cache,uniqueCache,outerCache,node,nodeIndex,start,dir=simple!==forward?\"nextSibling\":\"previousSibling\",parent=elem.parentNode,name=ofType&&elem.nodeName.toLowerCase(),useCache=!xml&&!ofType,diff=false;if(parent){// :(first|last|only)-(child|of-type)\nif(simple){while(dir){node=elem;while(node=node[dir]){if(ofType?node.nodeName.toLowerCase()===name:node.nodeType===1){return false;}}// Reverse direction for :only-* (if we haven't yet done so)\nstart=dir=type===\"only\"&&!start&&\"nextSibling\";}return true;}start=[forward?parent.firstChild:parent.lastChild];// non-xml :nth-child(...) stores cache data on `parent`\nif(forward&&useCache){// Seek `elem` from a previously-cached index\n// ...in a gzip-friendly way\nnode=parent;outerCache=node[expando]||(node[expando]={});// Support: IE <9 only\n// Defend against cloned attroperties (jQuery gh-1709)\nuniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});cache=uniqueCache[type]||[];nodeIndex=cache[0]===dirruns&&cache[1];diff=nodeIndex&&cache[2];node=nodeIndex&&parent.childNodes[nodeIndex];while(node=++nodeIndex&&node&&node[dir]||(// Fallback to seeking `elem` from the start\ndiff=nodeIndex=0)||start.pop()){// When found, cache indexes on `parent` and break\nif(node.nodeType===1&&++diff&&node===elem){uniqueCache[type]=[dirruns,nodeIndex,diff];break;}}}else{// Use previously-cached element index if available\nif(useCache){// ...in a gzip-friendly way\nnode=elem;outerCache=node[expando]||(node[expando]={});// Support: IE <9 only\n// Defend against cloned attroperties (jQuery gh-1709)\nuniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});cache=uniqueCache[type]||[];nodeIndex=cache[0]===dirruns&&cache[1];diff=nodeIndex;}// xml :nth-child(...)\n// or :nth-last-child(...) or :nth(-last)?-of-type(...)\nif(diff===false){// Use the same loop as above to seek `elem` from the start\nwhile(node=++nodeIndex&&node&&node[dir]||(diff=nodeIndex=0)||start.pop()){if((ofType?node.nodeName.toLowerCase()===name:node.nodeType===1)&&++diff){// Cache the index of each encountered element\nif(useCache){outerCache=node[expando]||(node[expando]={});// Support: IE <9 only\n// Defend against cloned attroperties (jQuery gh-1709)\nuniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});uniqueCache[type]=[dirruns,diff];}if(node===elem){break;}}}}}// Incorporate the offset, then check against cycle size\ndiff-=last;return diff===first||diff%first===0&&diff/first>=0;}};},\"PSEUDO\":function PSEUDO(pseudo,argument){// pseudo-class names are case-insensitive\n// http://www.w3.org/TR/selectors/#pseudo-classes\n// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n// Remember that setFilters inherits from pseudos\nvar args,fn=Expr.pseudos[pseudo]||Expr.setFilters[pseudo.toLowerCase()]||Sizzle.error(\"unsupported pseudo: \"+pseudo);// The user may use createPseudo to indicate that\n// arguments are needed to create the filter function\n// just as Sizzle does\nif(fn[expando]){return fn(argument);}// But maintain support for old signatures\nif(fn.length>1){args=[pseudo,pseudo,\"\",argument];return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())?markFunction(function(seed,matches){var idx,matched=fn(seed,argument),i=matched.length;while(i--){idx=indexOf(seed,matched[i]);seed[idx]=!(matches[idx]=matched[i]);}}):function(elem){return fn(elem,0,args);};}return fn;}},pseudos:{// Potentially complex pseudos\n\"not\":markFunction(function(selector){// Trim the selector passed to compile\n// to avoid treating leading and trailing\n// spaces as combinators\nvar input=[],results=[],matcher=compile(selector.replace(rtrim,\"$1\"));return matcher[expando]?markFunction(function(seed,matches,context,xml){var elem,unmatched=matcher(seed,null,xml,[]),i=seed.length;// Match elements unmatched by `matcher`\nwhile(i--){if(elem=unmatched[i]){seed[i]=!(matches[i]=elem);}}}):function(elem,context,xml){input[0]=elem;matcher(input,null,xml,results);// Don't keep the element (issue #299)\ninput[0]=null;return!results.pop();};}),\"has\":markFunction(function(selector){return function(elem){return Sizzle(selector,elem).length>0;};}),\"contains\":markFunction(function(text){text=text.replace(runescape,funescape);return function(elem){return(elem.textContent||elem.innerText||getText(elem)).indexOf(text)>-1;};}),// \"Whether an element is represented by a :lang() selector\n// is based solely on the element's language value\n// being equal to the identifier C,\n// or beginning with the identifier C immediately followed by \"-\".\n// The matching of C against the element's language value is performed case-insensitively.\n// The identifier C does not have to be a valid language name.\"\n// http://www.w3.org/TR/selectors/#lang-pseudo\n\"lang\":markFunction(function(lang){// lang value must be a valid identifier\nif(!ridentifier.test(lang||\"\")){Sizzle.error(\"unsupported lang: \"+lang);}lang=lang.replace(runescape,funescape).toLowerCase();return function(elem){var elemLang;do{if(elemLang=documentIsHTML?elem.lang:elem.getAttribute(\"xml:lang\")||elem.getAttribute(\"lang\")){elemLang=elemLang.toLowerCase();return elemLang===lang||elemLang.indexOf(lang+\"-\")===0;}}while((elem=elem.parentNode)&&elem.nodeType===1);return false;};}),// Miscellaneous\n\"target\":function target(elem){var hash=window.location&&window.location.hash;return hash&&hash.slice(1)===elem.id;},\"root\":function root(elem){return elem===docElem;},\"focus\":function focus(elem){return elem===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(elem.type||elem.href||~elem.tabIndex);},// Boolean properties\n\"enabled\":function enabled(elem){return elem.disabled===false;},\"disabled\":function disabled(elem){return elem.disabled===true;},\"checked\":function checked(elem){// In CSS3, :checked should return both checked and selected elements\n// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\nvar nodeName=elem.nodeName.toLowerCase();return nodeName===\"input\"&&!!elem.checked||nodeName===\"option\"&&!!elem.selected;},\"selected\":function selected(elem){// Accessing this property makes selected-by-default\n// options in Safari work properly\nif(elem.parentNode){elem.parentNode.selectedIndex;}return elem.selected===true;},// Contents\n\"empty\":function empty(elem){// http://www.w3.org/TR/selectors/#empty-pseudo\n// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n//   but not by others (comment: 8; processing instruction: 7; etc.)\n// nodeType < 6 works because attributes (2) do not appear as children\nfor(elem=elem.firstChild;elem;elem=elem.nextSibling){if(elem.nodeType<6){return false;}}return true;},\"parent\":function parent(elem){return!Expr.pseudos[\"empty\"](elem);},// Element/input types\n\"header\":function header(elem){return rheader.test(elem.nodeName);},\"input\":function input(elem){return rinputs.test(elem.nodeName);},\"button\":function button(elem){var name=elem.nodeName.toLowerCase();return name===\"input\"&&elem.type===\"button\"||name===\"button\";},\"text\":function text(elem){var attr;return elem.nodeName.toLowerCase()===\"input\"&&elem.type===\"text\"&&(// Support: IE<8\n// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n(attr=elem.getAttribute(\"type\"))==null||attr.toLowerCase()===\"text\");},// Position-in-collection\n\"first\":createPositionalPseudo(function(){return[0];}),\"last\":createPositionalPseudo(function(matchIndexes,length){return[length-1];}),\"eq\":createPositionalPseudo(function(matchIndexes,length,argument){return[argument<0?argument+length:argument];}),\"even\":createPositionalPseudo(function(matchIndexes,length){var i=0;for(;i<length;i+=2){matchIndexes.push(i);}return matchIndexes;}),\"odd\":createPositionalPseudo(function(matchIndexes,length){var i=1;for(;i<length;i+=2){matchIndexes.push(i);}return matchIndexes;}),\"lt\":createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument;for(;--i>=0;){matchIndexes.push(i);}return matchIndexes;}),\"gt\":createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument;for(;++i<length;){matchIndexes.push(i);}return matchIndexes;})}};Expr.pseudos[\"nth\"]=Expr.pseudos[\"eq\"];// Add button/input type pseudos\nfor(i in{radio:true,checkbox:true,file:true,password:true,image:true}){Expr.pseudos[i]=createInputPseudo(i);}for(i in{submit:true,reset:true}){Expr.pseudos[i]=createButtonPseudo(i);}// Easy API for creating new setFilters\nfunction setFilters(){}setFilters.prototype=Expr.filters=Expr.pseudos;Expr.setFilters=new setFilters();tokenize=Sizzle.tokenize=function(selector,parseOnly){var matched,match,tokens,type,soFar,groups,preFilters,cached=tokenCache[selector+\" \"];if(cached){return parseOnly?0:cached.slice(0);}soFar=selector;groups=[];preFilters=Expr.preFilter;while(soFar){// Comma and first run\nif(!matched||(match=rcomma.exec(soFar))){if(match){// Don't consume trailing commas as valid\nsoFar=soFar.slice(match[0].length)||soFar;}groups.push(tokens=[]);}matched=false;// Combinators\nif(match=rcombinators.exec(soFar)){matched=match.shift();tokens.push({value:matched,// Cast descendant combinators to space\ntype:match[0].replace(rtrim,\" \")});soFar=soFar.slice(matched.length);}// Filters\nfor(type in Expr.filter){if((match=matchExpr[type].exec(soFar))&&(!preFilters[type]||(match=preFilters[type](match)))){matched=match.shift();tokens.push({value:matched,type:type,matches:match});soFar=soFar.slice(matched.length);}}if(!matched){break;}}// Return the length of the invalid excess\n// if we're just parsing\n// Otherwise, throw an error or return tokens\nreturn parseOnly?soFar.length:soFar?Sizzle.error(selector):// Cache the tokens\ntokenCache(selector,groups).slice(0);};function toSelector(tokens){var i=0,len=tokens.length,selector=\"\";for(;i<len;i++){selector+=tokens[i].value;}return selector;}function addCombinator(matcher,combinator,base){var dir=combinator.dir,checkNonElements=base&&dir===\"parentNode\",doneName=done++;return combinator.first?// Check against closest ancestor/preceding element\nfunction(elem,context,xml){while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){return matcher(elem,context,xml);}}}:// Check against all ancestor/preceding elements\nfunction(elem,context,xml){var oldCache,uniqueCache,outerCache,newCache=[dirruns,doneName];// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\nif(xml){while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){if(matcher(elem,context,xml)){return true;}}}}else{while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){outerCache=elem[expando]||(elem[expando]={});// Support: IE <9 only\n// Defend against cloned attroperties (jQuery gh-1709)\nuniqueCache=outerCache[elem.uniqueID]||(outerCache[elem.uniqueID]={});if((oldCache=uniqueCache[dir])&&oldCache[0]===dirruns&&oldCache[1]===doneName){// Assign to newCache so results back-propagate to previous elements\nreturn newCache[2]=oldCache[2];}else{// Reuse newcache so results back-propagate to previous elements\nuniqueCache[dir]=newCache;// A match means we're done; a fail means we have to keep checking\nif(newCache[2]=matcher(elem,context,xml)){return true;}}}}}};}function elementMatcher(matchers){return matchers.length>1?function(elem,context,xml){var i=matchers.length;while(i--){if(!matchers[i](elem,context,xml)){return false;}}return true;}:matchers[0];}function multipleContexts(selector,contexts,results){var i=0,len=contexts.length;for(;i<len;i++){Sizzle(selector,contexts[i],results);}return results;}function condense(unmatched,map,filter,context,xml){var elem,newUnmatched=[],i=0,len=unmatched.length,mapped=map!=null;for(;i<len;i++){if(elem=unmatched[i]){if(!filter||filter(elem,context,xml)){newUnmatched.push(elem);if(mapped){map.push(i);}}}}return newUnmatched;}function setMatcher(preFilter,selector,matcher,postFilter,postFinder,postSelector){if(postFilter&&!postFilter[expando]){postFilter=setMatcher(postFilter);}if(postFinder&&!postFinder[expando]){postFinder=setMatcher(postFinder,postSelector);}return markFunction(function(seed,results,context,xml){var temp,i,elem,preMap=[],postMap=[],preexisting=results.length,// Get initial elements from seed or context\nelems=seed||multipleContexts(selector||\"*\",context.nodeType?[context]:context,[]),// Prefilter to get matcher input, preserving a map for seed-results synchronization\nmatcherIn=preFilter&&(seed||!selector)?condense(elems,preMap,preFilter,context,xml):elems,matcherOut=matcher?// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\npostFinder||(seed?preFilter:preexisting||postFilter)?// ...intermediate processing is necessary\n[]:// ...otherwise use results directly\nresults:matcherIn;// Find primary matches\nif(matcher){matcher(matcherIn,matcherOut,context,xml);}// Apply postFilter\nif(postFilter){temp=condense(matcherOut,postMap);postFilter(temp,[],context,xml);// Un-match failing elements by moving them back to matcherIn\ni=temp.length;while(i--){if(elem=temp[i]){matcherOut[postMap[i]]=!(matcherIn[postMap[i]]=elem);}}}if(seed){if(postFinder||preFilter){if(postFinder){// Get the final matcherOut by condensing this intermediate into postFinder contexts\ntemp=[];i=matcherOut.length;while(i--){if(elem=matcherOut[i]){// Restore matcherIn since elem is not yet a final match\ntemp.push(matcherIn[i]=elem);}}postFinder(null,matcherOut=[],temp,xml);}// Move matched elements from seed to results to keep them synchronized\ni=matcherOut.length;while(i--){if((elem=matcherOut[i])&&(temp=postFinder?indexOf(seed,elem):preMap[i])>-1){seed[temp]=!(results[temp]=elem);}}}// Add elements to results, through postFinder if defined\n}else{matcherOut=condense(matcherOut===results?matcherOut.splice(preexisting,matcherOut.length):matcherOut);if(postFinder){postFinder(null,results,matcherOut,xml);}else{push.apply(results,matcherOut);}}});}function matcherFromTokens(tokens){var checkContext,matcher,j,len=tokens.length,leadingRelative=Expr.relative[tokens[0].type],implicitRelative=leadingRelative||Expr.relative[\" \"],i=leadingRelative?1:0,// The foundational matcher ensures that elements are reachable from top-level context(s)\nmatchContext=addCombinator(function(elem){return elem===checkContext;},implicitRelative,true),matchAnyContext=addCombinator(function(elem){return indexOf(checkContext,elem)>-1;},implicitRelative,true),matchers=[function(elem,context,xml){var ret=!leadingRelative&&(xml||context!==outermostContext)||((checkContext=context).nodeType?matchContext(elem,context,xml):matchAnyContext(elem,context,xml));// Avoid hanging onto element (issue #299)\ncheckContext=null;return ret;}];for(;i<len;i++){if(matcher=Expr.relative[tokens[i].type]){matchers=[addCombinator(elementMatcher(matchers),matcher)];}else{matcher=Expr.filter[tokens[i].type].apply(null,tokens[i].matches);// Return special upon seeing a positional matcher\nif(matcher[expando]){// Find the next relative operator (if any) for proper handling\nj=++i;for(;j<len;j++){if(Expr.relative[tokens[j].type]){break;}}return setMatcher(i>1&&elementMatcher(matchers),i>1&&toSelector(// If the preceding token was a descendant combinator, insert an implicit any-element `*`\ntokens.slice(0,i-1).concat({value:tokens[i-2].type===\" \"?\"*\":\"\"})).replace(rtrim,\"$1\"),matcher,i<j&&matcherFromTokens(tokens.slice(i,j)),j<len&&matcherFromTokens(tokens=tokens.slice(j)),j<len&&toSelector(tokens));}matchers.push(matcher);}}return elementMatcher(matchers);}function matcherFromGroupMatchers(elementMatchers,setMatchers){var bySet=setMatchers.length>0,byElement=elementMatchers.length>0,superMatcher=function superMatcher(seed,context,xml,results,outermost){var elem,j,matcher,matchedCount=0,i=\"0\",unmatched=seed&&[],setMatched=[],contextBackup=outermostContext,// We must always have either seed elements or outermost context\nelems=seed||byElement&&Expr.find[\"TAG\"](\"*\",outermost),// Use integer dirruns iff this is the outermost matcher\ndirrunsUnique=dirruns+=contextBackup==null?1:Math.random()||0.1,len=elems.length;if(outermost){outermostContext=context===document||context||outermost;}// Add elements passing elementMatchers directly to results\n// Support: IE<9, Safari\n// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\nfor(;i!==len&&(elem=elems[i])!=null;i++){if(byElement&&elem){j=0;if(!context&&elem.ownerDocument!==document){setDocument(elem);xml=!documentIsHTML;}while(matcher=elementMatchers[j++]){if(matcher(elem,context||document,xml)){results.push(elem);break;}}if(outermost){dirruns=dirrunsUnique;}}// Track unmatched elements for set filters\nif(bySet){// They will have gone through all possible matchers\nif(elem=!matcher&&elem){matchedCount--;}// Lengthen the array for every element, matched or not\nif(seed){unmatched.push(elem);}}}// `i` is now the count of elements visited above, and adding it to `matchedCount`\n// makes the latter nonnegative.\nmatchedCount+=i;// Apply set filters to unmatched elements\n// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n// no element matchers and no seed.\n// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n// numerically zero.\nif(bySet&&i!==matchedCount){j=0;while(matcher=setMatchers[j++]){matcher(unmatched,setMatched,context,xml);}if(seed){// Reintegrate element matches to eliminate the need for sorting\nif(matchedCount>0){while(i--){if(!(unmatched[i]||setMatched[i])){setMatched[i]=pop.call(results);}}}// Discard index placeholder values to get only actual matches\nsetMatched=condense(setMatched);}// Add matches to results\npush.apply(results,setMatched);// Seedless set matches succeeding multiple successful matchers stipulate sorting\nif(outermost&&!seed&&setMatched.length>0&&matchedCount+setMatchers.length>1){Sizzle.uniqueSort(results);}}// Override manipulation of globals by nested matchers\nif(outermost){dirruns=dirrunsUnique;outermostContext=contextBackup;}return unmatched;};return bySet?markFunction(superMatcher):superMatcher;}compile=Sizzle.compile=function(selector,match/* Internal Use Only */){var i,setMatchers=[],elementMatchers=[],cached=compilerCache[selector+\" \"];if(!cached){// Generate a function of recursive functions that can be used to check each element\nif(!match){match=tokenize(selector);}i=match.length;while(i--){cached=matcherFromTokens(match[i]);if(cached[expando]){setMatchers.push(cached);}else{elementMatchers.push(cached);}}// Cache the compiled function\ncached=compilerCache(selector,matcherFromGroupMatchers(elementMatchers,setMatchers));// Save selector and tokenization\ncached.selector=selector;}return cached;};/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */select=Sizzle.select=function(selector,context,results,seed){var i,tokens,token,type,find,compiled=typeof selector===\"function\"&&selector,match=!seed&&tokenize(selector=compiled.selector||selector);results=results||[];// Try to minimize operations if there is only one selector in the list and no seed\n// (the latter of which guarantees us context)\nif(match.length===1){// Reduce context if the leading compound selector is an ID\ntokens=match[0]=match[0].slice(0);if(tokens.length>2&&(token=tokens[0]).type===\"ID\"&&support.getById&&context.nodeType===9&&documentIsHTML&&Expr.relative[tokens[1].type]){context=(Expr.find[\"ID\"](token.matches[0].replace(runescape,funescape),context)||[])[0];if(!context){return results;// Precompiled matchers will still verify ancestry, so step up a level\n}else if(compiled){context=context.parentNode;}selector=selector.slice(tokens.shift().value.length);}// Fetch a seed set for right-to-left matching\ni=matchExpr[\"needsContext\"].test(selector)?0:tokens.length;while(i--){token=tokens[i];// Abort if we hit a combinator\nif(Expr.relative[type=token.type]){break;}if(find=Expr.find[type]){// Search, expanding context for leading sibling combinators\nif(seed=find(token.matches[0].replace(runescape,funescape),rsibling.test(tokens[0].type)&&testContext(context.parentNode)||context)){// If seed is empty or no tokens remain, we can return early\ntokens.splice(i,1);selector=seed.length&&toSelector(tokens);if(!selector){push.apply(results,seed);return results;}break;}}}}// Compile and execute a filtering function if one is not provided\n// Provide `match` to avoid retokenization if we modified the selector above\n(compiled||compile(selector,match))(seed,context,!documentIsHTML,results,!context||rsibling.test(selector)&&testContext(context.parentNode)||context);return results;};// One-time assignments\n// Sort stability\nsupport.sortStable=expando.split(\"\").sort(sortOrder).join(\"\")===expando;// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates=!!hasDuplicate;// Initialize against the default document\nsetDocument();// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached=assert(function(div1){// Should return 1, but returns 4 (following)\nreturn div1.compareDocumentPosition(document.createElement(\"div\"))&1;});// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif(!assert(function(div){div.innerHTML=\"<a href='#'></a>\";return div.firstChild.getAttribute(\"href\")===\"#\";})){addHandle(\"type|href|height|width\",function(elem,name,isXML){if(!isXML){return elem.getAttribute(name,name.toLowerCase()===\"type\"?1:2);}});}// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif(!support.attributes||!assert(function(div){div.innerHTML=\"<input/>\";div.firstChild.setAttribute(\"value\",\"\");return div.firstChild.getAttribute(\"value\")===\"\";})){addHandle(\"value\",function(elem,name,isXML){if(!isXML&&elem.nodeName.toLowerCase()===\"input\"){return elem.defaultValue;}});}// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif(!assert(function(div){return div.getAttribute(\"disabled\")==null;})){addHandle(booleans,function(elem,name,isXML){var val;if(!isXML){return elem[name]===true?name.toLowerCase():(val=elem.getAttributeNode(name))&&val.specified?val.value:null;}});}return Sizzle;}(window);jQuery.find=Sizzle;jQuery.expr=Sizzle.selectors;jQuery.expr[\":\"]=jQuery.expr.pseudos;jQuery.uniqueSort=jQuery.unique=Sizzle.uniqueSort;jQuery.text=Sizzle.getText;jQuery.isXMLDoc=Sizzle.isXML;jQuery.contains=Sizzle.contains;var dir=function dir(elem,_dir,until){var matched=[],truncate=until!==undefined;while((elem=elem[_dir])&&elem.nodeType!==9){if(elem.nodeType===1){if(truncate&&jQuery(elem).is(until)){break;}matched.push(elem);}}return matched;};var _siblings=function _siblings(n,elem){var matched=[];for(;n;n=n.nextSibling){if(n.nodeType===1&&n!==elem){matched.push(n);}}return matched;};var rneedsContext=jQuery.expr.match.needsContext;var rsingleTag=/^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/;var risSimple=/^.[^:#\\[\\.,]*$/;// Implement the identical functionality for filter and not\nfunction winnow(elements,qualifier,not){if(jQuery.isFunction(qualifier)){return jQuery.grep(elements,function(elem,i){/* jshint -W018 */return!!qualifier.call(elem,i,elem)!==not;});}if(qualifier.nodeType){return jQuery.grep(elements,function(elem){return elem===qualifier!==not;});}if(typeof qualifier===\"string\"){if(risSimple.test(qualifier)){return jQuery.filter(qualifier,elements,not);}qualifier=jQuery.filter(qualifier,elements);}return jQuery.grep(elements,function(elem){return indexOf.call(qualifier,elem)>-1!==not;});}jQuery.filter=function(expr,elems,not){var elem=elems[0];if(not){expr=\":not(\"+expr+\")\";}return elems.length===1&&elem.nodeType===1?jQuery.find.matchesSelector(elem,expr)?[elem]:[]:jQuery.find.matches(expr,jQuery.grep(elems,function(elem){return elem.nodeType===1;}));};jQuery.fn.extend({find:function find(selector){var i,len=this.length,ret=[],self=this;if(typeof selector!==\"string\"){return this.pushStack(jQuery(selector).filter(function(){for(i=0;i<len;i++){if(jQuery.contains(self[i],this)){return true;}}}));}for(i=0;i<len;i++){jQuery.find(selector,self[i],ret);}// Needed because $( selector, context ) becomes $( context ).find( selector )\nret=this.pushStack(len>1?jQuery.unique(ret):ret);ret.selector=this.selector?this.selector+\" \"+selector:selector;return ret;},filter:function filter(selector){return this.pushStack(winnow(this,selector||[],false));},not:function not(selector){return this.pushStack(winnow(this,selector||[],true));},is:function is(selector){return!!winnow(this,// If this is a positional/relative selector, check membership in the returned set\n// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\ntypeof selector===\"string\"&&rneedsContext.test(selector)?jQuery(selector):selector||[],false).length;}});// Initialize a jQuery object\n// A central reference to the root jQuery(document)\nvar rootjQuery,// A simple way to check for HTML strings\n// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n// Strict HTML recognition (#11290: must start with <)\nrquickExpr=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,init=jQuery.fn.init=function(selector,context,root){var match,elem;// HANDLE: $(\"\"), $(null), $(undefined), $(false)\nif(!selector){return this;}// Method init() accepts an alternate rootjQuery\n// so migrate can support jQuery.sub (gh-2101)\nroot=root||rootjQuery;// Handle HTML strings\nif(typeof selector===\"string\"){if(selector[0]===\"<\"&&selector[selector.length-1]===\">\"&&selector.length>=3){// Assume that strings that start and end with <> are HTML and skip the regex check\nmatch=[null,selector,null];}else{match=rquickExpr.exec(selector);}// Match html or make sure no context is specified for #id\nif(match&&(match[1]||!context)){// HANDLE: $(html) -> $(array)\nif(match[1]){context=context instanceof jQuery?context[0]:context;// Option to run scripts is true for back-compat\n// Intentionally let the error be thrown if parseHTML is not present\njQuery.merge(this,jQuery.parseHTML(match[1],context&&context.nodeType?context.ownerDocument||context:document,true));// HANDLE: $(html, props)\nif(rsingleTag.test(match[1])&&jQuery.isPlainObject(context)){for(match in context){// Properties of context are called as methods if possible\nif(jQuery.isFunction(this[match])){this[match](context[match]);// ...and otherwise set as attributes\n}else{this.attr(match,context[match]);}}}return this;// HANDLE: $(#id)\n}else{elem=document.getElementById(match[2]);// Support: Blackberry 4.6\n// gEBID returns nodes no longer in the document (#6963)\nif(elem&&elem.parentNode){// Inject the element directly into the jQuery object\nthis.length=1;this[0]=elem;}this.context=document;this.selector=selector;return this;}// HANDLE: $(expr, $(...))\n}else if(!context||context.jquery){return(context||root).find(selector);// HANDLE: $(expr, context)\n// (which is just equivalent to: $(context).find(expr)\n}else{return this.constructor(context).find(selector);}// HANDLE: $(DOMElement)\n}else if(selector.nodeType){this.context=this[0]=selector;this.length=1;return this;// HANDLE: $(function)\n// Shortcut for document ready\n}else if(jQuery.isFunction(selector)){return root.ready!==undefined?root.ready(selector):// Execute immediately if ready is not present\nselector(jQuery);}if(selector.selector!==undefined){this.selector=selector.selector;this.context=selector.context;}return jQuery.makeArray(selector,this);};// Give the init function the jQuery prototype for later instantiation\ninit.prototype=jQuery.fn;// Initialize central reference\nrootjQuery=jQuery(document);var rparentsprev=/^(?:parents|prev(?:Until|All))/,// Methods guaranteed to produce a unique set when starting from a unique set\nguaranteedUnique={children:true,contents:true,next:true,prev:true};jQuery.fn.extend({has:function has(target){var targets=jQuery(target,this),l=targets.length;return this.filter(function(){var i=0;for(;i<l;i++){if(jQuery.contains(this,targets[i])){return true;}}});},closest:function closest(selectors,context){var cur,i=0,l=this.length,matched=[],pos=rneedsContext.test(selectors)||typeof selectors!==\"string\"?jQuery(selectors,context||this.context):0;for(;i<l;i++){for(cur=this[i];cur&&cur!==context;cur=cur.parentNode){// Always skip document fragments\nif(cur.nodeType<11&&(pos?pos.index(cur)>-1:// Don't pass non-elements to Sizzle\ncur.nodeType===1&&jQuery.find.matchesSelector(cur,selectors))){matched.push(cur);break;}}}return this.pushStack(matched.length>1?jQuery.uniqueSort(matched):matched);},// Determine the position of an element within the set\nindex:function index(elem){// No argument, return index in parent\nif(!elem){return this[0]&&this[0].parentNode?this.first().prevAll().length:-1;}// Index in selector\nif(typeof elem===\"string\"){return indexOf.call(jQuery(elem),this[0]);}// Locate the position of the desired element\nreturn indexOf.call(this,// If it receives a jQuery object, the first element is used\nelem.jquery?elem[0]:elem);},add:function add(selector,context){return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(),jQuery(selector,context))));},addBack:function addBack(selector){return this.add(selector==null?this.prevObject:this.prevObject.filter(selector));}});function sibling(cur,dir){while((cur=cur[dir])&&cur.nodeType!==1){}return cur;}jQuery.each({parent:function parent(elem){var parent=elem.parentNode;return parent&&parent.nodeType!==11?parent:null;},parents:function parents(elem){return dir(elem,\"parentNode\");},parentsUntil:function parentsUntil(elem,i,until){return dir(elem,\"parentNode\",until);},next:function next(elem){return sibling(elem,\"nextSibling\");},prev:function prev(elem){return sibling(elem,\"previousSibling\");},nextAll:function nextAll(elem){return dir(elem,\"nextSibling\");},prevAll:function prevAll(elem){return dir(elem,\"previousSibling\");},nextUntil:function nextUntil(elem,i,until){return dir(elem,\"nextSibling\",until);},prevUntil:function prevUntil(elem,i,until){return dir(elem,\"previousSibling\",until);},siblings:function siblings(elem){return _siblings((elem.parentNode||{}).firstChild,elem);},children:function children(elem){return _siblings(elem.firstChild);},contents:function contents(elem){return elem.contentDocument||jQuery.merge([],elem.childNodes);}},function(name,fn){jQuery.fn[name]=function(until,selector){var matched=jQuery.map(this,fn,until);if(name.slice(-5)!==\"Until\"){selector=until;}if(selector&&typeof selector===\"string\"){matched=jQuery.filter(selector,matched);}if(this.length>1){// Remove duplicates\nif(!guaranteedUnique[name]){jQuery.uniqueSort(matched);}// Reverse order for parents* and prev-derivatives\nif(rparentsprev.test(name)){matched.reverse();}}return this.pushStack(matched);};});var rnotwhite=/\\S+/g;// Convert String-formatted options into Object-formatted ones\nfunction createOptions(options){var object={};jQuery.each(options.match(rnotwhite)||[],function(_,flag){object[flag]=true;});return object;}/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */jQuery.Callbacks=function(options){// Convert options from String-formatted to Object-formatted if needed\n// (we check in cache first)\noptions=typeof options===\"string\"?createOptions(options):jQuery.extend({},options);var// Flag to know if list is currently firing\nfiring,// Last fire value for non-forgettable lists\nmemory,// Flag to know if list was already fired\n_fired,// Flag to prevent firing\n_locked,// Actual callback list\nlist=[],// Queue of execution data for repeatable lists\nqueue=[],// Index of currently firing callback (modified by add/remove as needed)\nfiringIndex=-1,// Fire callbacks\nfire=function fire(){// Enforce single-firing\n_locked=options.once;// Execute callbacks for all pending executions,\n// respecting firingIndex overrides and runtime changes\n_fired=firing=true;for(;queue.length;firingIndex=-1){memory=queue.shift();while(++firingIndex<list.length){// Run callback and check for early termination\nif(list[firingIndex].apply(memory[0],memory[1])===false&&options.stopOnFalse){// Jump to end and forget the data so .add doesn't re-fire\nfiringIndex=list.length;memory=false;}}}// Forget the data if we're done with it\nif(!options.memory){memory=false;}firing=false;// Clean up if we're done firing for good\nif(_locked){// Keep an empty list if we have data for future add calls\nif(memory){list=[];// Otherwise, this object is spent\n}else{list=\"\";}}},// Actual Callbacks object\nself={// Add a callback or a collection of callbacks to the list\nadd:function add(){if(list){// If we have memory from a past run, we should fire after adding\nif(memory&&!firing){firingIndex=list.length-1;queue.push(memory);}(function add(args){jQuery.each(args,function(_,arg){if(jQuery.isFunction(arg)){if(!options.unique||!self.has(arg)){list.push(arg);}}else if(arg&&arg.length&&jQuery.type(arg)!==\"string\"){// Inspect recursively\nadd(arg);}});})(arguments);if(memory&&!firing){fire();}}return this;},// Remove a callback from the list\nremove:function remove(){jQuery.each(arguments,function(_,arg){var index;while((index=jQuery.inArray(arg,list,index))>-1){list.splice(index,1);// Handle firing indexes\nif(index<=firingIndex){firingIndex--;}}});return this;},// Check if a given callback is in the list.\n// If no argument is given, return whether or not list has callbacks attached.\nhas:function has(fn){return fn?jQuery.inArray(fn,list)>-1:list.length>0;},// Remove all callbacks from the list\nempty:function empty(){if(list){list=[];}return this;},// Disable .fire and .add\n// Abort any current/pending executions\n// Clear all callbacks and values\ndisable:function disable(){_locked=queue=[];list=memory=\"\";return this;},disabled:function disabled(){return!list;},// Disable .fire\n// Also disable .add unless we have memory (since it would have no effect)\n// Abort any pending executions\nlock:function lock(){_locked=queue=[];if(!memory){list=memory=\"\";}return this;},locked:function locked(){return!!_locked;},// Call all callbacks with the given context and arguments\nfireWith:function fireWith(context,args){if(!_locked){args=args||[];args=[context,args.slice?args.slice():args];queue.push(args);if(!firing){fire();}}return this;},// Call all the callbacks with the given arguments\nfire:function fire(){self.fireWith(this,arguments);return this;},// To know if the callbacks have already been called at least once\nfired:function fired(){return!!_fired;}};return self;};jQuery.extend({Deferred:function Deferred(func){var tuples=[// action, add listener, listener list, final state\n[\"resolve\",\"done\",jQuery.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",jQuery.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",jQuery.Callbacks(\"memory\")]],_state=\"pending\",_promise={state:function state(){return _state;},always:function always(){deferred.done(arguments).fail(arguments);return this;},then:function then()/* fnDone, fnFail, fnProgress */{var fns=arguments;return jQuery.Deferred(function(newDefer){jQuery.each(tuples,function(i,tuple){var fn=jQuery.isFunction(fns[i])&&fns[i];// deferred[ done | fail | progress ] for forwarding actions to newDefer\ndeferred[tuple[1]](function(){var returned=fn&&fn.apply(this,arguments);if(returned&&jQuery.isFunction(returned.promise)){returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);}else{newDefer[tuple[0]+\"With\"](this===_promise?newDefer.promise():this,fn?[returned]:arguments);}});});fns=null;}).promise();},// Get a promise for this deferred\n// If obj is provided, the promise aspect is added to the object\npromise:function promise(obj){return obj!=null?jQuery.extend(obj,_promise):_promise;}},deferred={};// Keep pipe for back-compat\n_promise.pipe=_promise.then;// Add list-specific methods\njQuery.each(tuples,function(i,tuple){var list=tuple[2],stateString=tuple[3];// promise[ done | fail | progress ] = list.add\n_promise[tuple[1]]=list.add;// Handle state\nif(stateString){list.add(function(){// state = [ resolved | rejected ]\n_state=stateString;// [ reject_list | resolve_list ].disable; progress_list.lock\n},tuples[i^1][2].disable,tuples[2][2].lock);}// deferred[ resolve | reject | notify ]\ndeferred[tuple[0]]=function(){deferred[tuple[0]+\"With\"](this===deferred?_promise:this,arguments);return this;};deferred[tuple[0]+\"With\"]=list.fireWith;});// Make the deferred a promise\n_promise.promise(deferred);// Call given func if any\nif(func){func.call(deferred,deferred);}// All done!\nreturn deferred;},// Deferred helper\nwhen:function when(subordinate/* , ..., subordinateN */){var i=0,resolveValues=_slice.call(arguments),length=resolveValues.length,// the count of uncompleted subordinates\nremaining=length!==1||subordinate&&jQuery.isFunction(subordinate.promise)?length:0,// the master Deferred.\n// If resolveValues consist of only a single Deferred, just use that.\ndeferred=remaining===1?subordinate:jQuery.Deferred(),// Update function for both resolve and progress values\nupdateFunc=function updateFunc(i,contexts,values){return function(value){contexts[i]=this;values[i]=arguments.length>1?_slice.call(arguments):value;if(values===progressValues){deferred.notifyWith(contexts,values);}else if(! --remaining){deferred.resolveWith(contexts,values);}};},progressValues,progressContexts,resolveContexts;// Add listeners to Deferred subordinates; treat others as resolved\nif(length>1){progressValues=new Array(length);progressContexts=new Array(length);resolveContexts=new Array(length);for(;i<length;i++){if(resolveValues[i]&&jQuery.isFunction(resolveValues[i].promise)){resolveValues[i].promise().progress(updateFunc(i,progressContexts,progressValues)).done(updateFunc(i,resolveContexts,resolveValues)).fail(deferred.reject);}else{--remaining;}}}// If we're not waiting on anything, resolve the master\nif(!remaining){deferred.resolveWith(resolveContexts,resolveValues);}return deferred.promise();}});// The deferred used on DOM ready\nvar readyList;jQuery.fn.ready=function(fn){// Add the callback\njQuery.ready.promise().done(fn);return this;};jQuery.extend({// Is the DOM ready to be used? Set to true once it occurs.\nisReady:false,// A counter to track how many items to wait for before\n// the ready event fires. See #6781\nreadyWait:1,// Hold (or release) the ready event\nholdReady:function holdReady(hold){if(hold){jQuery.readyWait++;}else{jQuery.ready(true);}},// Handle when the DOM is ready\nready:function ready(wait){// Abort if there are pending holds or we're already ready\nif(wait===true?--jQuery.readyWait:jQuery.isReady){return;}// Remember that the DOM is ready\njQuery.isReady=true;// If a normal DOM Ready event fired, decrement, and wait if need be\nif(wait!==true&&--jQuery.readyWait>0){return;}// If there are functions bound, to execute\nreadyList.resolveWith(document,[jQuery]);// Trigger any bound ready events\nif(jQuery.fn.triggerHandler){jQuery(document).triggerHandler(\"ready\");jQuery(document).off(\"ready\");}}});/**\n * The ready event handler and self cleanup method\n */function completed(){document.removeEventListener(\"DOMContentLoaded\",completed);window.removeEventListener(\"load\",completed);jQuery.ready();}jQuery.ready.promise=function(obj){if(!readyList){readyList=jQuery.Deferred();// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE9-10 only\n// Older IE sometimes signals \"interactive\" too soon\nif(document.readyState===\"complete\"||document.readyState!==\"loading\"&&!document.documentElement.doScroll){// Handle it asynchronously to allow scripts the opportunity to delay ready\nwindow.setTimeout(jQuery.ready);}else{// Use the handy event callback\ndocument.addEventListener(\"DOMContentLoaded\",completed);// A fallback to window.onload, that will always work\nwindow.addEventListener(\"load\",completed);}}return readyList.promise(obj);};// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access=function access(elems,fn,key,value,chainable,emptyGet,raw){var i=0,len=elems.length,bulk=key==null;// Sets many values\nif(jQuery.type(key)===\"object\"){chainable=true;for(i in key){access(elems,fn,i,key[i],true,emptyGet,raw);}// Sets one value\n}else if(value!==undefined){chainable=true;if(!jQuery.isFunction(value)){raw=true;}if(bulk){// Bulk operations run against the entire set\nif(raw){fn.call(elems,value);fn=null;// ...except when executing function values\n}else{bulk=fn;fn=function fn(elem,key,value){return bulk.call(jQuery(elem),value);};}}if(fn){for(;i<len;i++){fn(elems[i],key,raw?value:value.call(elems[i],i,fn(elems[i],key)));}}}return chainable?elems:// Gets\nbulk?fn.call(elems):len?fn(elems[0],key):emptyGet;};var acceptData=function acceptData(owner){// Accepts only:\n//  - Node\n//    - Node.ELEMENT_NODE\n//    - Node.DOCUMENT_NODE\n//  - Object\n//    - Any\n/* jshint -W018 */return owner.nodeType===1||owner.nodeType===9||!+owner.nodeType;};function Data(){this.expando=jQuery.expando+Data.uid++;}Data.uid=1;Data.prototype={register:function register(owner,initial){var value=initial||{};// If it is a node unlikely to be stringify-ed or looped over\n// use plain assignment\nif(owner.nodeType){owner[this.expando]=value;// Otherwise secure it in a non-enumerable, non-writable property\n// configurability must be true to allow the property to be\n// deleted with the delete operator\n}else{Object.defineProperty(owner,this.expando,{value:value,writable:true,configurable:true});}return owner[this.expando];},cache:function cache(owner){// We can accept data for non-element nodes in modern browsers,\n// but we should not, see #8335.\n// Always return an empty object.\nif(!acceptData(owner)){return{};}// Check if the owner object already has a cache\nvar value=owner[this.expando];// If not, create one\nif(!value){value={};// We can accept data for non-element nodes in modern browsers,\n// but we should not, see #8335.\n// Always return an empty object.\nif(acceptData(owner)){// If it is a node unlikely to be stringify-ed or looped over\n// use plain assignment\nif(owner.nodeType){owner[this.expando]=value;// Otherwise secure it in a non-enumerable property\n// configurable must be true to allow the property to be\n// deleted when data is removed\n}else{Object.defineProperty(owner,this.expando,{value:value,configurable:true});}}}return value;},set:function set(owner,data,value){var prop,cache=this.cache(owner);// Handle: [ owner, key, value ] args\nif(typeof data===\"string\"){cache[data]=value;// Handle: [ owner, { properties } ] args\n}else{// Copy the properties one-by-one to the cache object\nfor(prop in data){cache[prop]=data[prop];}}return cache;},get:function get(owner,key){return key===undefined?this.cache(owner):owner[this.expando]&&owner[this.expando][key];},access:function access(owner,key,value){var stored;// In cases where either:\n//\n//   1. No key was specified\n//   2. A string key was specified, but no value provided\n//\n// Take the \"read\" path and allow the get method to determine\n// which value to return, respectively either:\n//\n//   1. The entire cache object\n//   2. The data stored at the key\n//\nif(key===undefined||key&&typeof key===\"string\"&&value===undefined){stored=this.get(owner,key);return stored!==undefined?stored:this.get(owner,jQuery.camelCase(key));}// When the key is not a string, or both a key and value\n// are specified, set or extend (existing objects) with either:\n//\n//   1. An object of properties\n//   2. A key and value\n//\nthis.set(owner,key,value);// Since the \"set\" path can have two possible entry points\n// return the expected data based on which path was taken[*]\nreturn value!==undefined?value:key;},remove:function remove(owner,key){var i,name,camel,cache=owner[this.expando];if(cache===undefined){return;}if(key===undefined){this.register(owner);}else{// Support array or space separated string of keys\nif(jQuery.isArray(key)){// If \"name\" is an array of keys...\n// When data is initially created, via (\"key\", \"val\") signature,\n// keys will be converted to camelCase.\n// Since there is no way to tell _how_ a key was added, remove\n// both plain key and camelCase key. #12786\n// This will only penalize the array argument path.\nname=key.concat(key.map(jQuery.camelCase));}else{camel=jQuery.camelCase(key);// Try the string as a key before any manipulation\nif(key in cache){name=[key,camel];}else{// If a key with the spaces exists, use it.\n// Otherwise, create an array by matching non-whitespace\nname=camel;name=name in cache?[name]:name.match(rnotwhite)||[];}}i=name.length;while(i--){delete cache[name[i]];}}// Remove the expando if there's no more data\nif(key===undefined||jQuery.isEmptyObject(cache)){// Support: Chrome <= 35-45+\n// Webkit & Blink performance suffers when deleting properties\n// from DOM nodes, so set to undefined instead\n// https://code.google.com/p/chromium/issues/detail?id=378607\nif(owner.nodeType){owner[this.expando]=undefined;}else{delete owner[this.expando];}}},hasData:function hasData(owner){var cache=owner[this.expando];return cache!==undefined&&!jQuery.isEmptyObject(cache);}};var dataPriv=new Data();var dataUser=new Data();//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\nvar rbrace=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,rmultiDash=/[A-Z]/g;function dataAttr(elem,key,data){var name;// If nothing was found internally, try to fetch any\n// data from the HTML5 data-* attribute\nif(data===undefined&&elem.nodeType===1){name=\"data-\"+key.replace(rmultiDash,\"-$&\").toLowerCase();data=elem.getAttribute(name);if(typeof data===\"string\"){try{data=data===\"true\"?true:data===\"false\"?false:data===\"null\"?null:// Only convert to a number if it doesn't change the string\n+data+\"\"===data?+data:rbrace.test(data)?jQuery.parseJSON(data):data;}catch(e){}// Make sure we set the data so it isn't changed later\ndataUser.set(elem,key,data);}else{data=undefined;}}return data;}jQuery.extend({hasData:function hasData(elem){return dataUser.hasData(elem)||dataPriv.hasData(elem);},data:function data(elem,name,_data){return dataUser.access(elem,name,_data);},removeData:function removeData(elem,name){dataUser.remove(elem,name);},// TODO: Now that all calls to _data and _removeData have been replaced\n// with direct calls to dataPriv methods, these can be deprecated.\n_data:function _data(elem,name,data){return dataPriv.access(elem,name,data);},_removeData:function _removeData(elem,name){dataPriv.remove(elem,name);}});jQuery.fn.extend({data:function data(key,value){var i,name,data,elem=this[0],attrs=elem&&elem.attributes;// Gets all values\nif(key===undefined){if(this.length){data=dataUser.get(elem);if(elem.nodeType===1&&!dataPriv.get(elem,\"hasDataAttrs\")){i=attrs.length;while(i--){// Support: IE11+\n// The attrs elements can be null (#14894)\nif(attrs[i]){name=attrs[i].name;if(name.indexOf(\"data-\")===0){name=jQuery.camelCase(name.slice(5));dataAttr(elem,name,data[name]);}}}dataPriv.set(elem,\"hasDataAttrs\",true);}}return data;}// Sets multiple values\nif((typeof key===\"undefined\"?\"undefined\":_typeof(key))===\"object\"){return this.each(function(){dataUser.set(this,key);});}return access(this,function(value){var data,camelKey;// The calling jQuery object (element matches) is not empty\n// (and therefore has an element appears at this[ 0 ]) and the\n// `value` parameter was not undefined. An empty jQuery object\n// will result in `undefined` for elem = this[ 0 ] which will\n// throw an exception if an attempt to read a data cache is made.\nif(elem&&value===undefined){// Attempt to get data from the cache\n// with the key as-is\ndata=dataUser.get(elem,key)||// Try to find dashed key if it exists (gh-2779)\n// This is for 2.2.x only\ndataUser.get(elem,key.replace(rmultiDash,\"-$&\").toLowerCase());if(data!==undefined){return data;}camelKey=jQuery.camelCase(key);// Attempt to get data from the cache\n// with the key camelized\ndata=dataUser.get(elem,camelKey);if(data!==undefined){return data;}// Attempt to \"discover\" the data in\n// HTML5 custom data-* attrs\ndata=dataAttr(elem,camelKey,undefined);if(data!==undefined){return data;}// We tried really hard, but the data doesn't exist.\nreturn;}// Set the data...\ncamelKey=jQuery.camelCase(key);this.each(function(){// First, attempt to store a copy or reference of any\n// data that might've been store with a camelCased key.\nvar data=dataUser.get(this,camelKey);// For HTML5 data-* attribute interop, we have to\n// store property names with dashes in a camelCase form.\n// This might not apply to all properties...*\ndataUser.set(this,camelKey,value);// *... In the case of properties that might _actually_\n// have dashes, we need to also store a copy of that\n// unchanged property.\nif(key.indexOf(\"-\")>-1&&data!==undefined){dataUser.set(this,key,value);}});},null,value,arguments.length>1,null,true);},removeData:function removeData(key){return this.each(function(){dataUser.remove(this,key);});}});jQuery.extend({queue:function queue(elem,type,data){var queue;if(elem){type=(type||\"fx\")+\"queue\";queue=dataPriv.get(elem,type);// Speed up dequeue by getting out quickly if this is just a lookup\nif(data){if(!queue||jQuery.isArray(data)){queue=dataPriv.access(elem,type,jQuery.makeArray(data));}else{queue.push(data);}}return queue||[];}},dequeue:function dequeue(elem,type){type=type||\"fx\";var queue=jQuery.queue(elem,type),startLength=queue.length,fn=queue.shift(),hooks=jQuery._queueHooks(elem,type),next=function next(){jQuery.dequeue(elem,type);};// If the fx queue is dequeued, always remove the progress sentinel\nif(fn===\"inprogress\"){fn=queue.shift();startLength--;}if(fn){// Add a progress sentinel to prevent the fx queue from being\n// automatically dequeued\nif(type===\"fx\"){queue.unshift(\"inprogress\");}// Clear up the last queue stop function\ndelete hooks.stop;fn.call(elem,next,hooks);}if(!startLength&&hooks){hooks.empty.fire();}},// Not public - generate a queueHooks object, or return the current one\n_queueHooks:function _queueHooks(elem,type){var key=type+\"queueHooks\";return dataPriv.get(elem,key)||dataPriv.access(elem,key,{empty:jQuery.Callbacks(\"once memory\").add(function(){dataPriv.remove(elem,[type+\"queue\",key]);})});}});jQuery.fn.extend({queue:function queue(type,data){var setter=2;if(typeof type!==\"string\"){data=type;type=\"fx\";setter--;}if(arguments.length<setter){return jQuery.queue(this[0],type);}return data===undefined?this:this.each(function(){var queue=jQuery.queue(this,type,data);// Ensure a hooks for this queue\njQuery._queueHooks(this,type);if(type===\"fx\"&&queue[0]!==\"inprogress\"){jQuery.dequeue(this,type);}});},dequeue:function dequeue(type){return this.each(function(){jQuery.dequeue(this,type);});},clearQueue:function clearQueue(type){return this.queue(type||\"fx\",[]);},// Get a promise resolved when queues of a certain type\n// are emptied (fx is the type by default)\npromise:function promise(type,obj){var tmp,count=1,defer=jQuery.Deferred(),elements=this,i=this.length,resolve=function resolve(){if(! --count){defer.resolveWith(elements,[elements]);}};if(typeof type!==\"string\"){obj=type;type=undefined;}type=type||\"fx\";while(i--){tmp=dataPriv.get(elements[i],type+\"queueHooks\");if(tmp&&tmp.empty){count++;tmp.empty.add(resolve);}}resolve();return defer.promise(obj);}});var pnum=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;var rcssNum=new RegExp(\"^(?:([+-])=|)(\"+pnum+\")([a-z%]*)$\",\"i\");var cssExpand=[\"Top\",\"Right\",\"Bottom\",\"Left\"];var isHidden=function isHidden(elem,el){// isHidden might be called from jQuery#filter function;\n// in that case, element will be second argument\nelem=el||elem;return jQuery.css(elem,\"display\")===\"none\"||!jQuery.contains(elem.ownerDocument,elem);};function adjustCSS(elem,prop,valueParts,tween){var adjusted,scale=1,maxIterations=20,currentValue=tween?function(){return tween.cur();}:function(){return jQuery.css(elem,prop,\"\");},initial=currentValue(),unit=valueParts&&valueParts[3]||(jQuery.cssNumber[prop]?\"\":\"px\"),// Starting value computation is required for potential unit mismatches\ninitialInUnit=(jQuery.cssNumber[prop]||unit!==\"px\"&&+initial)&&rcssNum.exec(jQuery.css(elem,prop));if(initialInUnit&&initialInUnit[3]!==unit){// Trust units reported by jQuery.css\nunit=unit||initialInUnit[3];// Make sure we update the tween properties later on\nvalueParts=valueParts||[];// Iteratively approximate from a nonzero starting point\ninitialInUnit=+initial||1;do{// If previous iteration zeroed out, double until we get *something*.\n// Use string for doubling so we don't accidentally see scale as unchanged below\nscale=scale||\".5\";// Adjust and apply\ninitialInUnit=initialInUnit/scale;jQuery.style(elem,prop,initialInUnit+unit);// Update scale, tolerating zero or NaN from tween.cur()\n// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n}while(scale!==(scale=currentValue()/initial)&&scale!==1&&--maxIterations);}if(valueParts){initialInUnit=+initialInUnit||+initial||0;// Apply relative offset (+=/-=) if specified\nadjusted=valueParts[1]?initialInUnit+(valueParts[1]+1)*valueParts[2]:+valueParts[2];if(tween){tween.unit=unit;tween.start=initialInUnit;tween.end=adjusted;}}return adjusted;}var rcheckableType=/^(?:checkbox|radio)$/i;var rtagName=/<([\\w:-]+)/;var rscriptType=/^$|\\/(?:java|ecma)script/i;// We have to close these tags to support XHTML (#13200)\nvar wrapMap={// Support: IE9\noption:[1,\"<select multiple='multiple'>\",\"</select>\"],// XHTML parsers do not magically insert elements in the\n// same way that tag soup parsers do. So we cannot shorten\n// this by omitting <tbody> or other required elements.\nthead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};// Support: IE9\nwrapMap.optgroup=wrapMap.option;wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead;wrapMap.th=wrapMap.td;function getAll(context,tag){// Support: IE9-11+\n// Use typeof to avoid zero-argument method invocation on host objects (#15151)\nvar ret=typeof context.getElementsByTagName!==\"undefined\"?context.getElementsByTagName(tag||\"*\"):typeof context.querySelectorAll!==\"undefined\"?context.querySelectorAll(tag||\"*\"):[];return tag===undefined||tag&&jQuery.nodeName(context,tag)?jQuery.merge([context],ret):ret;}// Mark scripts as having already been evaluated\nfunction setGlobalEval(elems,refElements){var i=0,l=elems.length;for(;i<l;i++){dataPriv.set(elems[i],\"globalEval\",!refElements||dataPriv.get(refElements[i],\"globalEval\"));}}var rhtml=/<|&#?\\w+;/;function buildFragment(elems,context,scripts,selection,ignored){var elem,tmp,tag,wrap,contains,j,fragment=context.createDocumentFragment(),nodes=[],i=0,l=elems.length;for(;i<l;i++){elem=elems[i];if(elem||elem===0){// Add nodes directly\nif(jQuery.type(elem)===\"object\"){// Support: Android<4.1, PhantomJS<2\n// push.apply(_, arraylike) throws on ancient WebKit\njQuery.merge(nodes,elem.nodeType?[elem]:elem);// Convert non-html into a text node\n}else if(!rhtml.test(elem)){nodes.push(context.createTextNode(elem));// Convert html into DOM nodes\n}else{tmp=tmp||fragment.appendChild(context.createElement(\"div\"));// Deserialize a standard representation\ntag=(rtagName.exec(elem)||[\"\",\"\"])[1].toLowerCase();wrap=wrapMap[tag]||wrapMap._default;tmp.innerHTML=wrap[1]+jQuery.htmlPrefilter(elem)+wrap[2];// Descend through wrappers to the right content\nj=wrap[0];while(j--){tmp=tmp.lastChild;}// Support: Android<4.1, PhantomJS<2\n// push.apply(_, arraylike) throws on ancient WebKit\njQuery.merge(nodes,tmp.childNodes);// Remember the top-level container\ntmp=fragment.firstChild;// Ensure the created nodes are orphaned (#12392)\ntmp.textContent=\"\";}}}// Remove wrapper from fragment\nfragment.textContent=\"\";i=0;while(elem=nodes[i++]){// Skip elements already in the context collection (trac-4087)\nif(selection&&jQuery.inArray(elem,selection)>-1){if(ignored){ignored.push(elem);}continue;}contains=jQuery.contains(elem.ownerDocument,elem);// Append to fragment\ntmp=getAll(fragment.appendChild(elem),\"script\");// Preserve script evaluation history\nif(contains){setGlobalEval(tmp);}// Capture executables\nif(scripts){j=0;while(elem=tmp[j++]){if(rscriptType.test(elem.type||\"\")){scripts.push(elem);}}}}return fragment;}(function(){var fragment=document.createDocumentFragment(),div=fragment.appendChild(document.createElement(\"div\")),input=document.createElement(\"input\");// Support: Android 4.0-4.3, Safari<=5.1\n// Check state lost if the name is set (#11217)\n// Support: Windows Web Apps (WWA)\n// `name` and `type` must use .setAttribute for WWA (#14901)\ninput.setAttribute(\"type\",\"radio\");input.setAttribute(\"checked\",\"checked\");input.setAttribute(\"name\",\"t\");div.appendChild(input);// Support: Safari<=5.1, Android<4.2\n// Older WebKit doesn't clone checked state correctly in fragments\nsupport.checkClone=div.cloneNode(true).cloneNode(true).lastChild.checked;// Support: IE<=11+\n// Make sure textarea (and checkbox) defaultValue is properly cloned\ndiv.innerHTML=\"<textarea>x</textarea>\";support.noCloneChecked=!!div.cloneNode(true).lastChild.defaultValue;})();var rkeyEvent=/^key/,rmouseEvent=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,rtypenamespace=/^([^.]*)(?:\\.(.+)|)/;function returnTrue(){return true;}function returnFalse(){return false;}// Support: IE9\n// See #13393 for more info\nfunction safeActiveElement(){try{return document.activeElement;}catch(err){}}function _on(elem,types,selector,data,fn,one){var origFn,type;// Types can be a map of types/handlers\nif((typeof types===\"undefined\"?\"undefined\":_typeof(types))===\"object\"){// ( types-Object, selector, data )\nif(typeof selector!==\"string\"){// ( types-Object, data )\ndata=data||selector;selector=undefined;}for(type in types){_on(elem,type,selector,data,types[type],one);}return elem;}if(data==null&&fn==null){// ( types, fn )\nfn=selector;data=selector=undefined;}else if(fn==null){if(typeof selector===\"string\"){// ( types, selector, fn )\nfn=data;data=undefined;}else{// ( types, data, fn )\nfn=data;data=selector;selector=undefined;}}if(fn===false){fn=returnFalse;}else if(!fn){return elem;}if(one===1){origFn=fn;fn=function fn(event){// Can use an empty set, since event contains the info\njQuery().off(event);return origFn.apply(this,arguments);};// Use same guid so caller can remove using origFn\nfn.guid=origFn.guid||(origFn.guid=jQuery.guid++);}return elem.each(function(){jQuery.event.add(this,types,fn,data,selector);});}/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */jQuery.event={global:{},add:function add(elem,types,handler,data,selector){var handleObjIn,eventHandle,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.get(elem);// Don't attach events to noData or text/comment nodes (but allow plain objects)\nif(!elemData){return;}// Caller can pass in an object of custom data in lieu of the handler\nif(handler.handler){handleObjIn=handler;handler=handleObjIn.handler;selector=handleObjIn.selector;}// Make sure that the handler has a unique ID, used to find/remove it later\nif(!handler.guid){handler.guid=jQuery.guid++;}// Init the element's event structure and main handler, if this is the first\nif(!(events=elemData.events)){events=elemData.events={};}if(!(eventHandle=elemData.handle)){eventHandle=elemData.handle=function(e){// Discard the second event of a jQuery.event.trigger() and\n// when an event is called after a page has unloaded\nreturn typeof jQuery!==\"undefined\"&&jQuery.event.triggered!==e.type?jQuery.event.dispatch.apply(elem,arguments):undefined;};}// Handle multiple events separated by a space\ntypes=(types||\"\").match(rnotwhite)||[\"\"];t=types.length;while(t--){tmp=rtypenamespace.exec(types[t])||[];type=origType=tmp[1];namespaces=(tmp[2]||\"\").split(\".\").sort();// There *must* be a type, no attaching namespace-only handlers\nif(!type){continue;}// If event changes its type, use the special event handlers for the changed type\nspecial=jQuery.event.special[type]||{};// If selector defined, determine special event api type, otherwise given type\ntype=(selector?special.delegateType:special.bindType)||type;// Update special based on newly reset type\nspecial=jQuery.event.special[type]||{};// handleObj is passed to all event handlers\nhandleObj=jQuery.extend({type:type,origType:origType,data:data,handler:handler,guid:handler.guid,selector:selector,needsContext:selector&&jQuery.expr.match.needsContext.test(selector),namespace:namespaces.join(\".\")},handleObjIn);// Init the event handler queue if we're the first\nif(!(handlers=events[type])){handlers=events[type]=[];handlers.delegateCount=0;// Only use addEventListener if the special events handler returns false\nif(!special.setup||special.setup.call(elem,data,namespaces,eventHandle)===false){if(elem.addEventListener){elem.addEventListener(type,eventHandle);}}}if(special.add){special.add.call(elem,handleObj);if(!handleObj.handler.guid){handleObj.handler.guid=handler.guid;}}// Add to the element's handler list, delegates in front\nif(selector){handlers.splice(handlers.delegateCount++,0,handleObj);}else{handlers.push(handleObj);}// Keep track of which events have ever been used, for event optimization\njQuery.event.global[type]=true;}},// Detach an event or set of events from an element\nremove:function remove(elem,types,handler,selector,mappedTypes){var j,origCount,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.hasData(elem)&&dataPriv.get(elem);if(!elemData||!(events=elemData.events)){return;}// Once for each type.namespace in types; type may be omitted\ntypes=(types||\"\").match(rnotwhite)||[\"\"];t=types.length;while(t--){tmp=rtypenamespace.exec(types[t])||[];type=origType=tmp[1];namespaces=(tmp[2]||\"\").split(\".\").sort();// Unbind all events (on this namespace, if provided) for the element\nif(!type){for(type in events){jQuery.event.remove(elem,type+types[t],handler,selector,true);}continue;}special=jQuery.event.special[type]||{};type=(selector?special.delegateType:special.bindType)||type;handlers=events[type]||[];tmp=tmp[2]&&new RegExp(\"(^|\\\\.)\"+namespaces.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\");// Remove matching events\norigCount=j=handlers.length;while(j--){handleObj=handlers[j];if((mappedTypes||origType===handleObj.origType)&&(!handler||handler.guid===handleObj.guid)&&(!tmp||tmp.test(handleObj.namespace))&&(!selector||selector===handleObj.selector||selector===\"**\"&&handleObj.selector)){handlers.splice(j,1);if(handleObj.selector){handlers.delegateCount--;}if(special.remove){special.remove.call(elem,handleObj);}}}// Remove generic event handler if we removed something and no more handlers exist\n// (avoids potential for endless recursion during removal of special event handlers)\nif(origCount&&!handlers.length){if(!special.teardown||special.teardown.call(elem,namespaces,elemData.handle)===false){jQuery.removeEvent(elem,type,elemData.handle);}delete events[type];}}// Remove data and the expando if it's no longer used\nif(jQuery.isEmptyObject(events)){dataPriv.remove(elem,\"handle events\");}},dispatch:function dispatch(event){// Make a writable jQuery.Event from the native event object\nevent=jQuery.event.fix(event);var i,j,ret,matched,handleObj,handlerQueue=[],args=_slice.call(arguments),handlers=(dataPriv.get(this,\"events\")||{})[event.type]||[],special=jQuery.event.special[event.type]||{};// Use the fix-ed jQuery.Event rather than the (read-only) native event\nargs[0]=event;event.delegateTarget=this;// Call the preDispatch hook for the mapped type, and let it bail if desired\nif(special.preDispatch&&special.preDispatch.call(this,event)===false){return;}// Determine handlers\nhandlerQueue=jQuery.event.handlers.call(this,event,handlers);// Run delegates first; they may want to stop propagation beneath us\ni=0;while((matched=handlerQueue[i++])&&!event.isPropagationStopped()){event.currentTarget=matched.elem;j=0;while((handleObj=matched.handlers[j++])&&!event.isImmediatePropagationStopped()){// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n// a subset or equal to those in the bound event (both can have no namespace).\nif(!event.rnamespace||event.rnamespace.test(handleObj.namespace)){event.handleObj=handleObj;event.data=handleObj.data;ret=((jQuery.event.special[handleObj.origType]||{}).handle||handleObj.handler).apply(matched.elem,args);if(ret!==undefined){if((event.result=ret)===false){event.preventDefault();event.stopPropagation();}}}}}// Call the postDispatch hook for the mapped type\nif(special.postDispatch){special.postDispatch.call(this,event);}return event.result;},handlers:function handlers(event,_handlers){var i,matches,sel,handleObj,handlerQueue=[],delegateCount=_handlers.delegateCount,cur=event.target;// Support (at least): Chrome, IE9\n// Find delegate handlers\n// Black-hole SVG <use> instance trees (#13180)\n//\n// Support: Firefox<=42+\n// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\nif(delegateCount&&cur.nodeType&&(event.type!==\"click\"||isNaN(event.button)||event.button<1)){for(;cur!==this;cur=cur.parentNode||this){// Don't check non-elements (#13208)\n// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\nif(cur.nodeType===1&&(cur.disabled!==true||event.type!==\"click\")){matches=[];for(i=0;i<delegateCount;i++){handleObj=_handlers[i];// Don't conflict with Object.prototype properties (#13203)\nsel=handleObj.selector+\" \";if(matches[sel]===undefined){matches[sel]=handleObj.needsContext?jQuery(sel,this).index(cur)>-1:jQuery.find(sel,this,null,[cur]).length;}if(matches[sel]){matches.push(handleObj);}}if(matches.length){handlerQueue.push({elem:cur,handlers:matches});}}}}// Add the remaining (directly-bound) handlers\nif(delegateCount<_handlers.length){handlerQueue.push({elem:this,handlers:_handlers.slice(delegateCount)});}return handlerQueue;},// Includes some event props shared by KeyEvent and MouseEvent\nprops:(\"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \"+\"metaKey relatedTarget shiftKey target timeStamp view which\").split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function filter(event,original){// Add which for key events\nif(event.which==null){event.which=original.charCode!=null?original.charCode:original.keyCode;}return event;}},mouseHooks:{props:(\"button buttons clientX clientY offsetX offsetY pageX pageY \"+\"screenX screenY toElement\").split(\" \"),filter:function filter(event,original){var eventDoc,doc,body,button=original.button;// Calculate pageX/Y if missing and clientX/Y available\nif(event.pageX==null&&original.clientX!=null){eventDoc=event.target.ownerDocument||document;doc=eventDoc.documentElement;body=eventDoc.body;event.pageX=original.clientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-(doc&&doc.clientLeft||body&&body.clientLeft||0);event.pageY=original.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||0)-(doc&&doc.clientTop||body&&body.clientTop||0);}// Add which for click: 1 === left; 2 === middle; 3 === right\n// Note: button is not normalized, so don't use it\nif(!event.which&&button!==undefined){event.which=button&1?1:button&2?3:button&4?2:0;}return event;}},fix:function fix(event){if(event[jQuery.expando]){return event;}// Create a writable copy of the event object and normalize some properties\nvar i,prop,copy,type=event.type,originalEvent=event,fixHook=this.fixHooks[type];if(!fixHook){this.fixHooks[type]=fixHook=rmouseEvent.test(type)?this.mouseHooks:rkeyEvent.test(type)?this.keyHooks:{};}copy=fixHook.props?this.props.concat(fixHook.props):this.props;event=new jQuery.Event(originalEvent);i=copy.length;while(i--){prop=copy[i];event[prop]=originalEvent[prop];}// Support: Cordova 2.5 (WebKit) (#13255)\n// All events should have a target; Cordova deviceready doesn't\nif(!event.target){event.target=document;}// Support: Safari 6.0+, Chrome<28\n// Target should not be a text node (#504, #13143)\nif(event.target.nodeType===3){event.target=event.target.parentNode;}return fixHook.filter?fixHook.filter(event,originalEvent):event;},special:{load:{// Prevent triggered image.load events from bubbling to window.load\nnoBubble:true},focus:{// Fire native event if possible so blur/focus sequence is correct\ntrigger:function trigger(){if(this!==safeActiveElement()&&this.focus){this.focus();return false;}},delegateType:\"focusin\"},blur:{trigger:function trigger(){if(this===safeActiveElement()&&this.blur){this.blur();return false;}},delegateType:\"focusout\"},click:{// For checkbox, fire native event so checked state will be right\ntrigger:function trigger(){if(this.type===\"checkbox\"&&this.click&&jQuery.nodeName(this,\"input\")){this.click();return false;}},// For cross-browser consistency, don't fire native .click() on links\n_default:function _default(event){return jQuery.nodeName(event.target,\"a\");}},beforeunload:{postDispatch:function postDispatch(event){// Support: Firefox 20+\n// Firefox doesn't alert if the returnValue field is not set.\nif(event.result!==undefined&&event.originalEvent){event.originalEvent.returnValue=event.result;}}}}};jQuery.removeEvent=function(elem,type,handle){// This \"if\" is needed for plain objects\nif(elem.removeEventListener){elem.removeEventListener(type,handle);}};jQuery.Event=function(src,props){// Allow instantiation without the 'new' keyword\nif(!(this instanceof jQuery.Event)){return new jQuery.Event(src,props);}// Event object\nif(src&&src.type){this.originalEvent=src;this.type=src.type;// Events bubbling up the document may have been marked as prevented\n// by a handler lower down the tree; reflect the correct value.\nthis.isDefaultPrevented=src.defaultPrevented||src.defaultPrevented===undefined&&// Support: Android<4.0\nsrc.returnValue===false?returnTrue:returnFalse;// Event type\n}else{this.type=src;}// Put explicitly provided properties onto the event object\nif(props){jQuery.extend(this,props);}// Create a timestamp if incoming event doesn't have one\nthis.timeStamp=src&&src.timeStamp||jQuery.now();// Mark it as fixed\nthis[jQuery.expando]=true;};// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype={constructor:jQuery.Event,isDefaultPrevented:returnFalse,isPropagationStopped:returnFalse,isImmediatePropagationStopped:returnFalse,preventDefault:function preventDefault(){var e=this.originalEvent;this.isDefaultPrevented=returnTrue;if(e){e.preventDefault();}},stopPropagation:function stopPropagation(){var e=this.originalEvent;this.isPropagationStopped=returnTrue;if(e){e.stopPropagation();}},stopImmediatePropagation:function stopImmediatePropagation(){var e=this.originalEvent;this.isImmediatePropagationStopped=returnTrue;if(e){e.stopImmediatePropagation();}this.stopPropagation();}};// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://code.google.com/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(orig,fix){jQuery.event.special[orig]={delegateType:fix,bindType:fix,handle:function handle(event){var ret,target=this,related=event.relatedTarget,handleObj=event.handleObj;// For mouseenter/leave call the handler if related is outside the target.\n// NB: No relatedTarget if the mouse left/entered the browser window\nif(!related||related!==target&&!jQuery.contains(target,related)){event.type=handleObj.origType;ret=handleObj.handler.apply(this,arguments);event.type=fix;}return ret;}};});jQuery.fn.extend({on:function on(types,selector,data,fn){return _on(this,types,selector,data,fn);},one:function one(types,selector,data,fn){return _on(this,types,selector,data,fn,1);},off:function off(types,selector,fn){var handleObj,type;if(types&&types.preventDefault&&types.handleObj){// ( event )  dispatched jQuery.Event\nhandleObj=types.handleObj;jQuery(types.delegateTarget).off(handleObj.namespace?handleObj.origType+\".\"+handleObj.namespace:handleObj.origType,handleObj.selector,handleObj.handler);return this;}if((typeof types===\"undefined\"?\"undefined\":_typeof(types))===\"object\"){// ( types-object [, selector] )\nfor(type in types){this.off(type,selector,types[type]);}return this;}if(selector===false||typeof selector===\"function\"){// ( types [, fn] )\nfn=selector;selector=undefined;}if(fn===false){fn=returnFalse;}return this.each(function(){jQuery.event.remove(this,types,fn,selector);});}});var rxhtmlTag=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,// Support: IE 10-11, Edge 10240+\n// In IE/Edge using regex groups here causes severe slowdowns.\n// See https://connect.microsoft.com/IE/feedback/details/1736512/\nrnoInnerhtml=/<script|<style|<link/i,// checked=\"checked\" or checked\nrchecked=/checked\\s*(?:[^=]|=\\s*.checked.)/i,rscriptTypeMasked=/^true\\/(.*)/,rcleanScript=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;// Manipulating tables requires a tbody\nfunction manipulationTarget(elem,content){return jQuery.nodeName(elem,\"table\")&&jQuery.nodeName(content.nodeType!==11?content:content.firstChild,\"tr\")?elem.getElementsByTagName(\"tbody\")[0]||elem.appendChild(elem.ownerDocument.createElement(\"tbody\")):elem;}// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript(elem){elem.type=(elem.getAttribute(\"type\")!==null)+\"/\"+elem.type;return elem;}function restoreScript(elem){var match=rscriptTypeMasked.exec(elem.type);if(match){elem.type=match[1];}else{elem.removeAttribute(\"type\");}return elem;}function cloneCopyEvent(src,dest){var i,l,type,pdataOld,pdataCur,udataOld,udataCur,events;if(dest.nodeType!==1){return;}// 1. Copy private data: events, handlers, etc.\nif(dataPriv.hasData(src)){pdataOld=dataPriv.access(src);pdataCur=dataPriv.set(dest,pdataOld);events=pdataOld.events;if(events){delete pdataCur.handle;pdataCur.events={};for(type in events){for(i=0,l=events[type].length;i<l;i++){jQuery.event.add(dest,type,events[type][i]);}}}}// 2. Copy user data\nif(dataUser.hasData(src)){udataOld=dataUser.access(src);udataCur=jQuery.extend({},udataOld);dataUser.set(dest,udataCur);}}// Fix IE bugs, see support tests\nfunction fixInput(src,dest){var nodeName=dest.nodeName.toLowerCase();// Fails to persist the checked state of a cloned checkbox or radio button.\nif(nodeName===\"input\"&&rcheckableType.test(src.type)){dest.checked=src.checked;// Fails to return the selected option to the default selected state when cloning options\n}else if(nodeName===\"input\"||nodeName===\"textarea\"){dest.defaultValue=src.defaultValue;}}function domManip(collection,args,callback,ignored){// Flatten any nested arrays\nargs=concat.apply([],args);var fragment,first,scripts,hasScripts,node,doc,i=0,l=collection.length,iNoClone=l-1,value=args[0],isFunction=jQuery.isFunction(value);// We can't cloneNode fragments that contain checked, in WebKit\nif(isFunction||l>1&&typeof value===\"string\"&&!support.checkClone&&rchecked.test(value)){return collection.each(function(index){var self=collection.eq(index);if(isFunction){args[0]=value.call(this,index,self.html());}domManip(self,args,callback,ignored);});}if(l){fragment=buildFragment(args,collection[0].ownerDocument,false,collection,ignored);first=fragment.firstChild;if(fragment.childNodes.length===1){fragment=first;}// Require either new content or an interest in ignored elements to invoke the callback\nif(first||ignored){scripts=jQuery.map(getAll(fragment,\"script\"),disableScript);hasScripts=scripts.length;// Use the original fragment for the last item\n// instead of the first because it can end up\n// being emptied incorrectly in certain situations (#8070).\nfor(;i<l;i++){node=fragment;if(i!==iNoClone){node=jQuery.clone(node,true,true);// Keep references to cloned scripts for later restoration\nif(hasScripts){// Support: Android<4.1, PhantomJS<2\n// push.apply(_, arraylike) throws on ancient WebKit\njQuery.merge(scripts,getAll(node,\"script\"));}}callback.call(collection[i],node,i);}if(hasScripts){doc=scripts[scripts.length-1].ownerDocument;// Reenable scripts\njQuery.map(scripts,restoreScript);// Evaluate executable scripts on first document insertion\nfor(i=0;i<hasScripts;i++){node=scripts[i];if(rscriptType.test(node.type||\"\")&&!dataPriv.access(node,\"globalEval\")&&jQuery.contains(doc,node)){if(node.src){// Optional AJAX dependency, but won't run scripts if not present\nif(jQuery._evalUrl){jQuery._evalUrl(node.src);}}else{jQuery.globalEval(node.textContent.replace(rcleanScript,\"\"));}}}}}}return collection;}function _remove(elem,selector,keepData){var node,nodes=selector?jQuery.filter(selector,elem):elem,i=0;for(;(node=nodes[i])!=null;i++){if(!keepData&&node.nodeType===1){jQuery.cleanData(getAll(node));}if(node.parentNode){if(keepData&&jQuery.contains(node.ownerDocument,node)){setGlobalEval(getAll(node,\"script\"));}node.parentNode.removeChild(node);}}return elem;}jQuery.extend({htmlPrefilter:function htmlPrefilter(html){return html.replace(rxhtmlTag,\"<$1></$2>\");},clone:function clone(elem,dataAndEvents,deepDataAndEvents){var i,l,srcElements,destElements,clone=elem.cloneNode(true),inPage=jQuery.contains(elem.ownerDocument,elem);// Fix IE cloning issues\nif(!support.noCloneChecked&&(elem.nodeType===1||elem.nodeType===11)&&!jQuery.isXMLDoc(elem)){// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\ndestElements=getAll(clone);srcElements=getAll(elem);for(i=0,l=srcElements.length;i<l;i++){fixInput(srcElements[i],destElements[i]);}}// Copy the events from the original to the clone\nif(dataAndEvents){if(deepDataAndEvents){srcElements=srcElements||getAll(elem);destElements=destElements||getAll(clone);for(i=0,l=srcElements.length;i<l;i++){cloneCopyEvent(srcElements[i],destElements[i]);}}else{cloneCopyEvent(elem,clone);}}// Preserve script evaluation history\ndestElements=getAll(clone,\"script\");if(destElements.length>0){setGlobalEval(destElements,!inPage&&getAll(elem,\"script\"));}// Return the cloned set\nreturn clone;},cleanData:function cleanData(elems){var data,elem,type,special=jQuery.event.special,i=0;for(;(elem=elems[i])!==undefined;i++){if(acceptData(elem)){if(data=elem[dataPriv.expando]){if(data.events){for(type in data.events){if(special[type]){jQuery.event.remove(elem,type);// This is a shortcut to avoid jQuery.event.remove's overhead\n}else{jQuery.removeEvent(elem,type,data.handle);}}}// Support: Chrome <= 35-45+\n// Assign undefined instead of using delete, see Data#remove\nelem[dataPriv.expando]=undefined;}if(elem[dataUser.expando]){// Support: Chrome <= 35-45+\n// Assign undefined instead of using delete, see Data#remove\nelem[dataUser.expando]=undefined;}}}}});jQuery.fn.extend({// Keep domManip exposed until 3.0 (gh-2225)\ndomManip:domManip,detach:function detach(selector){return _remove(this,selector,true);},remove:function remove(selector){return _remove(this,selector);},text:function text(value){return access(this,function(value){return value===undefined?jQuery.text(this):this.empty().each(function(){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){this.textContent=value;}});},null,value,arguments.length);},append:function append(){return domManip(this,arguments,function(elem){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var target=manipulationTarget(this,elem);target.appendChild(elem);}});},prepend:function prepend(){return domManip(this,arguments,function(elem){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var target=manipulationTarget(this,elem);target.insertBefore(elem,target.firstChild);}});},before:function before(){return domManip(this,arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this);}});},after:function after(){return domManip(this,arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this.nextSibling);}});},empty:function empty(){var elem,i=0;for(;(elem=this[i])!=null;i++){if(elem.nodeType===1){// Prevent memory leaks\njQuery.cleanData(getAll(elem,false));// Remove any remaining nodes\nelem.textContent=\"\";}}return this;},clone:function clone(dataAndEvents,deepDataAndEvents){dataAndEvents=dataAndEvents==null?false:dataAndEvents;deepDataAndEvents=deepDataAndEvents==null?dataAndEvents:deepDataAndEvents;return this.map(function(){return jQuery.clone(this,dataAndEvents,deepDataAndEvents);});},html:function html(value){return access(this,function(value){var elem=this[0]||{},i=0,l=this.length;if(value===undefined&&elem.nodeType===1){return elem.innerHTML;}// See if we can take a shortcut and just use innerHTML\nif(typeof value===\"string\"&&!rnoInnerhtml.test(value)&&!wrapMap[(rtagName.exec(value)||[\"\",\"\"])[1].toLowerCase()]){value=jQuery.htmlPrefilter(value);try{for(;i<l;i++){elem=this[i]||{};// Remove element nodes and prevent memory leaks\nif(elem.nodeType===1){jQuery.cleanData(getAll(elem,false));elem.innerHTML=value;}}elem=0;// If using innerHTML throws an exception, use the fallback method\n}catch(e){}}if(elem){this.empty().append(value);}},null,value,arguments.length);},replaceWith:function replaceWith(){var ignored=[];// Make the changes, replacing each non-ignored context element with the new content\nreturn domManip(this,arguments,function(elem){var parent=this.parentNode;if(jQuery.inArray(this,ignored)<0){jQuery.cleanData(getAll(this));if(parent){parent.replaceChild(elem,this);}}// Force callback invocation\n},ignored);}});jQuery.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(name,original){jQuery.fn[name]=function(selector){var elems,ret=[],insert=jQuery(selector),last=insert.length-1,i=0;for(;i<=last;i++){elems=i===last?this:this.clone(true);jQuery(insert[i])[original](elems);// Support: QtWebKit\n// .get() because push.apply(_, arraylike) throws\npush.apply(ret,elems.get());}return this.pushStack(ret);};});var iframe,elemdisplay={// Support: Firefox\n// We have to pre-define these values for FF (#10227)\nHTML:\"block\",BODY:\"block\"};/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */// Called only from within defaultDisplay\nfunction actualDisplay(name,doc){var elem=jQuery(doc.createElement(name)).appendTo(doc.body),display=jQuery.css(elem[0],\"display\");// We don't have any data stored on the element,\n// so use \"detach\" method as fast way to get rid of the element\nelem.detach();return display;}/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */function defaultDisplay(nodeName){var doc=document,display=elemdisplay[nodeName];if(!display){display=actualDisplay(nodeName,doc);// If the simple way fails, read from inside an iframe\nif(display===\"none\"||!display){// Use the already-created iframe if possible\niframe=(iframe||jQuery(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(doc.documentElement);// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\ndoc=iframe[0].contentDocument;// Support: IE\ndoc.write();doc.close();display=actualDisplay(nodeName,doc);iframe.detach();}// Store the correct default display\nelemdisplay[nodeName]=display;}return display;}var rmargin=/^margin/;var rnumnonpx=new RegExp(\"^(\"+pnum+\")(?!px)[a-z%]+$\",\"i\");var getStyles=function getStyles(elem){// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n// IE throws on elements created in popups\n// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\nvar view=elem.ownerDocument.defaultView;if(!view||!view.opener){view=window;}return view.getComputedStyle(elem);};var swap=function swap(elem,options,callback,args){var ret,name,old={};// Remember the old values, and insert the new ones\nfor(name in options){old[name]=elem.style[name];elem.style[name]=options[name];}ret=callback.apply(elem,args||[]);// Revert the old values\nfor(name in options){elem.style[name]=old[name];}return ret;};var documentElement=document.documentElement;(function(){var pixelPositionVal,boxSizingReliableVal,pixelMarginRightVal,reliableMarginLeftVal,container=document.createElement(\"div\"),div=document.createElement(\"div\");// Finish early in limited (non-browser) environments\nif(!div.style){return;}// Support: IE9-11+\n// Style of cloned element affects source element cloned (#8908)\ndiv.style.backgroundClip=\"content-box\";div.cloneNode(true).style.backgroundClip=\"\";support.clearCloneStyle=div.style.backgroundClip===\"content-box\";container.style.cssText=\"border:0;width:8px;height:0;top:0;left:-9999px;\"+\"padding:0;margin-top:1px;position:absolute\";container.appendChild(div);// Executing both pixelPosition & boxSizingReliable tests require only one layout\n// so they're executed at the same time to save the second computation.\nfunction computeStyleTests(){div.style.cssText=// Support: Firefox<29, Android 2.3\n// Vendor-prefix box-sizing\n\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\"+\"position:relative;display:block;\"+\"margin:auto;border:1px;padding:1px;\"+\"top:1%;width:50%\";div.innerHTML=\"\";documentElement.appendChild(container);var divStyle=window.getComputedStyle(div);pixelPositionVal=divStyle.top!==\"1%\";reliableMarginLeftVal=divStyle.marginLeft===\"2px\";boxSizingReliableVal=divStyle.width===\"4px\";// Support: Android 4.0 - 4.3 only\n// Some styles come back with percentage values, even though they shouldn't\ndiv.style.marginRight=\"50%\";pixelMarginRightVal=divStyle.marginRight===\"4px\";documentElement.removeChild(container);}jQuery.extend(support,{pixelPosition:function pixelPosition(){// This test is executed only once but we still do memoizing\n// since we can use the boxSizingReliable pre-computing.\n// No need to check if the test was already performed, though.\ncomputeStyleTests();return pixelPositionVal;},boxSizingReliable:function boxSizingReliable(){if(boxSizingReliableVal==null){computeStyleTests();}return boxSizingReliableVal;},pixelMarginRight:function pixelMarginRight(){// Support: Android 4.0-4.3\n// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\n// since that compresses better and they're computed together anyway.\nif(boxSizingReliableVal==null){computeStyleTests();}return pixelMarginRightVal;},reliableMarginLeft:function reliableMarginLeft(){// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\nif(boxSizingReliableVal==null){computeStyleTests();}return reliableMarginLeftVal;},reliableMarginRight:function reliableMarginRight(){// Support: Android 2.3\n// Check if div with explicit width and no margin-right incorrectly\n// gets computed margin-right based on width of container. (#3333)\n// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n// This support function is only executed once so no memoizing is needed.\nvar ret,marginDiv=div.appendChild(document.createElement(\"div\"));// Reset CSS: box-sizing; display; margin; border; padding\nmarginDiv.style.cssText=div.style.cssText=// Support: Android 2.3\n// Vendor-prefix box-sizing\n\"-webkit-box-sizing:content-box;box-sizing:content-box;\"+\"display:block;margin:0;border:0;padding:0\";marginDiv.style.marginRight=marginDiv.style.width=\"0\";div.style.width=\"1px\";documentElement.appendChild(container);ret=!parseFloat(window.getComputedStyle(marginDiv).marginRight);documentElement.removeChild(container);div.removeChild(marginDiv);return ret;}});})();function curCSS(elem,name,computed){var width,minWidth,maxWidth,ret,style=elem.style;computed=computed||getStyles(elem);ret=computed?computed.getPropertyValue(name)||computed[name]:undefined;// Support: Opera 12.1x only\n// Fall back to style even without computed\n// computed is undefined for elems on document fragments\nif((ret===\"\"||ret===undefined)&&!jQuery.contains(elem.ownerDocument,elem)){ret=jQuery.style(elem,name);}// Support: IE9\n// getPropertyValue is only needed for .css('filter') (#12537)\nif(computed){// A tribute to the \"awesome hack by Dean Edwards\"\n// Android Browser returns percentage for some values,\n// but width seems to be reliably pixels.\n// This is against the CSSOM draft spec:\n// http://dev.w3.org/csswg/cssom/#resolved-values\nif(!support.pixelMarginRight()&&rnumnonpx.test(ret)&&rmargin.test(name)){// Remember the original values\nwidth=style.width;minWidth=style.minWidth;maxWidth=style.maxWidth;// Put in the new values to get a computed value out\nstyle.minWidth=style.maxWidth=style.width=ret;ret=computed.width;// Revert the changed values\nstyle.width=width;style.minWidth=minWidth;style.maxWidth=maxWidth;}}return ret!==undefined?// Support: IE9-11+\n// IE returns zIndex value as an integer.\nret+\"\":ret;}function addGetHookIf(conditionFn,hookFn){// Define the hook, we'll check on the first run if it's really needed.\nreturn{get:function get(){if(conditionFn()){// Hook not needed (or it's not possible to use it due\n// to missing dependency), remove it.\ndelete this.get;return;}// Hook needed; redefine it so that the support test is not executed again.\nreturn(this.get=hookFn).apply(this,arguments);}};}var// Swappable if display is none or starts with table\n// except \"table\", \"table-cell\", or \"table-caption\"\n// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\nrdisplayswap=/^(none|table(?!-c[ea]).+)/,cssShow={position:\"absolute\",visibility:\"hidden\",display:\"block\"},cssNormalTransform={letterSpacing:\"0\",fontWeight:\"400\"},cssPrefixes=[\"Webkit\",\"O\",\"Moz\",\"ms\"],emptyStyle=document.createElement(\"div\").style;// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName(name){// Shortcut for names that are not vendor prefixed\nif(name in emptyStyle){return name;}// Check for vendor prefixed names\nvar capName=name[0].toUpperCase()+name.slice(1),i=cssPrefixes.length;while(i--){name=cssPrefixes[i]+capName;if(name in emptyStyle){return name;}}}function setPositiveNumber(elem,value,subtract){// Any relative (+/-) values have already been\n// normalized at this point\nvar matches=rcssNum.exec(value);return matches?// Guard against undefined \"subtract\", e.g., when used as in cssHooks\nMath.max(0,matches[2]-(subtract||0))+(matches[3]||\"px\"):value;}function augmentWidthOrHeight(elem,name,extra,isBorderBox,styles){var i=extra===(isBorderBox?\"border\":\"content\")?// If we already have the right measurement, avoid augmentation\n4:// Otherwise initialize for horizontal or vertical properties\nname===\"width\"?1:0,val=0;for(;i<4;i+=2){// Both box models exclude margin, so add it if we want it\nif(extra===\"margin\"){val+=jQuery.css(elem,extra+cssExpand[i],true,styles);}if(isBorderBox){// border-box includes padding, so remove it if we want content\nif(extra===\"content\"){val-=jQuery.css(elem,\"padding\"+cssExpand[i],true,styles);}// At this point, extra isn't border nor margin, so remove border\nif(extra!==\"margin\"){val-=jQuery.css(elem,\"border\"+cssExpand[i]+\"Width\",true,styles);}}else{// At this point, extra isn't content, so add padding\nval+=jQuery.css(elem,\"padding\"+cssExpand[i],true,styles);// At this point, extra isn't content nor padding, so add border\nif(extra!==\"padding\"){val+=jQuery.css(elem,\"border\"+cssExpand[i]+\"Width\",true,styles);}}}return val;}function getWidthOrHeight(elem,name,extra){// Start with offset property, which is equivalent to the border-box value\nvar valueIsBorderBox=true,val=name===\"width\"?elem.offsetWidth:elem.offsetHeight,styles=getStyles(elem),isBorderBox=jQuery.css(elem,\"boxSizing\",false,styles)===\"border-box\";// Support: IE11 only\n// In IE 11 fullscreen elements inside of an iframe have\n// 100x too small dimensions (gh-1764).\nif(document.msFullscreenElement&&window.top!==window){// Support: IE11 only\n// Running getBoundingClientRect on a disconnected node\n// in IE throws an error.\nif(elem.getClientRects().length){val=Math.round(elem.getBoundingClientRect()[name]*100);}}// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\nif(val<=0||val==null){// Fall back to computed then uncomputed css if necessary\nval=curCSS(elem,name,styles);if(val<0||val==null){val=elem.style[name];}// Computed unit is not pixels. Stop here and return.\nif(rnumnonpx.test(val)){return val;}// Check for style in case a browser which returns unreliable values\n// for getComputedStyle silently falls back to the reliable elem.style\nvalueIsBorderBox=isBorderBox&&(support.boxSizingReliable()||val===elem.style[name]);// Normalize \"\", auto, and prepare for extra\nval=parseFloat(val)||0;}// Use the active box-sizing model to add/subtract irrelevant styles\nreturn val+augmentWidthOrHeight(elem,name,extra||(isBorderBox?\"border\":\"content\"),valueIsBorderBox,styles)+\"px\";}function showHide(elements,show){var display,elem,hidden,values=[],index=0,length=elements.length;for(;index<length;index++){elem=elements[index];if(!elem.style){continue;}values[index]=dataPriv.get(elem,\"olddisplay\");display=elem.style.display;if(show){// Reset the inline display of this element to learn if it is\n// being hidden by cascaded rules or not\nif(!values[index]&&display===\"none\"){elem.style.display=\"\";}// Set elements which have been overridden with display: none\n// in a stylesheet to whatever the default browser style is\n// for such an element\nif(elem.style.display===\"\"&&isHidden(elem)){values[index]=dataPriv.access(elem,\"olddisplay\",defaultDisplay(elem.nodeName));}}else{hidden=isHidden(elem);if(display!==\"none\"||!hidden){dataPriv.set(elem,\"olddisplay\",hidden?display:jQuery.css(elem,\"display\"));}}}// Set the display of most of the elements in a second loop\n// to avoid the constant reflow\nfor(index=0;index<length;index++){elem=elements[index];if(!elem.style){continue;}if(!show||elem.style.display===\"none\"||elem.style.display===\"\"){elem.style.display=show?values[index]||\"\":\"none\";}}return elements;}jQuery.extend({// Add in style property hooks for overriding the default\n// behavior of getting and setting a style property\ncssHooks:{opacity:{get:function get(elem,computed){if(computed){// We should always get a number back from opacity\nvar ret=curCSS(elem,\"opacity\");return ret===\"\"?\"1\":ret;}}}},// Don't automatically add \"px\" to these possibly-unitless properties\ncssNumber:{\"animationIterationCount\":true,\"columnCount\":true,\"fillOpacity\":true,\"flexGrow\":true,\"flexShrink\":true,\"fontWeight\":true,\"lineHeight\":true,\"opacity\":true,\"order\":true,\"orphans\":true,\"widows\":true,\"zIndex\":true,\"zoom\":true},// Add in properties whose names you wish to fix before\n// setting or getting the value\ncssProps:{\"float\":\"cssFloat\"},// Get and set the style property on a DOM Node\nstyle:function style(elem,name,value,extra){// Don't set styles on text and comment nodes\nif(!elem||elem.nodeType===3||elem.nodeType===8||!elem.style){return;}// Make sure that we're working with the right name\nvar ret,type,hooks,origName=jQuery.camelCase(name),style=elem.style;name=jQuery.cssProps[origName]||(jQuery.cssProps[origName]=vendorPropName(origName)||origName);// Gets hook for the prefixed version, then unprefixed version\nhooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];// Check if we're setting a value\nif(value!==undefined){type=typeof value===\"undefined\"?\"undefined\":_typeof(value);// Convert \"+=\" or \"-=\" to relative numbers (#7345)\nif(type===\"string\"&&(ret=rcssNum.exec(value))&&ret[1]){value=adjustCSS(elem,name,ret);// Fixes bug #9237\ntype=\"number\";}// Make sure that null and NaN values aren't set (#7116)\nif(value==null||value!==value){return;}// If a number was passed in, add the unit (except for certain CSS properties)\nif(type===\"number\"){value+=ret&&ret[3]||(jQuery.cssNumber[origName]?\"\":\"px\");}// Support: IE9-11+\n// background-* props affect original clone's values\nif(!support.clearCloneStyle&&value===\"\"&&name.indexOf(\"background\")===0){style[name]=\"inherit\";}// If a hook was provided, use that value, otherwise just set the specified value\nif(!hooks||!(\"set\"in hooks)||(value=hooks.set(elem,value,extra))!==undefined){style[name]=value;}}else{// If a hook was provided get the non-computed value from there\nif(hooks&&\"get\"in hooks&&(ret=hooks.get(elem,false,extra))!==undefined){return ret;}// Otherwise just get the value from the style object\nreturn style[name];}},css:function css(elem,name,extra,styles){var val,num,hooks,origName=jQuery.camelCase(name);// Make sure that we're working with the right name\nname=jQuery.cssProps[origName]||(jQuery.cssProps[origName]=vendorPropName(origName)||origName);// Try prefixed name followed by the unprefixed name\nhooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];// If a hook was provided get the computed value from there\nif(hooks&&\"get\"in hooks){val=hooks.get(elem,true,extra);}// Otherwise, if a way to get the computed value exists, use that\nif(val===undefined){val=curCSS(elem,name,styles);}// Convert \"normal\" to computed value\nif(val===\"normal\"&&name in cssNormalTransform){val=cssNormalTransform[name];}// Make numeric if forced or a qualifier was provided and val looks numeric\nif(extra===\"\"||extra){num=parseFloat(val);return extra===true||isFinite(num)?num||0:val;}return val;}});jQuery.each([\"height\",\"width\"],function(i,name){jQuery.cssHooks[name]={get:function get(elem,computed,extra){if(computed){// Certain elements can have dimension info if we invisibly show them\n// but it must have a current display style that would benefit\nreturn rdisplayswap.test(jQuery.css(elem,\"display\"))&&elem.offsetWidth===0?swap(elem,cssShow,function(){return getWidthOrHeight(elem,name,extra);}):getWidthOrHeight(elem,name,extra);}},set:function set(elem,value,extra){var matches,styles=extra&&getStyles(elem),subtract=extra&&augmentWidthOrHeight(elem,name,extra,jQuery.css(elem,\"boxSizing\",false,styles)===\"border-box\",styles);// Convert to pixels if value adjustment is needed\nif(subtract&&(matches=rcssNum.exec(value))&&(matches[3]||\"px\")!==\"px\"){elem.style[name]=value;value=jQuery.css(elem,name);}return setPositiveNumber(elem,value,subtract);}};});jQuery.cssHooks.marginLeft=addGetHookIf(support.reliableMarginLeft,function(elem,computed){if(computed){return(parseFloat(curCSS(elem,\"marginLeft\"))||elem.getBoundingClientRect().left-swap(elem,{marginLeft:0},function(){return elem.getBoundingClientRect().left;}))+\"px\";}});// Support: Android 2.3\njQuery.cssHooks.marginRight=addGetHookIf(support.reliableMarginRight,function(elem,computed){if(computed){return swap(elem,{\"display\":\"inline-block\"},curCSS,[elem,\"marginRight\"]);}});// These hooks are used by animate to expand properties\njQuery.each({margin:\"\",padding:\"\",border:\"Width\"},function(prefix,suffix){jQuery.cssHooks[prefix+suffix]={expand:function expand(value){var i=0,expanded={},// Assumes a single number if not a string\nparts=typeof value===\"string\"?value.split(\" \"):[value];for(;i<4;i++){expanded[prefix+cssExpand[i]+suffix]=parts[i]||parts[i-2]||parts[0];}return expanded;}};if(!rmargin.test(prefix)){jQuery.cssHooks[prefix+suffix].set=setPositiveNumber;}});jQuery.fn.extend({css:function css(name,value){return access(this,function(elem,name,value){var styles,len,map={},i=0;if(jQuery.isArray(name)){styles=getStyles(elem);len=name.length;for(;i<len;i++){map[name[i]]=jQuery.css(elem,name[i],false,styles);}return map;}return value!==undefined?jQuery.style(elem,name,value):jQuery.css(elem,name);},name,value,arguments.length>1);},show:function show(){return showHide(this,true);},hide:function hide(){return showHide(this);},toggle:function toggle(state){if(typeof state===\"boolean\"){return state?this.show():this.hide();}return this.each(function(){if(isHidden(this)){jQuery(this).show();}else{jQuery(this).hide();}});}});function Tween(elem,options,prop,end,easing){return new Tween.prototype.init(elem,options,prop,end,easing);}jQuery.Tween=Tween;Tween.prototype={constructor:Tween,init:function init(elem,options,prop,end,easing,unit){this.elem=elem;this.prop=prop;this.easing=easing||jQuery.easing._default;this.options=options;this.start=this.now=this.cur();this.end=end;this.unit=unit||(jQuery.cssNumber[prop]?\"\":\"px\");},cur:function cur(){var hooks=Tween.propHooks[this.prop];return hooks&&hooks.get?hooks.get(this):Tween.propHooks._default.get(this);},run:function run(percent){var eased,hooks=Tween.propHooks[this.prop];if(this.options.duration){this.pos=eased=jQuery.easing[this.easing](percent,this.options.duration*percent,0,1,this.options.duration);}else{this.pos=eased=percent;}this.now=(this.end-this.start)*eased+this.start;if(this.options.step){this.options.step.call(this.elem,this.now,this);}if(hooks&&hooks.set){hooks.set(this);}else{Tween.propHooks._default.set(this);}return this;}};Tween.prototype.init.prototype=Tween.prototype;Tween.propHooks={_default:{get:function get(tween){var result;// Use a property on the element directly when it is not a DOM element,\n// or when there is no matching style property that exists.\nif(tween.elem.nodeType!==1||tween.elem[tween.prop]!=null&&tween.elem.style[tween.prop]==null){return tween.elem[tween.prop];}// Passing an empty string as a 3rd parameter to .css will automatically\n// attempt a parseFloat and fallback to a string if the parse fails.\n// Simple values such as \"10px\" are parsed to Float;\n// complex values such as \"rotate(1rad)\" are returned as-is.\nresult=jQuery.css(tween.elem,tween.prop,\"\");// Empty strings, null, undefined and \"auto\" are converted to 0.\nreturn!result||result===\"auto\"?0:result;},set:function set(tween){// Use step hook for back compat.\n// Use cssHook if its there.\n// Use .style if available and use plain properties where available.\nif(jQuery.fx.step[tween.prop]){jQuery.fx.step[tween.prop](tween);}else if(tween.elem.nodeType===1&&(tween.elem.style[jQuery.cssProps[tween.prop]]!=null||jQuery.cssHooks[tween.prop])){jQuery.style(tween.elem,tween.prop,tween.now+tween.unit);}else{tween.elem[tween.prop]=tween.now;}}}};// Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop=Tween.propHooks.scrollLeft={set:function set(tween){if(tween.elem.nodeType&&tween.elem.parentNode){tween.elem[tween.prop]=tween.now;}}};jQuery.easing={linear:function linear(p){return p;},swing:function swing(p){return 0.5-Math.cos(p*Math.PI)/2;},_default:\"swing\"};jQuery.fx=Tween.prototype.init;// Back Compat <1.8 extension point\njQuery.fx.step={};var fxNow,timerId,rfxtypes=/^(?:toggle|show|hide)$/,rrun=/queueHooks$/;// Animations created synchronously will run synchronously\nfunction createFxNow(){window.setTimeout(function(){fxNow=undefined;});return fxNow=jQuery.now();}// Generate parameters to create a standard animation\nfunction genFx(type,includeWidth){var which,i=0,attrs={height:type};// If we include width, step value is 1 to do all cssExpand values,\n// otherwise step value is 2 to skip over Left and Right\nincludeWidth=includeWidth?1:0;for(;i<4;i+=2-includeWidth){which=cssExpand[i];attrs[\"margin\"+which]=attrs[\"padding\"+which]=type;}if(includeWidth){attrs.opacity=attrs.width=type;}return attrs;}function createTween(value,prop,animation){var tween,collection=(Animation.tweeners[prop]||[]).concat(Animation.tweeners[\"*\"]),index=0,length=collection.length;for(;index<length;index++){if(tween=collection[index].call(animation,prop,value)){// We're done with this property\nreturn tween;}}}function defaultPrefilter(elem,props,opts){/* jshint validthis: true */var prop,value,toggle,tween,hooks,oldfire,display,checkDisplay,anim=this,orig={},style=elem.style,hidden=elem.nodeType&&isHidden(elem),dataShow=dataPriv.get(elem,\"fxshow\");// Handle queue: false promises\nif(!opts.queue){hooks=jQuery._queueHooks(elem,\"fx\");if(hooks.unqueued==null){hooks.unqueued=0;oldfire=hooks.empty.fire;hooks.empty.fire=function(){if(!hooks.unqueued){oldfire();}};}hooks.unqueued++;anim.always(function(){// Ensure the complete handler is called before this completes\nanim.always(function(){hooks.unqueued--;if(!jQuery.queue(elem,\"fx\").length){hooks.empty.fire();}});});}// Height/width overflow pass\nif(elem.nodeType===1&&(\"height\"in props||\"width\"in props)){// Make sure that nothing sneaks out\n// Record all 3 overflow attributes because IE9-10 do not\n// change the overflow attribute when overflowX and\n// overflowY are set to the same value\nopts.overflow=[style.overflow,style.overflowX,style.overflowY];// Set display property to inline-block for height/width\n// animations on inline elements that are having width/height animated\ndisplay=jQuery.css(elem,\"display\");// Test default display if display is currently \"none\"\ncheckDisplay=display===\"none\"?dataPriv.get(elem,\"olddisplay\")||defaultDisplay(elem.nodeName):display;if(checkDisplay===\"inline\"&&jQuery.css(elem,\"float\")===\"none\"){style.display=\"inline-block\";}}if(opts.overflow){style.overflow=\"hidden\";anim.always(function(){style.overflow=opts.overflow[0];style.overflowX=opts.overflow[1];style.overflowY=opts.overflow[2];});}// show/hide pass\nfor(prop in props){value=props[prop];if(rfxtypes.exec(value)){delete props[prop];toggle=toggle||value===\"toggle\";if(value===(hidden?\"hide\":\"show\")){// If there is dataShow left over from a stopped hide or show\n// and we are going to proceed with show, we should pretend to be hidden\nif(value===\"show\"&&dataShow&&dataShow[prop]!==undefined){hidden=true;}else{continue;}}orig[prop]=dataShow&&dataShow[prop]||jQuery.style(elem,prop);// Any non-fx value stops us from restoring the original display value\n}else{display=undefined;}}if(!jQuery.isEmptyObject(orig)){if(dataShow){if(\"hidden\"in dataShow){hidden=dataShow.hidden;}}else{dataShow=dataPriv.access(elem,\"fxshow\",{});}// Store state if its toggle - enables .stop().toggle() to \"reverse\"\nif(toggle){dataShow.hidden=!hidden;}if(hidden){jQuery(elem).show();}else{anim.done(function(){jQuery(elem).hide();});}anim.done(function(){var prop;dataPriv.remove(elem,\"fxshow\");for(prop in orig){jQuery.style(elem,prop,orig[prop]);}});for(prop in orig){tween=createTween(hidden?dataShow[prop]:0,prop,anim);if(!(prop in dataShow)){dataShow[prop]=tween.start;if(hidden){tween.end=tween.start;tween.start=prop===\"width\"||prop===\"height\"?1:0;}}}// If this is a noop like .hide().hide(), restore an overwritten display value\n}else if((display===\"none\"?defaultDisplay(elem.nodeName):display)===\"inline\"){style.display=display;}}function propFilter(props,specialEasing){var index,name,easing,value,hooks;// camelCase, specialEasing and expand cssHook pass\nfor(index in props){name=jQuery.camelCase(index);easing=specialEasing[name];value=props[index];if(jQuery.isArray(value)){easing=value[1];value=props[index]=value[0];}if(index!==name){props[name]=value;delete props[index];}hooks=jQuery.cssHooks[name];if(hooks&&\"expand\"in hooks){value=hooks.expand(value);delete props[name];// Not quite $.extend, this won't overwrite existing keys.\n// Reusing 'index' because we have the correct \"name\"\nfor(index in value){if(!(index in props)){props[index]=value[index];specialEasing[index]=easing;}}}else{specialEasing[name]=easing;}}}function Animation(elem,properties,options){var result,stopped,index=0,length=Animation.prefilters.length,deferred=jQuery.Deferred().always(function(){// Don't match elem in the :animated selector\ndelete tick.elem;}),tick=function tick(){if(stopped){return false;}var currentTime=fxNow||createFxNow(),remaining=Math.max(0,animation.startTime+animation.duration-currentTime),// Support: Android 2.3\n// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\ntemp=remaining/animation.duration||0,percent=1-temp,index=0,length=animation.tweens.length;for(;index<length;index++){animation.tweens[index].run(percent);}deferred.notifyWith(elem,[animation,percent,remaining]);if(percent<1&&length){return remaining;}else{deferred.resolveWith(elem,[animation]);return false;}},animation=deferred.promise({elem:elem,props:jQuery.extend({},properties),opts:jQuery.extend(true,{specialEasing:{},easing:jQuery.easing._default},options),originalProperties:properties,originalOptions:options,startTime:fxNow||createFxNow(),duration:options.duration,tweens:[],createTween:function createTween(prop,end){var tween=jQuery.Tween(elem,animation.opts,prop,end,animation.opts.specialEasing[prop]||animation.opts.easing);animation.tweens.push(tween);return tween;},stop:function stop(gotoEnd){var index=0,// If we are going to the end, we want to run all the tweens\n// otherwise we skip this part\nlength=gotoEnd?animation.tweens.length:0;if(stopped){return this;}stopped=true;for(;index<length;index++){animation.tweens[index].run(1);}// Resolve when we played the last frame; otherwise, reject\nif(gotoEnd){deferred.notifyWith(elem,[animation,1,0]);deferred.resolveWith(elem,[animation,gotoEnd]);}else{deferred.rejectWith(elem,[animation,gotoEnd]);}return this;}}),props=animation.props;propFilter(props,animation.opts.specialEasing);for(;index<length;index++){result=Animation.prefilters[index].call(animation,elem,props,animation.opts);if(result){if(jQuery.isFunction(result.stop)){jQuery._queueHooks(animation.elem,animation.opts.queue).stop=jQuery.proxy(result.stop,result);}return result;}}jQuery.map(props,createTween,animation);if(jQuery.isFunction(animation.opts.start)){animation.opts.start.call(elem,animation);}jQuery.fx.timer(jQuery.extend(tick,{elem:elem,anim:animation,queue:animation.opts.queue}));// attach callbacks from options\nreturn animation.progress(animation.opts.progress).done(animation.opts.done,animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);}jQuery.Animation=jQuery.extend(Animation,{tweeners:{\"*\":[function(prop,value){var tween=this.createTween(prop,value);adjustCSS(tween.elem,prop,rcssNum.exec(value),tween);return tween;}]},tweener:function tweener(props,callback){if(jQuery.isFunction(props)){callback=props;props=[\"*\"];}else{props=props.match(rnotwhite);}var prop,index=0,length=props.length;for(;index<length;index++){prop=props[index];Animation.tweeners[prop]=Animation.tweeners[prop]||[];Animation.tweeners[prop].unshift(callback);}},prefilters:[defaultPrefilter],prefilter:function prefilter(callback,prepend){if(prepend){Animation.prefilters.unshift(callback);}else{Animation.prefilters.push(callback);}}});jQuery.speed=function(speed,easing,fn){var opt=speed&&(typeof speed===\"undefined\"?\"undefined\":_typeof(speed))===\"object\"?jQuery.extend({},speed):{complete:fn||!fn&&easing||jQuery.isFunction(speed)&&speed,duration:speed,easing:fn&&easing||easing&&!jQuery.isFunction(easing)&&easing};opt.duration=jQuery.fx.off?0:typeof opt.duration===\"number\"?opt.duration:opt.duration in jQuery.fx.speeds?jQuery.fx.speeds[opt.duration]:jQuery.fx.speeds._default;// Normalize opt.queue - true/undefined/null -> \"fx\"\nif(opt.queue==null||opt.queue===true){opt.queue=\"fx\";}// Queueing\nopt.old=opt.complete;opt.complete=function(){if(jQuery.isFunction(opt.old)){opt.old.call(this);}if(opt.queue){jQuery.dequeue(this,opt.queue);}};return opt;};jQuery.fn.extend({fadeTo:function fadeTo(speed,to,easing,callback){// Show any hidden elements after setting opacity to 0\nreturn this.filter(isHidden).css(\"opacity\",0).show()// Animate to the value specified\n.end().animate({opacity:to},speed,easing,callback);},animate:function animate(prop,speed,easing,callback){var empty=jQuery.isEmptyObject(prop),optall=jQuery.speed(speed,easing,callback),doAnimation=function doAnimation(){// Operate on a copy of prop so per-property easing won't be lost\nvar anim=Animation(this,jQuery.extend({},prop),optall);// Empty animations, or finishing resolves immediately\nif(empty||dataPriv.get(this,\"finish\")){anim.stop(true);}};doAnimation.finish=doAnimation;return empty||optall.queue===false?this.each(doAnimation):this.queue(optall.queue,doAnimation);},stop:function stop(type,clearQueue,gotoEnd){var stopQueue=function stopQueue(hooks){var stop=hooks.stop;delete hooks.stop;stop(gotoEnd);};if(typeof type!==\"string\"){gotoEnd=clearQueue;clearQueue=type;type=undefined;}if(clearQueue&&type!==false){this.queue(type||\"fx\",[]);}return this.each(function(){var dequeue=true,index=type!=null&&type+\"queueHooks\",timers=jQuery.timers,data=dataPriv.get(this);if(index){if(data[index]&&data[index].stop){stopQueue(data[index]);}}else{for(index in data){if(data[index]&&data[index].stop&&rrun.test(index)){stopQueue(data[index]);}}}for(index=timers.length;index--;){if(timers[index].elem===this&&(type==null||timers[index].queue===type)){timers[index].anim.stop(gotoEnd);dequeue=false;timers.splice(index,1);}}// Start the next in the queue if the last step wasn't forced.\n// Timers currently will call their complete callbacks, which\n// will dequeue but only if they were gotoEnd.\nif(dequeue||!gotoEnd){jQuery.dequeue(this,type);}});},finish:function finish(type){if(type!==false){type=type||\"fx\";}return this.each(function(){var index,data=dataPriv.get(this),queue=data[type+\"queue\"],hooks=data[type+\"queueHooks\"],timers=jQuery.timers,length=queue?queue.length:0;// Enable finishing flag on private data\ndata.finish=true;// Empty the queue first\njQuery.queue(this,type,[]);if(hooks&&hooks.stop){hooks.stop.call(this,true);}// Look for any active animations, and finish them\nfor(index=timers.length;index--;){if(timers[index].elem===this&&timers[index].queue===type){timers[index].anim.stop(true);timers.splice(index,1);}}// Look for any animations in the old queue and finish them\nfor(index=0;index<length;index++){if(queue[index]&&queue[index].finish){queue[index].finish.call(this);}}// Turn off finishing flag\ndelete data.finish;});}});jQuery.each([\"toggle\",\"show\",\"hide\"],function(i,name){var cssFn=jQuery.fn[name];jQuery.fn[name]=function(speed,easing,callback){return speed==null||typeof speed===\"boolean\"?cssFn.apply(this,arguments):this.animate(genFx(name,true),speed,easing,callback);};});// Generate shortcuts for custom animations\njQuery.each({slideDown:genFx(\"show\"),slideUp:genFx(\"hide\"),slideToggle:genFx(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(name,props){jQuery.fn[name]=function(speed,easing,callback){return this.animate(props,speed,easing,callback);};});jQuery.timers=[];jQuery.fx.tick=function(){var timer,i=0,timers=jQuery.timers;fxNow=jQuery.now();for(;i<timers.length;i++){timer=timers[i];// Checks the timer has not already been removed\nif(!timer()&&timers[i]===timer){timers.splice(i--,1);}}if(!timers.length){jQuery.fx.stop();}fxNow=undefined;};jQuery.fx.timer=function(timer){jQuery.timers.push(timer);if(timer()){jQuery.fx.start();}else{jQuery.timers.pop();}};jQuery.fx.interval=13;jQuery.fx.start=function(){if(!timerId){timerId=window.setInterval(jQuery.fx.tick,jQuery.fx.interval);}};jQuery.fx.stop=function(){window.clearInterval(timerId);timerId=null;};jQuery.fx.speeds={slow:600,fast:200,// Default speed\n_default:400};// Based off of the plugin by Clint Helfers, with permission.\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay=function(time,type){time=jQuery.fx?jQuery.fx.speeds[time]||time:time;type=type||\"fx\";return this.queue(type,function(next,hooks){var timeout=window.setTimeout(next,time);hooks.stop=function(){window.clearTimeout(timeout);};});};(function(){var input=document.createElement(\"input\"),select=document.createElement(\"select\"),opt=select.appendChild(document.createElement(\"option\"));input.type=\"checkbox\";// Support: iOS<=5.1, Android<=4.2+\n// Default value for a checkbox should be \"on\"\nsupport.checkOn=input.value!==\"\";// Support: IE<=11+\n// Must access selectedIndex to make default options select\nsupport.optSelected=opt.selected;// Support: Android<=2.3\n// Options inside disabled selects are incorrectly marked as disabled\nselect.disabled=true;support.optDisabled=!opt.disabled;// Support: IE<=11+\n// An input loses its value after becoming a radio\ninput=document.createElement(\"input\");input.value=\"t\";input.type=\"radio\";support.radioValue=input.value===\"t\";})();var boolHook,attrHandle=jQuery.expr.attrHandle;jQuery.fn.extend({attr:function attr(name,value){return access(this,jQuery.attr,name,value,arguments.length>1);},removeAttr:function removeAttr(name){return this.each(function(){jQuery.removeAttr(this,name);});}});jQuery.extend({attr:function attr(elem,name,value){var ret,hooks,nType=elem.nodeType;// Don't get/set attributes on text, comment and attribute nodes\nif(nType===3||nType===8||nType===2){return;}// Fallback to prop when attributes are not supported\nif(typeof elem.getAttribute===\"undefined\"){return jQuery.prop(elem,name,value);}// All attributes are lowercase\n// Grab necessary hook if one is defined\nif(nType!==1||!jQuery.isXMLDoc(elem)){name=name.toLowerCase();hooks=jQuery.attrHooks[name]||(jQuery.expr.match.bool.test(name)?boolHook:undefined);}if(value!==undefined){if(value===null){jQuery.removeAttr(elem,name);return;}if(hooks&&\"set\"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){return ret;}elem.setAttribute(name,value+\"\");return value;}if(hooks&&\"get\"in hooks&&(ret=hooks.get(elem,name))!==null){return ret;}ret=jQuery.find.attr(elem,name);// Non-existent attributes return null, we normalize to undefined\nreturn ret==null?undefined:ret;},attrHooks:{type:{set:function set(elem,value){if(!support.radioValue&&value===\"radio\"&&jQuery.nodeName(elem,\"input\")){var val=elem.value;elem.setAttribute(\"type\",value);if(val){elem.value=val;}return value;}}}},removeAttr:function removeAttr(elem,value){var name,propName,i=0,attrNames=value&&value.match(rnotwhite);if(attrNames&&elem.nodeType===1){while(name=attrNames[i++]){propName=jQuery.propFix[name]||name;// Boolean attributes get special treatment (#10870)\nif(jQuery.expr.match.bool.test(name)){// Set corresponding property to false\nelem[propName]=false;}elem.removeAttribute(name);}}}});// Hooks for boolean attributes\nboolHook={set:function set(elem,value,name){if(value===false){// Remove boolean attributes when set to false\njQuery.removeAttr(elem,name);}else{elem.setAttribute(name,name);}return name;}};jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g),function(i,name){var getter=attrHandle[name]||jQuery.find.attr;attrHandle[name]=function(elem,name,isXML){var ret,handle;if(!isXML){// Avoid an infinite loop by temporarily removing this function from the getter\nhandle=attrHandle[name];attrHandle[name]=ret;ret=getter(elem,name,isXML)!=null?name.toLowerCase():null;attrHandle[name]=handle;}return ret;};});var rfocusable=/^(?:input|select|textarea|button)$/i,rclickable=/^(?:a|area)$/i;jQuery.fn.extend({prop:function prop(name,value){return access(this,jQuery.prop,name,value,arguments.length>1);},removeProp:function removeProp(name){return this.each(function(){delete this[jQuery.propFix[name]||name];});}});jQuery.extend({prop:function prop(elem,name,value){var ret,hooks,nType=elem.nodeType;// Don't get/set properties on text, comment and attribute nodes\nif(nType===3||nType===8||nType===2){return;}if(nType!==1||!jQuery.isXMLDoc(elem)){// Fix name and attach hooks\nname=jQuery.propFix[name]||name;hooks=jQuery.propHooks[name];}if(value!==undefined){if(hooks&&\"set\"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){return ret;}return elem[name]=value;}if(hooks&&\"get\"in hooks&&(ret=hooks.get(elem,name))!==null){return ret;}return elem[name];},propHooks:{tabIndex:{get:function get(elem){// elem.tabIndex doesn't always return the\n// correct value when it hasn't been explicitly set\n// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n// Use proper attribute retrieval(#12072)\nvar tabindex=jQuery.find.attr(elem,\"tabindex\");return tabindex?parseInt(tabindex,10):rfocusable.test(elem.nodeName)||rclickable.test(elem.nodeName)&&elem.href?0:-1;}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}});// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\nif(!support.optSelected){jQuery.propHooks.selected={get:function get(elem){var parent=elem.parentNode;if(parent&&parent.parentNode){parent.parentNode.selectedIndex;}return null;},set:function set(elem){var parent=elem.parentNode;if(parent){parent.selectedIndex;if(parent.parentNode){parent.parentNode.selectedIndex;}}}};}jQuery.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){jQuery.propFix[this.toLowerCase()]=this;});var rclass=/[\\t\\r\\n\\f]/g;function getClass(elem){return elem.getAttribute&&elem.getAttribute(\"class\")||\"\";}jQuery.fn.extend({addClass:function addClass(value){var classes,elem,cur,curValue,clazz,j,finalValue,i=0;if(jQuery.isFunction(value)){return this.each(function(j){jQuery(this).addClass(value.call(this,j,getClass(this)));});}if(typeof value===\"string\"&&value){classes=value.match(rnotwhite)||[];while(elem=this[i++]){curValue=getClass(elem);cur=elem.nodeType===1&&(\" \"+curValue+\" \").replace(rclass,\" \");if(cur){j=0;while(clazz=classes[j++]){if(cur.indexOf(\" \"+clazz+\" \")<0){cur+=clazz+\" \";}}// Only assign if different to avoid unneeded rendering.\nfinalValue=jQuery.trim(cur);if(curValue!==finalValue){elem.setAttribute(\"class\",finalValue);}}}}return this;},removeClass:function removeClass(value){var classes,elem,cur,curValue,clazz,j,finalValue,i=0;if(jQuery.isFunction(value)){return this.each(function(j){jQuery(this).removeClass(value.call(this,j,getClass(this)));});}if(!arguments.length){return this.attr(\"class\",\"\");}if(typeof value===\"string\"&&value){classes=value.match(rnotwhite)||[];while(elem=this[i++]){curValue=getClass(elem);// This expression is here for better compressibility (see addClass)\ncur=elem.nodeType===1&&(\" \"+curValue+\" \").replace(rclass,\" \");if(cur){j=0;while(clazz=classes[j++]){// Remove *all* instances\nwhile(cur.indexOf(\" \"+clazz+\" \")>-1){cur=cur.replace(\" \"+clazz+\" \",\" \");}}// Only assign if different to avoid unneeded rendering.\nfinalValue=jQuery.trim(cur);if(curValue!==finalValue){elem.setAttribute(\"class\",finalValue);}}}}return this;},toggleClass:function toggleClass(value,stateVal){var type=typeof value===\"undefined\"?\"undefined\":_typeof(value);if(typeof stateVal===\"boolean\"&&type===\"string\"){return stateVal?this.addClass(value):this.removeClass(value);}if(jQuery.isFunction(value)){return this.each(function(i){jQuery(this).toggleClass(value.call(this,i,getClass(this),stateVal),stateVal);});}return this.each(function(){var className,i,self,classNames;if(type===\"string\"){// Toggle individual class names\ni=0;self=jQuery(this);classNames=value.match(rnotwhite)||[];while(className=classNames[i++]){// Check each className given, space separated list\nif(self.hasClass(className)){self.removeClass(className);}else{self.addClass(className);}}// Toggle whole class name\n}else if(value===undefined||type===\"boolean\"){className=getClass(this);if(className){// Store className if set\ndataPriv.set(this,\"__className__\",className);}// If the element has a class name or if we're passed `false`,\n// then remove the whole classname (if there was one, the above saved it).\n// Otherwise bring back whatever was previously saved (if anything),\n// falling back to the empty string if nothing was stored.\nif(this.setAttribute){this.setAttribute(\"class\",className||value===false?\"\":dataPriv.get(this,\"__className__\")||\"\");}}});},hasClass:function hasClass(selector){var className,elem,i=0;className=\" \"+selector+\" \";while(elem=this[i++]){if(elem.nodeType===1&&(\" \"+getClass(elem)+\" \").replace(rclass,\" \").indexOf(className)>-1){return true;}}return false;}});var rreturn=/\\r/g,rspaces=/[\\x20\\t\\r\\n\\f]+/g;jQuery.fn.extend({val:function val(value){var hooks,ret,isFunction,elem=this[0];if(!arguments.length){if(elem){hooks=jQuery.valHooks[elem.type]||jQuery.valHooks[elem.nodeName.toLowerCase()];if(hooks&&\"get\"in hooks&&(ret=hooks.get(elem,\"value\"))!==undefined){return ret;}ret=elem.value;return typeof ret===\"string\"?// Handle most common string cases\nret.replace(rreturn,\"\"):// Handle cases where value is null/undef or number\nret==null?\"\":ret;}return;}isFunction=jQuery.isFunction(value);return this.each(function(i){var val;if(this.nodeType!==1){return;}if(isFunction){val=value.call(this,i,jQuery(this).val());}else{val=value;}// Treat null/undefined as \"\"; convert numbers to string\nif(val==null){val=\"\";}else if(typeof val===\"number\"){val+=\"\";}else if(jQuery.isArray(val)){val=jQuery.map(val,function(value){return value==null?\"\":value+\"\";});}hooks=jQuery.valHooks[this.type]||jQuery.valHooks[this.nodeName.toLowerCase()];// If set returns undefined, fall back to normal setting\nif(!hooks||!(\"set\"in hooks)||hooks.set(this,val,\"value\")===undefined){this.value=val;}});}});jQuery.extend({valHooks:{option:{get:function get(elem){var val=jQuery.find.attr(elem,\"value\");return val!=null?val:// Support: IE10-11+\n// option.text throws exceptions (#14686, #14858)\n// Strip and collapse whitespace\n// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\njQuery.trim(jQuery.text(elem)).replace(rspaces,\" \");}},select:{get:function get(elem){var value,option,options=elem.options,index=elem.selectedIndex,one=elem.type===\"select-one\"||index<0,values=one?null:[],max=one?index+1:options.length,i=index<0?max:one?index:0;// Loop through all the selected options\nfor(;i<max;i++){option=options[i];// IE8-9 doesn't update selected after form reset (#2551)\nif((option.selected||i===index)&&(// Don't return options that are disabled or in a disabled optgroup\nsupport.optDisabled?!option.disabled:option.getAttribute(\"disabled\")===null)&&(!option.parentNode.disabled||!jQuery.nodeName(option.parentNode,\"optgroup\"))){// Get the specific value for the option\nvalue=jQuery(option).val();// We don't need an array for one selects\nif(one){return value;}// Multi-Selects return an array\nvalues.push(value);}}return values;},set:function set(elem,value){var optionSet,option,options=elem.options,values=jQuery.makeArray(value),i=options.length;while(i--){option=options[i];if(option.selected=jQuery.inArray(jQuery.valHooks.option.get(option),values)>-1){optionSet=true;}}// Force browsers to behave consistently when non-matching value is set\nif(!optionSet){elem.selectedIndex=-1;}return values;}}}});// Radios and checkboxes getter/setter\njQuery.each([\"radio\",\"checkbox\"],function(){jQuery.valHooks[this]={set:function set(elem,value){if(jQuery.isArray(value)){return elem.checked=jQuery.inArray(jQuery(elem).val(),value)>-1;}}};if(!support.checkOn){jQuery.valHooks[this].get=function(elem){return elem.getAttribute(\"value\")===null?\"on\":elem.value;};}});// Return jQuery for attributes-only inclusion\nvar rfocusMorph=/^(?:focusinfocus|focusoutblur)$/;jQuery.extend(jQuery.event,{trigger:function trigger(event,data,elem,onlyHandlers){var i,cur,tmp,bubbleType,ontype,handle,special,eventPath=[elem||document],type=hasOwn.call(event,\"type\")?event.type:event,namespaces=hasOwn.call(event,\"namespace\")?event.namespace.split(\".\"):[];cur=tmp=elem=elem||document;// Don't do events on text and comment nodes\nif(elem.nodeType===3||elem.nodeType===8){return;}// focus/blur morphs to focusin/out; ensure we're not firing them right now\nif(rfocusMorph.test(type+jQuery.event.triggered)){return;}if(type.indexOf(\".\")>-1){// Namespaced trigger; create a regexp to match event type in handle()\nnamespaces=type.split(\".\");type=namespaces.shift();namespaces.sort();}ontype=type.indexOf(\":\")<0&&\"on\"+type;// Caller can pass in a jQuery.Event object, Object, or just an event type string\nevent=event[jQuery.expando]?event:new jQuery.Event(type,(typeof event===\"undefined\"?\"undefined\":_typeof(event))===\"object\"&&event);// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\nevent.isTrigger=onlyHandlers?2:3;event.namespace=namespaces.join(\".\");event.rnamespace=event.namespace?new RegExp(\"(^|\\\\.)\"+namespaces.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null;// Clean up the event in case it is being reused\nevent.result=undefined;if(!event.target){event.target=elem;}// Clone any incoming data and prepend the event, creating the handler arg list\ndata=data==null?[event]:jQuery.makeArray(data,[event]);// Allow special events to draw outside the lines\nspecial=jQuery.event.special[type]||{};if(!onlyHandlers&&special.trigger&&special.trigger.apply(elem,data)===false){return;}// Determine event propagation path in advance, per W3C events spec (#9951)\n// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\nif(!onlyHandlers&&!special.noBubble&&!jQuery.isWindow(elem)){bubbleType=special.delegateType||type;if(!rfocusMorph.test(bubbleType+type)){cur=cur.parentNode;}for(;cur;cur=cur.parentNode){eventPath.push(cur);tmp=cur;}// Only add window if we got to document (e.g., not plain obj or detached DOM)\nif(tmp===(elem.ownerDocument||document)){eventPath.push(tmp.defaultView||tmp.parentWindow||window);}}// Fire handlers on the event path\ni=0;while((cur=eventPath[i++])&&!event.isPropagationStopped()){event.type=i>1?bubbleType:special.bindType||type;// jQuery handler\nhandle=(dataPriv.get(cur,\"events\")||{})[event.type]&&dataPriv.get(cur,\"handle\");if(handle){handle.apply(cur,data);}// Native handler\nhandle=ontype&&cur[ontype];if(handle&&handle.apply&&acceptData(cur)){event.result=handle.apply(cur,data);if(event.result===false){event.preventDefault();}}}event.type=type;// If nobody prevented the default action, do it now\nif(!onlyHandlers&&!event.isDefaultPrevented()){if((!special._default||special._default.apply(eventPath.pop(),data)===false)&&acceptData(elem)){// Call a native DOM method on the target with the same name name as the event.\n// Don't do default actions on window, that's where global variables be (#6170)\nif(ontype&&jQuery.isFunction(elem[type])&&!jQuery.isWindow(elem)){// Don't re-trigger an onFOO event when we call its FOO() method\ntmp=elem[ontype];if(tmp){elem[ontype]=null;}// Prevent re-triggering of the same event, since we already bubbled it above\njQuery.event.triggered=type;elem[type]();jQuery.event.triggered=undefined;if(tmp){elem[ontype]=tmp;}}}}return event.result;},// Piggyback on a donor event to simulate a different one\nsimulate:function simulate(type,elem,event){var e=jQuery.extend(new jQuery.Event(),event,{type:type,isSimulated:true// Previously, `originalEvent: {}` was set here, so stopPropagation call\n// would not be triggered on donor event, since in our own\n// jQuery.event.stopPropagation function we had a check for existence of\n// originalEvent.stopPropagation method, so, consequently it would be a noop.\n//\n// But now, this \"simulate\" function is used only for events\n// for which stopPropagation() is noop, so there is no need for that anymore.\n//\n// For the 1.x branch though, guard for \"click\" and \"submit\"\n// events is still used, but was moved to jQuery.event.stopPropagation function\n// because `originalEvent` should point to the original event for the constancy\n// with other events and for more focused logic\n});jQuery.event.trigger(e,null,elem);if(e.isDefaultPrevented()){event.preventDefault();}}});jQuery.fn.extend({trigger:function trigger(type,data){return this.each(function(){jQuery.event.trigger(type,data,this);});},triggerHandler:function triggerHandler(type,data){var elem=this[0];if(elem){return jQuery.event.trigger(type,data,elem,true);}}});jQuery.each((\"blur focus focusin focusout load resize scroll unload click dblclick \"+\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \"+\"change select submit keydown keypress keyup error contextmenu\").split(\" \"),function(i,name){// Handle event binding\njQuery.fn[name]=function(data,fn){return arguments.length>0?this.on(name,null,data,fn):this.trigger(name);};});jQuery.fn.extend({hover:function hover(fnOver,fnOut){return this.mouseenter(fnOver).mouseleave(fnOut||fnOver);}});support.focusin=\"onfocusin\"in window;// Support: Firefox\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome, Safari\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\nif(!support.focusin){jQuery.each({focus:\"focusin\",blur:\"focusout\"},function(orig,fix){// Attach a single capturing handler on the document while someone wants focusin/focusout\nvar handler=function handler(event){jQuery.event.simulate(fix,event.target,jQuery.event.fix(event));};jQuery.event.special[fix]={setup:function setup(){var doc=this.ownerDocument||this,attaches=dataPriv.access(doc,fix);if(!attaches){doc.addEventListener(orig,handler,true);}dataPriv.access(doc,fix,(attaches||0)+1);},teardown:function teardown(){var doc=this.ownerDocument||this,attaches=dataPriv.access(doc,fix)-1;if(!attaches){doc.removeEventListener(orig,handler,true);dataPriv.remove(doc,fix);}else{dataPriv.access(doc,fix,attaches);}}};});}var location=window.location;var nonce=jQuery.now();var rquery=/\\?/;// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON=function(data){return JSON.parse(data+\"\");};// Cross-browser xml parsing\njQuery.parseXML=function(data){var xml;if(!data||typeof data!==\"string\"){return null;}// Support: IE9\ntry{xml=new window.DOMParser().parseFromString(data,\"text/xml\");}catch(e){xml=undefined;}if(!xml||xml.getElementsByTagName(\"parsererror\").length){jQuery.error(\"Invalid XML: \"+data);}return xml;};var rhash=/#.*$/,rts=/([?&])_=[^&]*/,rheaders=/^(.*?):[ \\t]*([^\\r\\n]*)$/mg,// #7653, #8125, #8152: local protocol detection\nrlocalProtocol=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,rnoContent=/^(?:GET|HEAD)$/,rprotocol=/^\\/\\//,/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */prefilters={},/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */transports={},// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\nallTypes=\"*/\".concat(\"*\"),// Anchor tag for parsing the document origin\noriginAnchor=document.createElement(\"a\");originAnchor.href=location.href;// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports(structure){// dataTypeExpression is optional and defaults to \"*\"\nreturn function(dataTypeExpression,func){if(typeof dataTypeExpression!==\"string\"){func=dataTypeExpression;dataTypeExpression=\"*\";}var dataType,i=0,dataTypes=dataTypeExpression.toLowerCase().match(rnotwhite)||[];if(jQuery.isFunction(func)){// For each dataType in the dataTypeExpression\nwhile(dataType=dataTypes[i++]){// Prepend if requested\nif(dataType[0]===\"+\"){dataType=dataType.slice(1)||\"*\";(structure[dataType]=structure[dataType]||[]).unshift(func);// Otherwise append\n}else{(structure[dataType]=structure[dataType]||[]).push(func);}}}};}// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports(structure,options,originalOptions,jqXHR){var inspected={},seekingTransport=structure===transports;function inspect(dataType){var selected;inspected[dataType]=true;jQuery.each(structure[dataType]||[],function(_,prefilterOrFactory){var dataTypeOrTransport=prefilterOrFactory(options,originalOptions,jqXHR);if(typeof dataTypeOrTransport===\"string\"&&!seekingTransport&&!inspected[dataTypeOrTransport]){options.dataTypes.unshift(dataTypeOrTransport);inspect(dataTypeOrTransport);return false;}else if(seekingTransport){return!(selected=dataTypeOrTransport);}});return selected;}return inspect(options.dataTypes[0])||!inspected[\"*\"]&&inspect(\"*\");}// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend(target,src){var key,deep,flatOptions=jQuery.ajaxSettings.flatOptions||{};for(key in src){if(src[key]!==undefined){(flatOptions[key]?target:deep||(deep={}))[key]=src[key];}}if(deep){jQuery.extend(true,target,deep);}return target;}/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */function ajaxHandleResponses(s,jqXHR,responses){var ct,type,finalDataType,firstDataType,contents=s.contents,dataTypes=s.dataTypes;// Remove auto dataType and get content-type in the process\nwhile(dataTypes[0]===\"*\"){dataTypes.shift();if(ct===undefined){ct=s.mimeType||jqXHR.getResponseHeader(\"Content-Type\");}}// Check if we're dealing with a known content-type\nif(ct){for(type in contents){if(contents[type]&&contents[type].test(ct)){dataTypes.unshift(type);break;}}}// Check to see if we have a response for the expected dataType\nif(dataTypes[0]in responses){finalDataType=dataTypes[0];}else{// Try convertible dataTypes\nfor(type in responses){if(!dataTypes[0]||s.converters[type+\" \"+dataTypes[0]]){finalDataType=type;break;}if(!firstDataType){firstDataType=type;}}// Or just use first one\nfinalDataType=finalDataType||firstDataType;}// If we found a dataType\n// We add the dataType to the list if needed\n// and return the corresponding response\nif(finalDataType){if(finalDataType!==dataTypes[0]){dataTypes.unshift(finalDataType);}return responses[finalDataType];}}/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */function ajaxConvert(s,response,jqXHR,isSuccess){var conv2,current,conv,tmp,prev,converters={},// Work with a copy of dataTypes in case we need to modify it for conversion\ndataTypes=s.dataTypes.slice();// Create converters map with lowercased keys\nif(dataTypes[1]){for(conv in s.converters){converters[conv.toLowerCase()]=s.converters[conv];}}current=dataTypes.shift();// Convert to each sequential dataType\nwhile(current){if(s.responseFields[current]){jqXHR[s.responseFields[current]]=response;}// Apply the dataFilter if provided\nif(!prev&&isSuccess&&s.dataFilter){response=s.dataFilter(response,s.dataType);}prev=current;current=dataTypes.shift();if(current){// There's only work to do if current dataType is non-auto\nif(current===\"*\"){current=prev;// Convert response if prev dataType is non-auto and differs from current\n}else if(prev!==\"*\"&&prev!==current){// Seek a direct converter\nconv=converters[prev+\" \"+current]||converters[\"* \"+current];// If none found, seek a pair\nif(!conv){for(conv2 in converters){// If conv2 outputs current\ntmp=conv2.split(\" \");if(tmp[1]===current){// If prev can be converted to accepted input\nconv=converters[prev+\" \"+tmp[0]]||converters[\"* \"+tmp[0]];if(conv){// Condense equivalence converters\nif(conv===true){conv=converters[conv2];// Otherwise, insert the intermediate dataType\n}else if(converters[conv2]!==true){current=tmp[0];dataTypes.unshift(tmp[1]);}break;}}}}// Apply converter (if not an equivalence)\nif(conv!==true){// Unless errors are allowed to bubble, catch and return them\nif(conv&&s.throws){response=conv(response);}else{try{response=conv(response);}catch(e){return{state:\"parsererror\",error:conv?e:\"No conversion from \"+prev+\" to \"+current};}}}}}}return{state:\"success\",data:response};}jQuery.extend({// Counter for holding the number of active queries\nactive:0,// Last-Modified header cache for next request\nlastModified:{},etag:{},ajaxSettings:{url:location.href,type:\"GET\",isLocal:rlocalProtocol.test(location.protocol),global:true,processData:true,async:true,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/accepts:{\"*\":allTypes,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},// Data converters\n// Keys separate source (or catchall \"*\") and destination types with a single space\nconverters:{// Convert anything to text\n\"* text\":String,// Text to html (true = no transformation)\n\"text html\":true,// Evaluate text as a json expression\n\"text json\":jQuery.parseJSON,// Parse text as xml\n\"text xml\":jQuery.parseXML},// For options that shouldn't be deep extended:\n// you can add your own custom options here if\n// and when you create one that shouldn't be\n// deep extended (see ajaxExtend)\nflatOptions:{url:true,context:true}},// Creates a full fledged settings object into target\n// with both ajaxSettings and settings fields.\n// If target is omitted, writes into ajaxSettings.\najaxSetup:function ajaxSetup(target,settings){return settings?// Building a settings object\najaxExtend(ajaxExtend(target,jQuery.ajaxSettings),settings):// Extending ajaxSettings\najaxExtend(jQuery.ajaxSettings,target);},ajaxPrefilter:addToPrefiltersOrTransports(prefilters),ajaxTransport:addToPrefiltersOrTransports(transports),// Main method\najax:function ajax(url,options){// If url is an object, simulate pre-1.5 signature\nif((typeof url===\"undefined\"?\"undefined\":_typeof(url))===\"object\"){options=url;url=undefined;}// Force options to be an object\noptions=options||{};var transport,// URL without anti-cache param\ncacheURL,// Response headers\nresponseHeadersString,responseHeaders,// timeout handle\ntimeoutTimer,// Url cleanup var\nurlAnchor,// To know if global events are to be dispatched\nfireGlobals,// Loop variable\ni,// Create the final options object\ns=jQuery.ajaxSetup({},options),// Callbacks context\ncallbackContext=s.context||s,// Context for global events is callbackContext if it is a DOM node or jQuery collection\nglobalEventContext=s.context&&(callbackContext.nodeType||callbackContext.jquery)?jQuery(callbackContext):jQuery.event,// Deferreds\ndeferred=jQuery.Deferred(),completeDeferred=jQuery.Callbacks(\"once memory\"),// Status-dependent callbacks\n_statusCode=s.statusCode||{},// Headers (they are sent all at once)\nrequestHeaders={},requestHeadersNames={},// The jqXHR state\nstate=0,// Default abort message\nstrAbort=\"canceled\",// Fake xhr\njqXHR={readyState:0,// Builds headers hashtable if needed\ngetResponseHeader:function getResponseHeader(key){var match;if(state===2){if(!responseHeaders){responseHeaders={};while(match=rheaders.exec(responseHeadersString)){responseHeaders[match[1].toLowerCase()]=match[2];}}match=responseHeaders[key.toLowerCase()];}return match==null?null:match;},// Raw string\ngetAllResponseHeaders:function getAllResponseHeaders(){return state===2?responseHeadersString:null;},// Caches the header\nsetRequestHeader:function setRequestHeader(name,value){var lname=name.toLowerCase();if(!state){name=requestHeadersNames[lname]=requestHeadersNames[lname]||name;requestHeaders[name]=value;}return this;},// Overrides response content-type header\noverrideMimeType:function overrideMimeType(type){if(!state){s.mimeType=type;}return this;},// Status-dependent callbacks\nstatusCode:function statusCode(map){var code;if(map){if(state<2){for(code in map){// Lazy-add the new callback in a way that preserves old ones\n_statusCode[code]=[_statusCode[code],map[code]];}}else{// Execute the appropriate callbacks\njqXHR.always(map[jqXHR.status]);}}return this;},// Cancel the request\nabort:function abort(statusText){var finalText=statusText||strAbort;if(transport){transport.abort(finalText);}done(0,finalText);return this;}};// Attach deferreds\ndeferred.promise(jqXHR).complete=completeDeferred.add;jqXHR.success=jqXHR.done;jqXHR.error=jqXHR.fail;// Remove hash character (#7531: and string promotion)\n// Add protocol if not provided (prefilters might expect it)\n// Handle falsy url in the settings object (#10093: consistency with old signature)\n// We also use the url parameter if available\ns.url=((url||s.url||location.href)+\"\").replace(rhash,\"\").replace(rprotocol,location.protocol+\"//\");// Alias method option to type as per ticket #12004\ns.type=options.method||options.type||s.method||s.type;// Extract dataTypes list\ns.dataTypes=jQuery.trim(s.dataType||\"*\").toLowerCase().match(rnotwhite)||[\"\"];// A cross-domain request is in order when the origin doesn't match the current origin.\nif(s.crossDomain==null){urlAnchor=document.createElement(\"a\");// Support: IE8-11+\n// IE throws exception if url is malformed, e.g. http://example.com:80x/\ntry{urlAnchor.href=s.url;// Support: IE8-11+\n// Anchor's host property isn't correctly set when s.url is relative\nurlAnchor.href=urlAnchor.href;s.crossDomain=originAnchor.protocol+\"//\"+originAnchor.host!==urlAnchor.protocol+\"//\"+urlAnchor.host;}catch(e){// If there is an error parsing the URL, assume it is crossDomain,\n// it can be rejected by the transport if it is invalid\ns.crossDomain=true;}}// Convert data if not already a string\nif(s.data&&s.processData&&typeof s.data!==\"string\"){s.data=jQuery.param(s.data,s.traditional);}// Apply prefilters\ninspectPrefiltersOrTransports(prefilters,s,options,jqXHR);// If request was aborted inside a prefilter, stop there\nif(state===2){return jqXHR;}// We can fire global events as of now if asked to\n// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\nfireGlobals=jQuery.event&&s.global;// Watch for a new set of requests\nif(fireGlobals&&jQuery.active++===0){jQuery.event.trigger(\"ajaxStart\");}// Uppercase the type\ns.type=s.type.toUpperCase();// Determine if request has content\ns.hasContent=!rnoContent.test(s.type);// Save the URL in case we're toying with the If-Modified-Since\n// and/or If-None-Match header later on\ncacheURL=s.url;// More options handling for requests with no content\nif(!s.hasContent){// If data is available, append data to url\nif(s.data){cacheURL=s.url+=(rquery.test(cacheURL)?\"&\":\"?\")+s.data;// #9682: remove data so that it's not used in an eventual retry\ndelete s.data;}// Add anti-cache in url if needed\nif(s.cache===false){s.url=rts.test(cacheURL)?// If there is already a '_' parameter, set its value\ncacheURL.replace(rts,\"$1_=\"+nonce++):// Otherwise add one to the end\ncacheURL+(rquery.test(cacheURL)?\"&\":\"?\")+\"_=\"+nonce++;}}// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\nif(s.ifModified){if(jQuery.lastModified[cacheURL]){jqXHR.setRequestHeader(\"If-Modified-Since\",jQuery.lastModified[cacheURL]);}if(jQuery.etag[cacheURL]){jqXHR.setRequestHeader(\"If-None-Match\",jQuery.etag[cacheURL]);}}// Set the correct header, if data is being sent\nif(s.data&&s.hasContent&&s.contentType!==false||options.contentType){jqXHR.setRequestHeader(\"Content-Type\",s.contentType);}// Set the Accepts header for the server, depending on the dataType\njqXHR.setRequestHeader(\"Accept\",s.dataTypes[0]&&s.accepts[s.dataTypes[0]]?s.accepts[s.dataTypes[0]]+(s.dataTypes[0]!==\"*\"?\", \"+allTypes+\"; q=0.01\":\"\"):s.accepts[\"*\"]);// Check for headers option\nfor(i in s.headers){jqXHR.setRequestHeader(i,s.headers[i]);}// Allow custom headers/mimetypes and early abort\nif(s.beforeSend&&(s.beforeSend.call(callbackContext,jqXHR,s)===false||state===2)){// Abort if not done already and return\nreturn jqXHR.abort();}// Aborting is no longer a cancellation\nstrAbort=\"abort\";// Install callbacks on deferreds\nfor(i in{success:1,error:1,complete:1}){jqXHR[i](s[i]);}// Get transport\ntransport=inspectPrefiltersOrTransports(transports,s,options,jqXHR);// If no transport, we auto-abort\nif(!transport){done(-1,\"No Transport\");}else{jqXHR.readyState=1;// Send global event\nif(fireGlobals){globalEventContext.trigger(\"ajaxSend\",[jqXHR,s]);}// If request was aborted inside ajaxSend, stop there\nif(state===2){return jqXHR;}// Timeout\nif(s.async&&s.timeout>0){timeoutTimer=window.setTimeout(function(){jqXHR.abort(\"timeout\");},s.timeout);}try{state=1;transport.send(requestHeaders,done);}catch(e){// Propagate exception as error if not done\nif(state<2){done(-1,e);// Simply rethrow otherwise\n}else{throw e;}}}// Callback for when everything is done\nfunction done(status,nativeStatusText,responses,headers){var isSuccess,success,error,response,modified,statusText=nativeStatusText;// Called once\nif(state===2){return;}// State is \"done\" now\nstate=2;// Clear timeout if it exists\nif(timeoutTimer){window.clearTimeout(timeoutTimer);}// Dereference transport for early garbage collection\n// (no matter how long the jqXHR object will be used)\ntransport=undefined;// Cache response headers\nresponseHeadersString=headers||\"\";// Set readyState\njqXHR.readyState=status>0?4:0;// Determine if successful\nisSuccess=status>=200&&status<300||status===304;// Get response data\nif(responses){response=ajaxHandleResponses(s,jqXHR,responses);}// Convert no matter what (that way responseXXX fields are always set)\nresponse=ajaxConvert(s,response,jqXHR,isSuccess);// If successful, handle type chaining\nif(isSuccess){// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\nif(s.ifModified){modified=jqXHR.getResponseHeader(\"Last-Modified\");if(modified){jQuery.lastModified[cacheURL]=modified;}modified=jqXHR.getResponseHeader(\"etag\");if(modified){jQuery.etag[cacheURL]=modified;}}// if no content\nif(status===204||s.type===\"HEAD\"){statusText=\"nocontent\";// if not modified\n}else if(status===304){statusText=\"notmodified\";// If we have data, let's convert it\n}else{statusText=response.state;success=response.data;error=response.error;isSuccess=!error;}}else{// Extract error from statusText and normalize for non-aborts\nerror=statusText;if(status||!statusText){statusText=\"error\";if(status<0){status=0;}}}// Set data for the fake xhr object\njqXHR.status=status;jqXHR.statusText=(nativeStatusText||statusText)+\"\";// Success/Error\nif(isSuccess){deferred.resolveWith(callbackContext,[success,statusText,jqXHR]);}else{deferred.rejectWith(callbackContext,[jqXHR,statusText,error]);}// Status-dependent callbacks\njqXHR.statusCode(_statusCode);_statusCode=undefined;if(fireGlobals){globalEventContext.trigger(isSuccess?\"ajaxSuccess\":\"ajaxError\",[jqXHR,s,isSuccess?success:error]);}// Complete\ncompleteDeferred.fireWith(callbackContext,[jqXHR,statusText]);if(fireGlobals){globalEventContext.trigger(\"ajaxComplete\",[jqXHR,s]);// Handle the global AJAX counter\nif(! --jQuery.active){jQuery.event.trigger(\"ajaxStop\");}}}return jqXHR;},getJSON:function getJSON(url,data,callback){return jQuery.get(url,data,callback,\"json\");},getScript:function getScript(url,callback){return jQuery.get(url,undefined,callback,\"script\");}});jQuery.each([\"get\",\"post\"],function(i,method){jQuery[method]=function(url,data,callback,type){// Shift arguments if data argument was omitted\nif(jQuery.isFunction(data)){type=type||callback;callback=data;data=undefined;}// The url can be an options object (which then must have .url)\nreturn jQuery.ajax(jQuery.extend({url:url,type:method,dataType:type,data:data,success:callback},jQuery.isPlainObject(url)&&url));};});jQuery._evalUrl=function(url){return jQuery.ajax({url:url,// Make this explicit, since user can override this through ajaxSetup (#11264)\ntype:\"GET\",dataType:\"script\",async:false,global:false,\"throws\":true});};jQuery.fn.extend({wrapAll:function wrapAll(html){var wrap;if(jQuery.isFunction(html)){return this.each(function(i){jQuery(this).wrapAll(html.call(this,i));});}if(this[0]){// The elements to wrap the target around\nwrap=jQuery(html,this[0].ownerDocument).eq(0).clone(true);if(this[0].parentNode){wrap.insertBefore(this[0]);}wrap.map(function(){var elem=this;while(elem.firstElementChild){elem=elem.firstElementChild;}return elem;}).append(this);}return this;},wrapInner:function wrapInner(html){if(jQuery.isFunction(html)){return this.each(function(i){jQuery(this).wrapInner(html.call(this,i));});}return this.each(function(){var self=jQuery(this),contents=self.contents();if(contents.length){contents.wrapAll(html);}else{self.append(html);}});},wrap:function wrap(html){var isFunction=jQuery.isFunction(html);return this.each(function(i){jQuery(this).wrapAll(isFunction?html.call(this,i):html);});},unwrap:function unwrap(){return this.parent().each(function(){if(!jQuery.nodeName(this,\"body\")){jQuery(this).replaceWith(this.childNodes);}}).end();}});jQuery.expr.filters.hidden=function(elem){return!jQuery.expr.filters.visible(elem);};jQuery.expr.filters.visible=function(elem){// Support: Opera <= 12.12\n// Opera reports offsetWidths and offsetHeights less than zero on some elements\n// Use OR instead of AND as the element is not visible if either is true\n// See tickets #10406 and #13132\nreturn elem.offsetWidth>0||elem.offsetHeight>0||elem.getClientRects().length>0;};var r20=/%20/g,rbracket=/\\[\\]$/,rCRLF=/\\r?\\n/g,rsubmitterTypes=/^(?:submit|button|image|reset|file)$/i,rsubmittable=/^(?:input|select|textarea|keygen)/i;function buildParams(prefix,obj,traditional,add){var name;if(jQuery.isArray(obj)){// Serialize array item.\njQuery.each(obj,function(i,v){if(traditional||rbracket.test(prefix)){// Treat each array item as a scalar.\nadd(prefix,v);}else{// Item is non-scalar (array or object), encode its numeric index.\nbuildParams(prefix+\"[\"+((typeof v===\"undefined\"?\"undefined\":_typeof(v))===\"object\"&&v!=null?i:\"\")+\"]\",v,traditional,add);}});}else if(!traditional&&jQuery.type(obj)===\"object\"){// Serialize object item.\nfor(name in obj){buildParams(prefix+\"[\"+name+\"]\",obj[name],traditional,add);}}else{// Serialize scalar item.\nadd(prefix,obj);}}// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param=function(a,traditional){var prefix,s=[],add=function add(key,value){// If value is a function, invoke it and return its value\nvalue=jQuery.isFunction(value)?value():value==null?\"\":value;s[s.length]=encodeURIComponent(key)+\"=\"+encodeURIComponent(value);};// Set traditional to true for jQuery <= 1.3.2 behavior.\nif(traditional===undefined){traditional=jQuery.ajaxSettings&&jQuery.ajaxSettings.traditional;}// If an array was passed in, assume that it is an array of form elements.\nif(jQuery.isArray(a)||a.jquery&&!jQuery.isPlainObject(a)){// Serialize the form elements\njQuery.each(a,function(){add(this.name,this.value);});}else{// If traditional, encode the \"old\" way (the way 1.3.2 or older\n// did it), otherwise encode params recursively.\nfor(prefix in a){buildParams(prefix,a[prefix],traditional,add);}}// Return the resulting serialization\nreturn s.join(\"&\").replace(r20,\"+\");};jQuery.fn.extend({serialize:function serialize(){return jQuery.param(this.serializeArray());},serializeArray:function serializeArray(){return this.map(function(){// Can add propHook for \"elements\" to filter or add form elements\nvar elements=jQuery.prop(this,\"elements\");return elements?jQuery.makeArray(elements):this;}).filter(function(){var type=this.type;// Use .is( \":disabled\" ) so that fieldset[disabled] works\nreturn this.name&&!jQuery(this).is(\":disabled\")&&rsubmittable.test(this.nodeName)&&!rsubmitterTypes.test(type)&&(this.checked||!rcheckableType.test(type));}).map(function(i,elem){var val=jQuery(this).val();return val==null?null:jQuery.isArray(val)?jQuery.map(val,function(val){return{name:elem.name,value:val.replace(rCRLF,\"\\r\\n\")};}):{name:elem.name,value:val.replace(rCRLF,\"\\r\\n\")};}).get();}});jQuery.ajaxSettings.xhr=function(){try{return new window.XMLHttpRequest();}catch(e){}};var xhrSuccessStatus={// File protocol always yields status code 0, assume 200\n0:200,// Support: IE9\n// #1450: sometimes IE returns 1223 when it should be 204\n1223:204},xhrSupported=jQuery.ajaxSettings.xhr();support.cors=!!xhrSupported&&\"withCredentials\"in xhrSupported;support.ajax=xhrSupported=!!xhrSupported;jQuery.ajaxTransport(function(options){var _callback,errorCallback;// Cross domain only allowed if supported through XMLHttpRequest\nif(support.cors||xhrSupported&&!options.crossDomain){return{send:function send(headers,complete){var i,xhr=options.xhr();xhr.open(options.type,options.url,options.async,options.username,options.password);// Apply custom fields if provided\nif(options.xhrFields){for(i in options.xhrFields){xhr[i]=options.xhrFields[i];}}// Override mime type if needed\nif(options.mimeType&&xhr.overrideMimeType){xhr.overrideMimeType(options.mimeType);}// X-Requested-With header\n// For cross-domain requests, seeing as conditions for a preflight are\n// akin to a jigsaw puzzle, we simply never set it to be sure.\n// (it can always be set on a per-request basis or even using ajaxSetup)\n// For same-domain requests, won't change header if already provided.\nif(!options.crossDomain&&!headers[\"X-Requested-With\"]){headers[\"X-Requested-With\"]=\"XMLHttpRequest\";}// Set headers\nfor(i in headers){xhr.setRequestHeader(i,headers[i]);}// Callback\n_callback=function callback(type){return function(){if(_callback){_callback=errorCallback=xhr.onload=xhr.onerror=xhr.onabort=xhr.onreadystatechange=null;if(type===\"abort\"){xhr.abort();}else if(type===\"error\"){// Support: IE9\n// On a manual native abort, IE9 throws\n// errors on any property access that is not readyState\nif(typeof xhr.status!==\"number\"){complete(0,\"error\");}else{complete(// File: protocol always yields status 0; see #8605, #14207\nxhr.status,xhr.statusText);}}else{complete(xhrSuccessStatus[xhr.status]||xhr.status,xhr.statusText,// Support: IE9 only\n// IE9 has no XHR2 but throws on binary (trac-11426)\n// For XHR2 non-text, let the caller handle it (gh-2498)\n(xhr.responseType||\"text\")!==\"text\"||typeof xhr.responseText!==\"string\"?{binary:xhr.response}:{text:xhr.responseText},xhr.getAllResponseHeaders());}}};};// Listen to events\nxhr.onload=_callback();errorCallback=xhr.onerror=_callback(\"error\");// Support: IE9\n// Use onreadystatechange to replace onabort\n// to handle uncaught aborts\nif(xhr.onabort!==undefined){xhr.onabort=errorCallback;}else{xhr.onreadystatechange=function(){// Check readyState before timeout as it changes\nif(xhr.readyState===4){// Allow onerror to be called first,\n// but that will not handle a native abort\n// Also, save errorCallback to a variable\n// as xhr.onerror cannot be accessed\nwindow.setTimeout(function(){if(_callback){errorCallback();}});}};}// Create the abort callback\n_callback=_callback(\"abort\");try{// Do send the request (this may raise an exception)\nxhr.send(options.hasContent&&options.data||null);}catch(e){// #14683: Only rethrow if this hasn't been notified as an error yet\nif(_callback){throw e;}}},abort:function abort(){if(_callback){_callback();}}};}});// Install script dataType\njQuery.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, \"+\"application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function textScript(text){jQuery.globalEval(text);return text;}}});// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter(\"script\",function(s){if(s.cache===undefined){s.cache=false;}if(s.crossDomain){s.type=\"GET\";}});// Bind script tag hack transport\njQuery.ajaxTransport(\"script\",function(s){// This transport only deals with cross domain requests\nif(s.crossDomain){var script,_callback2;return{send:function send(_,complete){script=jQuery(\"<script>\").prop({charset:s.scriptCharset,src:s.url}).on(\"load error\",_callback2=function callback(evt){script.remove();_callback2=null;if(evt){complete(evt.type===\"error\"?404:200,evt.type);}});// Use native DOM manipulation to avoid our domManip AJAX trickery\ndocument.head.appendChild(script[0]);},abort:function abort(){if(_callback2){_callback2();}}};}});var oldCallbacks=[],rjsonp=/(=)\\?(?=&|$)|\\?\\?/;// Default jsonp settings\njQuery.ajaxSetup({jsonp:\"callback\",jsonpCallback:function jsonpCallback(){var callback=oldCallbacks.pop()||jQuery.expando+\"_\"+nonce++;this[callback]=true;return callback;}});// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter(\"json jsonp\",function(s,originalSettings,jqXHR){var callbackName,overwritten,responseContainer,jsonProp=s.jsonp!==false&&(rjsonp.test(s.url)?\"url\":typeof s.data===\"string\"&&(s.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")===0&&rjsonp.test(s.data)&&\"data\");// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\nif(jsonProp||s.dataTypes[0]===\"jsonp\"){// Get callback name, remembering preexisting value associated with it\ncallbackName=s.jsonpCallback=jQuery.isFunction(s.jsonpCallback)?s.jsonpCallback():s.jsonpCallback;// Insert callback into url or form data\nif(jsonProp){s[jsonProp]=s[jsonProp].replace(rjsonp,\"$1\"+callbackName);}else if(s.jsonp!==false){s.url+=(rquery.test(s.url)?\"&\":\"?\")+s.jsonp+\"=\"+callbackName;}// Use data converter to retrieve json after script execution\ns.converters[\"script json\"]=function(){if(!responseContainer){jQuery.error(callbackName+\" was not called\");}return responseContainer[0];};// Force json dataType\ns.dataTypes[0]=\"json\";// Install callback\noverwritten=window[callbackName];window[callbackName]=function(){responseContainer=arguments;};// Clean-up function (fires after converters)\njqXHR.always(function(){// If previous value didn't exist - remove it\nif(overwritten===undefined){jQuery(window).removeProp(callbackName);// Otherwise restore preexisting value\n}else{window[callbackName]=overwritten;}// Save back as free\nif(s[callbackName]){// Make sure that re-using the options doesn't screw things around\ns.jsonpCallback=originalSettings.jsonpCallback;// Save the callback name for future use\noldCallbacks.push(callbackName);}// Call if it was a function and we have a response\nif(responseContainer&&jQuery.isFunction(overwritten)){overwritten(responseContainer[0]);}responseContainer=overwritten=undefined;});// Delegate to script\nreturn\"script\";}});// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML=function(data,context,keepScripts){if(!data||typeof data!==\"string\"){return null;}if(typeof context===\"boolean\"){keepScripts=context;context=false;}context=context||document;var parsed=rsingleTag.exec(data),scripts=!keepScripts&&[];// Single tag\nif(parsed){return[context.createElement(parsed[1])];}parsed=buildFragment([data],context,scripts);if(scripts&&scripts.length){jQuery(scripts).remove();}return jQuery.merge([],parsed.childNodes);};// Keep a copy of the old load method\nvar _load=jQuery.fn.load;/**\n * Load a url into a page\n */jQuery.fn.load=function(url,params,callback){if(typeof url!==\"string\"&&_load){return _load.apply(this,arguments);}var selector,type,response,self=this,off=url.indexOf(\" \");if(off>-1){selector=jQuery.trim(url.slice(off));url=url.slice(0,off);}// If it's a function\nif(jQuery.isFunction(params)){// We assume that it's the callback\ncallback=params;params=undefined;// Otherwise, build a param string\n}else if(params&&(typeof params===\"undefined\"?\"undefined\":_typeof(params))===\"object\"){type=\"POST\";}// If we have elements to modify, make the request\nif(self.length>0){jQuery.ajax({url:url,// If \"type\" variable is undefined, then \"GET\" method will be used.\n// Make value of this field explicit since\n// user can override it through ajaxSetup method\ntype:type||\"GET\",dataType:\"html\",data:params}).done(function(responseText){// Save response for use in complete callback\nresponse=arguments;self.html(selector?// If a selector was specified, locate the right elements in a dummy div\n// Exclude scripts to avoid IE 'Permission Denied' errors\njQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector):// Otherwise use the full result\nresponseText);// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n// but they are ignored because response was set above.\n// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n}).always(callback&&function(jqXHR,status){self.each(function(){callback.apply(this,response||[jqXHR.responseText,status,jqXHR]);});});}return this;};// Attach a bunch of functions for handling common AJAX events\njQuery.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(i,type){jQuery.fn[type]=function(fn){return this.on(type,fn);};});jQuery.expr.filters.animated=function(elem){return jQuery.grep(jQuery.timers,function(fn){return elem===fn.elem;}).length;};/**\n * Gets a window from an element\n */function getWindow(elem){return jQuery.isWindow(elem)?elem:elem.nodeType===9&&elem.defaultView;}jQuery.offset={setOffset:function setOffset(elem,options,i){var curPosition,curLeft,curCSSTop,curTop,curOffset,curCSSLeft,calculatePosition,position=jQuery.css(elem,\"position\"),curElem=jQuery(elem),props={};// Set position first, in-case top/left are set even on static elem\nif(position===\"static\"){elem.style.position=\"relative\";}curOffset=curElem.offset();curCSSTop=jQuery.css(elem,\"top\");curCSSLeft=jQuery.css(elem,\"left\");calculatePosition=(position===\"absolute\"||position===\"fixed\")&&(curCSSTop+curCSSLeft).indexOf(\"auto\")>-1;// Need to be able to calculate position if either\n// top or left is auto and position is either absolute or fixed\nif(calculatePosition){curPosition=curElem.position();curTop=curPosition.top;curLeft=curPosition.left;}else{curTop=parseFloat(curCSSTop)||0;curLeft=parseFloat(curCSSLeft)||0;}if(jQuery.isFunction(options)){// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\noptions=options.call(elem,i,jQuery.extend({},curOffset));}if(options.top!=null){props.top=options.top-curOffset.top+curTop;}if(options.left!=null){props.left=options.left-curOffset.left+curLeft;}if(\"using\"in options){options.using.call(elem,props);}else{curElem.css(props);}}};jQuery.fn.extend({offset:function offset(options){if(arguments.length){return options===undefined?this:this.each(function(i){jQuery.offset.setOffset(this,options,i);});}var docElem,win,elem=this[0],box={top:0,left:0},doc=elem&&elem.ownerDocument;if(!doc){return;}docElem=doc.documentElement;// Make sure it's not a disconnected DOM node\nif(!jQuery.contains(docElem,elem)){return box;}box=elem.getBoundingClientRect();win=getWindow(doc);return{top:box.top+win.pageYOffset-docElem.clientTop,left:box.left+win.pageXOffset-docElem.clientLeft};},position:function position(){if(!this[0]){return;}var offsetParent,offset,elem=this[0],parentOffset={top:0,left:0};// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n// because it is its only offset parent\nif(jQuery.css(elem,\"position\")===\"fixed\"){// Assume getBoundingClientRect is there when computed position is fixed\noffset=elem.getBoundingClientRect();}else{// Get *real* offsetParent\noffsetParent=this.offsetParent();// Get correct offsets\noffset=this.offset();if(!jQuery.nodeName(offsetParent[0],\"html\")){parentOffset=offsetParent.offset();}// Add offsetParent borders\nparentOffset.top+=jQuery.css(offsetParent[0],\"borderTopWidth\",true);parentOffset.left+=jQuery.css(offsetParent[0],\"borderLeftWidth\",true);}// Subtract parent offsets and element margins\nreturn{top:offset.top-parentOffset.top-jQuery.css(elem,\"marginTop\",true),left:offset.left-parentOffset.left-jQuery.css(elem,\"marginLeft\",true)};},// This method will return documentElement in the following cases:\n// 1) For the element inside the iframe without offsetParent, this method will return\n//    documentElement of the parent window\n// 2) For the hidden or detached element\n// 3) For body or html element, i.e. in case of the html node - it will return itself\n//\n// but those exceptions were never presented as a real life use-cases\n// and might be considered as more preferable results.\n//\n// This logic, however, is not guaranteed and can change at any point in the future\noffsetParent:function offsetParent(){return this.map(function(){var offsetParent=this.offsetParent;while(offsetParent&&jQuery.css(offsetParent,\"position\")===\"static\"){offsetParent=offsetParent.offsetParent;}return offsetParent||documentElement;});}});// Create scrollLeft and scrollTop methods\njQuery.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(method,prop){var top=\"pageYOffset\"===prop;jQuery.fn[method]=function(val){return access(this,function(elem,method,val){var win=getWindow(elem);if(val===undefined){return win?win[prop]:elem[method];}if(win){win.scrollTo(!top?val:win.pageXOffset,top?val:win.pageYOffset);}else{elem[method]=val;}},method,val,arguments.length);};});// Support: Safari<7-8+, Chrome<37-44+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each([\"top\",\"left\"],function(i,prop){jQuery.cssHooks[prop]=addGetHookIf(support.pixelPosition,function(elem,computed){if(computed){computed=curCSS(elem,prop);// If curCSS returns percentage, fallback to offset\nreturn rnumnonpx.test(computed)?jQuery(elem).position()[prop]+\"px\":computed;}});});// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each({Height:\"height\",Width:\"width\"},function(name,type){jQuery.each({padding:\"inner\"+name,content:type,\"\":\"outer\"+name},function(defaultExtra,funcName){// Margin is only for outerHeight, outerWidth\njQuery.fn[funcName]=function(margin,value){var chainable=arguments.length&&(defaultExtra||typeof margin!==\"boolean\"),extra=defaultExtra||(margin===true||value===true?\"margin\":\"border\");return access(this,function(elem,type,value){var doc;if(jQuery.isWindow(elem)){// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n// isn't a whole lot we can do. See pull request at this URL for discussion:\n// https://github.com/jquery/jquery/pull/764\nreturn elem.document.documentElement[\"client\"+name];}// Get document width or height\nif(elem.nodeType===9){doc=elem.documentElement;// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n// whichever is greatest\nreturn Math.max(elem.body[\"scroll\"+name],doc[\"scroll\"+name],elem.body[\"offset\"+name],doc[\"offset\"+name],doc[\"client\"+name]);}return value===undefined?// Get width or height on the element, requesting but not forcing parseFloat\njQuery.css(elem,type,extra):// Set width or height on the element\njQuery.style(elem,type,value,extra);},type,chainable?margin:undefined,chainable,null);};});});jQuery.fn.extend({bind:function bind(types,data,fn){return this.on(types,null,data,fn);},unbind:function unbind(types,fn){return this.off(types,null,fn);},delegate:function delegate(selector,types,data,fn){return this.on(types,selector,data,fn);},undelegate:function undelegate(selector,types,fn){// ( namespace ) or ( selector, types [, fn] )\nreturn arguments.length===1?this.off(selector,\"**\"):this.off(types,selector||\"**\",fn);},size:function size(){return this.length;}});jQuery.fn.andSelf=jQuery.fn.addBack;// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\nif(typeof define===\"function\"&&define.amd){define(\"jquery\",[],function(){return jQuery;});}var// Map over jQuery in case of overwrite\n_jQuery=window.jQuery,// Map over the $ in case of overwrite\n_$=window.$;jQuery.noConflict=function(deep){if(window.$===jQuery){window.$=_$;}if(deep&&window.jQuery===jQuery){window.jQuery=_jQuery;}return jQuery;};// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif(!noGlobal){window.jQuery=window.$=jQuery;}return jQuery;});\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _jquery = require(\"./jquery/dist/jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * jQuery mmenu v5.3.4\n * @requires jQuery 1.7.0 or later\n *\n * mmenu.frebsite.nl\n *\n * Copyright (c) Fred Heusschen\n * www.frebsite.nl\n *\n * Licensed under the MIT license:\n * http://en.wikipedia.org/wiki/MIT_License\n */\n!function (e) {\n  function t() {\n    e[n].glbl || (l = { $wndw: e(window), $html: e(\"html\"), $body: e(\"body\") }, a = {}, i = {}, r = {}, e.each([a, i, r], function (e, t) {\n      t.add = function (e) {\n        e = e.split(\" \");for (var n = 0, s = e.length; s > n; n++) {\n          t[e[n]] = t.mm(e[n]);\n        }\n      };\n    }), a.mm = function (e) {\n      return \"mm-\" + e;\n    }, a.add(\"wrapper menu panel nopanel current highest opened subopened navbar hasnavbar title btn prev next listview nolistview inset vertical selected divider spacer hidden fullsubopen\"), a.umm = function (e) {\n      return \"mm-\" == e.slice(0, 3) && (e = e.slice(3)), e;\n    }, i.mm = function (e) {\n      return \"mm-\" + e;\n    }, i.add(\"parent sub\"), r.mm = function (e) {\n      return e + \".mm\";\n    }, r.add(\"transitionend webkitTransitionEnd mousedown mouseup touchstart touchmove touchend click keydown\"), e[n]._c = a, e[n]._d = i, e[n]._e = r, e[n].glbl = l);\n  }var n = \"mmenu\",\n      s = \"5.3.4\";if (!e[n]) {\n    e[n] = function (e, t, n) {\n      this.$menu = e, this._api = [\"bind\", \"init\", \"update\", \"setSelected\", \"getInstance\", \"openPanel\", \"closePanel\", \"closeAllPanels\"], this.opts = t, this.conf = n, this.vars = {}, this.cbck = {}, \"function\" == typeof this.___deprecated && this.___deprecated(), this._initMenu(), this._initAnchors();var s = this.$menu.children(this.conf.panelNodetype);return this._initAddons(), this.init(s), \"function\" == typeof this.___debug && this.___debug(), this;\n    }, e[n].version = s, e[n].addons = {}, e[n].uniqueId = 0, e[n].defaults = { extensions: [], navbar: { add: !0, title: \"Menu\", titleLink: \"panel\" }, onClick: { setSelected: !0 }, slidingSubmenus: !0 }, e[n].configuration = { classNames: { divider: \"Divider\", inset: \"Inset\", panel: \"Panel\", selected: \"Selected\", spacer: \"Spacer\", vertical: \"Vertical\" }, clone: !1, openingInterval: 25, panelNodetype: \"ul, ol, div\", transitionDuration: 400 }, e[n].prototype = { init: function init(e) {\n        e = e.not(\".\" + a.nopanel), e = this._initPanels(e), this.trigger(\"init\", e), this.trigger(\"update\");\n      }, update: function update() {\n        this.trigger(\"update\");\n      }, setSelected: function setSelected(e) {\n        this.$menu.find(\".\" + a.listview).children().removeClass(a.selected), e.addClass(a.selected), this.trigger(\"setSelected\", e);\n      }, openPanel: function openPanel(t) {\n        var s = t.parent();if (s.hasClass(a.vertical)) {\n          var i = s.parents(\".\" + a.subopened);if (i.length) return this.openPanel(i.first());s.addClass(a.opened);\n        } else {\n          if (t.hasClass(a.current)) return;var r = this.$menu.children(\".\" + a.panel),\n              l = r.filter(\".\" + a.current);r.removeClass(a.highest).removeClass(a.current).not(t).not(l).not(\".\" + a.vertical).addClass(a.hidden), e[n].support.csstransitions || l.addClass(a.hidden), t.hasClass(a.opened) ? t.nextAll(\".\" + a.opened).addClass(a.highest).removeClass(a.opened).removeClass(a.subopened) : (t.addClass(a.highest), l.addClass(a.subopened)), t.removeClass(a.hidden).addClass(a.current), setTimeout(function () {\n            t.removeClass(a.subopened).addClass(a.opened);\n          }, this.conf.openingInterval);\n        }this.trigger(\"openPanel\", t);\n      }, closePanel: function closePanel(e) {\n        var t = e.parent();t.hasClass(a.vertical) && (t.removeClass(a.opened), this.trigger(\"closePanel\", e));\n      }, closeAllPanels: function closeAllPanels() {\n        this.$menu.find(\".\" + a.listview).children().removeClass(a.selected).filter(\".\" + a.vertical).removeClass(a.opened);var e = this.$menu.children(\".\" + a.panel),\n            t = e.first();this.$menu.children(\".\" + a.panel).not(t).removeClass(a.subopened).removeClass(a.opened).removeClass(a.current).removeClass(a.highest).addClass(a.hidden), this.openPanel(t);\n      }, togglePanel: function togglePanel(e) {\n        var t = e.parent();t.hasClass(a.vertical) && this[t.hasClass(a.opened) ? \"closePanel\" : \"openPanel\"](e);\n      }, getInstance: function getInstance() {\n        return this;\n      }, bind: function bind(e, t) {\n        this.cbck[e] = this.cbck[e] || [], this.cbck[e].push(t);\n      }, trigger: function trigger() {\n        var e = this,\n            t = Array.prototype.slice.call(arguments),\n            n = t.shift();if (this.cbck[n]) for (var s = 0, a = this.cbck[n].length; a > s; s++) {\n          this.cbck[n][s].apply(e, t);\n        }\n      }, _initMenu: function _initMenu() {\n        this.opts.offCanvas && this.conf.clone && (this.$menu = this.$menu.clone(!0), this.$menu.add(this.$menu.find(\"[id]\")).filter(\"[id]\").each(function () {\n          e(this).attr(\"id\", a.mm(e(this).attr(\"id\")));\n        })), this.$menu.contents().each(function () {\n          3 == e(this)[0].nodeType && e(this).remove();\n        }), this.$menu.parent().addClass(a.wrapper);var t = [a.menu];this.opts.slidingSubmenus || t.push(a.vertical), this.opts.extensions = this.opts.extensions.length ? \"mm-\" + this.opts.extensions.join(\" mm-\") : \"\", this.opts.extensions && t.push(this.opts.extensions), this.$menu.addClass(t.join(\" \"));\n      }, _initPanels: function _initPanels(t) {\n        var n = this,\n            s = this.__findAddBack(t, \"ul, ol\");this.__refactorClass(s, this.conf.classNames.inset, \"inset\").addClass(a.nolistview + \" \" + a.nopanel), s.not(\".\" + a.nolistview).addClass(a.listview);var r = this.__findAddBack(t, \".\" + a.listview).children();this.__refactorClass(r, this.conf.classNames.selected, \"selected\"), this.__refactorClass(r, this.conf.classNames.divider, \"divider\"), this.__refactorClass(r, this.conf.classNames.spacer, \"spacer\"), this.__refactorClass(this.__findAddBack(t, \".\" + this.conf.classNames.panel), this.conf.classNames.panel, \"panel\");var l = e(),\n            d = t.add(t.find(\".\" + a.panel)).add(this.__findAddBack(t, \".\" + a.listview).children().children(this.conf.panelNodetype)).not(\".\" + a.nopanel);this.__refactorClass(d, this.conf.classNames.vertical, \"vertical\"), this.opts.slidingSubmenus || d.addClass(a.vertical), d.each(function () {\n          var t = e(this),\n              s = t;t.is(\"ul, ol\") ? (t.wrap('<div class=\"' + a.panel + '\" />'), s = t.parent()) : s.addClass(a.panel);var i = t.attr(\"id\");t.removeAttr(\"id\"), s.attr(\"id\", i || n.__getUniqueId()), t.hasClass(a.vertical) && (t.removeClass(n.conf.classNames.vertical), s.add(s.parent()).addClass(a.vertical)), l = l.add(s);\n        });var o = e(\".\" + a.panel, this.$menu);l.each(function () {\n          var t = e(this),\n              s = t.parent(),\n              r = s.children(\"a, span\").first();if (s.is(\".\" + a.menu) || (s.data(i.sub, t), t.data(i.parent, s)), !s.children(\".\" + a.next).length && s.parent().is(\".\" + a.listview)) {\n            var l = t.attr(\"id\"),\n                d = e('<a class=\"' + a.next + '\" href=\"#' + l + '\" data-target=\"#' + l + '\" />').insertBefore(r);r.is(\"span\") && d.addClass(a.fullsubopen);\n          }if (!t.children(\".\" + a.navbar).length && !s.hasClass(a.vertical)) {\n            if (s.parent().is(\".\" + a.listview)) var s = s.closest(\".\" + a.panel);else var r = s.closest(\".\" + a.panel).find('a[href=\"#' + t.attr(\"id\") + '\"]').first(),\n                s = r.closest(\".\" + a.panel);var o = e('<div class=\"' + a.navbar + '\" />');if (s.length) {\n              var l = s.attr(\"id\");var _url;switch (n.opts.navbar.titleLink) {case \"anchor\":\n                  _url = r.attr(\"href\");break;case \"panel\":case \"parent\":\n                  _url = \"#\" + l;break;case \"none\":default:\n                  _url = !1;}o.append('<a class=\"' + a.btn + \" \" + a.prev + '\" href=\"#' + l + '\" data-target=\"#' + l + '\"></a>').append('<a class=\"' + a.title + '\"' + (_url ? ' href=\"' + _url + '\"' : \"\") + \">\" + r.text() + \"</a>\").prependTo(t), n.opts.navbar.add && t.addClass(a.hasnavbar);\n            } else n.opts.navbar.title && (o.append('<a class=\"' + a.title + '\">' + n.opts.navbar.title + \"</a>\").prependTo(t), n.opts.navbar.add && t.addClass(a.hasnavbar));\n          }\n        });var c = this.__findAddBack(t, \".\" + a.listview).children(\".\" + a.selected).removeClass(a.selected).last().addClass(a.selected);c.add(c.parentsUntil(\".\" + a.menu, \"li\")).filter(\".\" + a.vertical).addClass(a.opened).end().not(\".\" + a.vertical).each(function () {\n          e(this).parentsUntil(\".\" + a.menu, \".\" + a.panel).not(\".\" + a.vertical).first().addClass(a.opened).parentsUntil(\".\" + a.menu, \".\" + a.panel).not(\".\" + a.vertical).first().addClass(a.opened).addClass(a.subopened);\n        }), c.children(\".\" + a.panel).not(\".\" + a.vertical).addClass(a.opened).parentsUntil(\".\" + a.menu, \".\" + a.panel).not(\".\" + a.vertical).first().addClass(a.opened).addClass(a.subopened);var u = o.filter(\".\" + a.opened);return u.length || (u = l.first()), u.addClass(a.opened).last().addClass(a.current), l.not(\".\" + a.vertical).not(u.last()).addClass(a.hidden).end().appendTo(this.$menu), l;\n      }, _initAnchors: function _initAnchors() {\n        var t = this;l.$body.on(r.click + \"-oncanvas\", \"a[href]\", function (s) {\n          var i = e(this),\n              r = !1,\n              d = t.$menu.find(i).length;for (var o in e[n].addons) {\n            if (r = e[n].addons[o].clickAnchor.call(t, i, d)) break;\n          }if (!r && d) {\n            var c = i.attr(\"href\");if (c.length > 1 && \"#\" == c.slice(0, 1)) try {\n              var u = e(c, t.$menu);u.is(\".\" + a.panel) && (r = !0, t[i.parent().hasClass(a.vertical) ? \"togglePanel\" : \"openPanel\"](u));\n            } catch (h) {}\n          }if (r && s.preventDefault(), !r && d && i.is(\".\" + a.listview + \" > li > a\") && !i.is('[rel=\"external\"]') && !i.is('[target=\"_blank\"]')) {\n            t.__valueOrFn(t.opts.onClick.setSelected, i) && t.setSelected(e(s.target).parent());var p = t.__valueOrFn(t.opts.onClick.preventDefault, i, \"#\" == c.slice(0, 1));p && s.preventDefault(), t.__valueOrFn(t.opts.onClick.blockUI, i, !p) && l.$html.addClass(a.blocking), t.__valueOrFn(t.opts.onClick.close, i, p) && t.close();\n          }\n        });\n      }, _initAddons: function _initAddons() {\n        for (var t in e[n].addons) {\n          e[n].addons[t].add.call(this), e[n].addons[t].add = function () {};\n        }for (var t in e[n].addons) {\n          e[n].addons[t].setup.call(this);\n        }\n      }, __api: function __api() {\n        var t = this,\n            n = {};return e.each(this._api, function () {\n          var e = this;n[e] = function () {\n            var s = t[e].apply(t, arguments);return \"undefined\" == typeof s ? n : s;\n          };\n        }), n;\n      }, __valueOrFn: function __valueOrFn(e, t, n) {\n        return \"function\" == typeof e ? e.call(t[0]) : \"undefined\" == typeof e && \"undefined\" != typeof n ? n : e;\n      }, __refactorClass: function __refactorClass(e, t, n) {\n        return e.filter(\".\" + t).removeClass(t).addClass(a[n]);\n      }, __findAddBack: function __findAddBack(e, t) {\n        return e.find(t).add(e.filter(t));\n      }, __filterListItems: function __filterListItems(e) {\n        return e.not(\".\" + a.divider).not(\".\" + a.hidden);\n      }, __transitionend: function __transitionend(e, t, n) {\n        var s = !1,\n            a = function a() {\n          s || t.call(e[0]), s = !0;\n        };e.one(r.transitionend, a), e.one(r.webkitTransitionEnd, a), setTimeout(a, 1.1 * n);\n      }, __getUniqueId: function __getUniqueId() {\n        return a.mm(e[n].uniqueId++);\n      } }, e.fn[n] = function (s, a) {\n      return t(), s = e.extend(!0, {}, e[n].defaults, s), a = e.extend(!0, {}, e[n].configuration, a), this.each(function () {\n        var t = e(this);if (!t.data(n)) {\n          var i = new e[n](t, s, a);t.data(n, i.__api());\n        }\n      });\n    }, e[n].support = { touch: \"ontouchstart\" in window || navigator.msMaxTouchPoints, csstransitions: function () {\n        if (\"undefined\" != typeof Modernizr) return Modernizr.csstransitions;var e = document.body || document.documentElement,\n            t = e.style,\n            n = \"transition\";if (\"string\" == typeof t[n]) return !0;var s = [\"Moz\", \"webkit\", \"Webkit\", \"Khtml\", \"O\", \"ms\"];n = n.charAt(0).toUpperCase() + n.substr(1);for (var a = 0; a < s.length; a++) {\n          if (\"string\" == typeof t[s[a] + n]) return !0;\n        }return !1;\n      }() };var a, i, r, l;\n  }\n}(_jquery2.default);\n/*\n * jQuery mmenu offCanvas addon\n * mmenu.frebsite.nl\n *\n * Copyright (c) Fred Heusschen\n */\n!function (t) {\n  var e = \"mmenu\",\n      o = \"offCanvas\";t[e].addons[o] = { setup: function setup() {\n      if (this.opts[o]) {\n        var n = this.opts[o],\n            i = this.conf[o];a = t[e].glbl, this._api = t.merge(this._api, [\"open\", \"close\", \"setPage\"]), (\"top\" == n.position || \"bottom\" == n.position) && (n.zposition = \"front\"), \"string\" != typeof i.pageSelector && (i.pageSelector = \"> \" + i.pageNodetype), a.$allMenus = (a.$allMenus || t()).add(this.$menu), this.vars.opened = !1;var r = [s.offcanvas];\"left\" != n.position && r.push(s.mm(n.position)), \"back\" != n.zposition && r.push(s.mm(n.zposition)), this.$menu.addClass(r.join(\" \")).parent().removeClass(s.wrapper), this.setPage(a.$page), this._initBlocker(), this[\"_initWindow_\" + o](), this.$menu[i.menuInjectMethod + \"To\"](i.menuWrapperSelector);\n      }\n    }, add: function add() {\n      s = t[e]._c, n = t[e]._d, i = t[e]._e, s.add(\"offcanvas slideout modal background opening blocker page\"), n.add(\"style\"), i.add(\"resize\");\n    }, clickAnchor: function clickAnchor(t) {\n      if (!this.opts[o]) return !1;var e = this.$menu.attr(\"id\");if (e && e.length && (this.conf.clone && (e = s.umm(e)), t.is('[href=\"#' + e + '\"]'))) return this.open(), !0;if (a.$page) {\n        var e = a.$page.first().attr(\"id\");return e && e.length && t.is('[href=\"#' + e + '\"]') ? (this.close(), !0) : !1;\n      }\n    } }, t[e].defaults[o] = { position: \"left\", zposition: \"back\", modal: !1, moveBackground: !0 }, t[e].configuration[o] = { pageNodetype: \"div\", pageSelector: null, wrapPageIfNeeded: !0, menuWrapperSelector: \"body\", menuInjectMethod: \"prepend\" }, t[e].prototype.open = function () {\n    if (!this.vars.opened) {\n      var t = this;this._openSetup(), setTimeout(function () {\n        t._openFinish();\n      }, this.conf.openingInterval), this.trigger(\"open\");\n    }\n  }, t[e].prototype._openSetup = function () {\n    var e = this;this.closeAllOthers(), a.$page.each(function () {\n      t(this).data(n.style, t(this).attr(\"style\") || \"\");\n    }), a.$wndw.trigger(i.resize + \"-offcanvas\", [!0]);var r = [s.opened];this.opts[o].modal && r.push(s.modal), this.opts[o].moveBackground && r.push(s.background), \"left\" != this.opts[o].position && r.push(s.mm(this.opts[o].position)), \"back\" != this.opts[o].zposition && r.push(s.mm(this.opts[o].zposition)), this.opts.extensions && r.push(this.opts.extensions), a.$html.addClass(r.join(\" \")), setTimeout(function () {\n      e.vars.opened = !0;\n    }, this.conf.openingInterval), this.$menu.addClass(s.current + \" \" + s.opened);\n  }, t[e].prototype._openFinish = function () {\n    var t = this;this.__transitionend(a.$page.first(), function () {\n      t.trigger(\"opened\");\n    }, this.conf.transitionDuration), a.$html.addClass(s.opening), this.trigger(\"opening\");\n  }, t[e].prototype.close = function () {\n    if (this.vars.opened) {\n      var e = this;this.__transitionend(a.$page.first(), function () {\n        e.$menu.removeClass(s.current).removeClass(s.opened), a.$html.removeClass(s.opened).removeClass(s.modal).removeClass(s.background).removeClass(s.mm(e.opts[o].position)).removeClass(s.mm(e.opts[o].zposition)), e.opts.extensions && a.$html.removeClass(e.opts.extensions), a.$page.each(function () {\n          t(this).attr(\"style\", t(this).data(n.style));\n        }), e.vars.opened = !1, e.trigger(\"closed\");\n      }, this.conf.transitionDuration), a.$html.removeClass(s.opening), this.trigger(\"close\"), this.trigger(\"closing\");\n    }\n  }, t[e].prototype.closeAllOthers = function () {\n    a.$allMenus.not(this.$menu).each(function () {\n      var o = t(this).data(e);o && o.close && o.close();\n    });\n  }, t[e].prototype.setPage = function (e) {\n    var n = this,\n        i = this.conf[o];e && e.length || (e = a.$body.find(i.pageSelector), e.length > 1 && i.wrapPageIfNeeded && (e = e.wrapAll(\"<\" + this.conf[o].pageNodetype + \" />\").parent())), e.each(function () {\n      t(this).attr(\"id\", t(this).attr(\"id\") || n.__getUniqueId());\n    }), e.addClass(s.page + \" \" + s.slideout), a.$page = e, this.trigger(\"setPage\", e);\n  }, t[e].prototype[\"_initWindow_\" + o] = function () {\n    a.$wndw.off(i.keydown + \"-offcanvas\").on(i.keydown + \"-offcanvas\", function (t) {\n      return a.$html.hasClass(s.opened) && 9 == t.keyCode ? (t.preventDefault(), !1) : void 0;\n    });var t = 0;a.$wndw.off(i.resize + \"-offcanvas\").on(i.resize + \"-offcanvas\", function (e, o) {\n      if (1 == a.$page.length && (o || a.$html.hasClass(s.opened))) {\n        var n = a.$wndw.height();(o || n != t) && (t = n, a.$page.css(\"minHeight\", n));\n      }\n    });\n  }, t[e].prototype._initBlocker = function () {\n    var e = this;a.$blck || (a.$blck = t('<div id=\"' + s.blocker + '\" class=\"' + s.slideout + '\" />')), a.$blck.appendTo(a.$body).off(i.touchstart + \"-offcanvas \" + i.touchmove + \"-offcanvas\").on(i.touchstart + \"-offcanvas \" + i.touchmove + \"-offcanvas\", function (t) {\n      t.preventDefault(), t.stopPropagation(), a.$blck.trigger(i.mousedown + \"-offcanvas\");\n    }).off(i.mousedown + \"-offcanvas\").on(i.mousedown + \"-offcanvas\", function (t) {\n      t.preventDefault(), a.$html.hasClass(s.modal) || (e.closeAllOthers(), e.close());\n    });\n  };var s, n, i, a;\n}(_jquery2.default);\n\n},{\"./jquery/dist/jquery\":6}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _jquery = require(\"./../../vendor/jquery/dist/jquery\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function rdSlickIFFE(factory, $) {\n\n\tif ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object') {\n\t\t// Node/CommonJS\n\t\tmodule.exports = factory($);\n\t} else {\n\t\t// Browser globals\n\t\twindow.noUiSlider = factory($);\n\t}\n})(function ($) {\n\t\"use strict\";\n\n\t//added new classes\n\t// slick-slide-lazy\n\t// slick-slide-lazy-loading\n\n\t//can potentially add in scroll to top of slider on hash handle\n\n\t//need to add\n\t// last\n\t// first\n\t//can specify where to put dots and can specify how dots are built, can use for pagination\n\t// can create a build/update pangnation function\n\n\t//try adding on hover arrow, peak at next slide\n\t//thinking about arrows to go between case studies\n\n\tvar instanceUid = 0;\n\n\tvar buildActions = {\n\t\tbuildRows: function buildRows() {\n\t\t\tvar newSlides, numOfSlides, originalSlides, slidesPerSection;\n\n\t\t\tnewSlides = document.createDocumentFragment();\n\t\t\toriginalSlides = this.$slider.children();\n\n\t\t\tif (this.options.rows > 1) {\n\n\t\t\t\tslidesPerSection = this.options.slidesPerRow * this.options.rows;\n\n\t\t\t\tnumOfSlides = Math.ceil(originalSlides.length / slidesPerSection);\n\n\t\t\t\tfor (var aIndex = 0; aIndex < numOfSlides; aIndex++) {\n\t\t\t\t\tvar slide = document.createElement('div');\n\n\t\t\t\t\tfor (var bIndex = 0; bIndex < this.options.rows; bIndex++) {\n\t\t\t\t\t\tvar row = document.createElement('div');\n\n\t\t\t\t\t\tfor (var cIndex = 0; cIndex < this.options.slidesPerRow; cIndex++) {\n\t\t\t\t\t\t\tvar target = aIndex * slidesPerSection + (bIndex * this.options.slidesPerRow + cIndex);\n\n\t\t\t\t\t\t\tif (originalSlides.get(target)) {\n\t\t\t\t\t\t\t\trow.appendChild(originalSlides.get(target));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tslide.appendChild(row);\n\t\t\t\t\t}\n\t\t\t\t\tnewSlides.appendChild(slide);\n\t\t\t\t}\n\n\t\t\t\tthis.$slider.html(newSlides);\n\t\t\t\tthis.$slider.children().children().children().css({\n\t\t\t\t\t'width': 100 / this.options.slidesPerRow + '%',\n\t\t\t\t\t'display': 'inline-block'\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tbuildOut: function buildOut() {\n\t\t\tthis.$slides = this.$slider.children(this.options.slide + ':not(.slick-cloned)').addClass('slick-slide');\n\n\t\t\tthis.slideCount = this.$slides.length;\n\n\t\t\tthis.$slides.each(function (index, element) {\n\t\t\t\t$(element).attr('data-slick-index', index).data('originalStyling', $(element).attr('style') || '');\n\n\t\t\t\tif ($(element).data(this.options.lazyLoadData)) {\n\t\t\t\t\t$(element).addClass('slick-slide-lazy');\n\t\t\t\t}\n\t\t\t}.bind(this));\n\n\t\t\tthis.$slider.addClass('slick-slider');\n\n\t\t\tthis.$slideTrack = this.slideCount === 0 ? $('<div class=\"slick-track\"/>').appendTo(this.$slider) : this.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\n\t\t\tthis.$list = this.$slideTrack.wrap('<div class=\"slick-list\"/>').parent();\n\t\t\tthis.$slideTrack.css('opacity', 0);\n\n\t\t\tif (this.options.swipeToSlide === true) {\n\t\t\t\tthis.options.slidesToScroll = 1;\n\t\t\t}\n\n\t\t\tthis.setupInfinite();\n\t\t\tthis.buildArrows();\n\t\t\tthis.buildDots();\n\t\t\tthis.buildPagination();\n\t\t\tthis.updateDots();\n\t\t\tthis.updatePagination();\n\n\t\t\tthis.setSlideClasses(typeof this.currentSlide === 'number' ? this.currentSlide : 0);\n\n\t\t\tif (this.options.draggable === true) {\n\t\t\t\tthis.$list.addClass('draggable');\n\t\t\t}\n\t\t},\n\n\t\tsetupInfinite: function setupInfinite() {\n\t\t\tvar slideIndex, infiniteCount;\n\n\t\t\tif (this.options.infinite === true && this.options.fade === false) {\n\t\t\t\tslideIndex = null;\n\n\t\t\t\tif (this.slideCount > this.options.slidesToShow) {\n\n\t\t\t\t\tinfiniteCount = this.options.slidesToShow;\n\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i = this.slideCount; i > this.slideCount - infiniteCount; i -= 1) {\n\t\t\t\t\t\tslideIndex = i - 1;\n\n\t\t\t\t\t\t$(this.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex - this.slideCount).prependTo(this.$slideTrack).addClass('slick-cloned');\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < infiniteCount; i += 1) {\n\t\t\t\t\t\tslideIndex = i;\n\n\t\t\t\t\t\t$(this.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex + this.slideCount).appendTo(this.$slideTrack).addClass('slick-cloned');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.$slideTrack.find('.slick-cloned').find('[id]').each(function () {\n\t\t\t\t\t\t$(this).attr('id', '');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tbuildArrows: function buildArrows() {\n\t\t\tif (this.options.arrows === true) {\n\t\t\t\tthis.$prevArrow = $(this.options.prevArrow).addClass('slick-arrow');\n\t\t\t\tthis.$nextArrow = $(this.options.nextArrow).addClass('slick-arrow');\n\n\t\t\t\tif (this.slideCount > this.options.slidesToShow) {\n\t\t\t\t\tthis.$prevArrow.removeClass('slick-hidden');\n\t\t\t\t\tthis.$nextArrow.removeClass('slick-hidden');\n\n\t\t\t\t\tif (this.htmlExpr.test(this.options.prevArrow)) {\n\t\t\t\t\t\tthis.$prevArrow.prependTo(this.options.appendArrows);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.htmlExpr.test(this.options.nextArrow)) {\n\t\t\t\t\t\tthis.$nextArrow.appendTo(this.options.appendArrows);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.options.infinite !== true) {\n\t\t\t\t\t\tthis.$prevArrow.addClass('slick-disabled');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.$prevArrow.add(this.$nextArrow).addClass('slick-hidden');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tbuildDots: function buildDots() {\n\t\t\tvar dotString;\n\n\t\t\tif (this.options.dots === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tdotString = '<ul';\n\t\t\t\tif (this.options.dotsClass) {\n\t\t\t\t\tdotString += ' class=\"' + this.options.dotsClass + '\"';\n\t\t\t\t}\n\t\t\t\tdotString += '>';\n\n\t\t\t\tfor (var i = 0; i <= this.getDotCount(); i += 1) {\n\t\t\t\t\tdotString += '<li>' + this.options.customPaging.call(this, this, i) + '</li>';\n\t\t\t\t}\n\n\t\t\t\tdotString += '</ul>';\n\n\t\t\t\tthis.$dots = $(dotString).appendTo(this.options.appendDots);\n\n\t\t\t\tthis.$dots.find('li').first().addClass('slick-active');\n\t\t\t}\n\t\t},\n\n\t\tbuildPagination: function buildPagination() {\n\t\t\tvar pagString;\n\n\t\t\tif (this.options.pagination === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tpagString = '<ul';\n\t\t\t\tif (this.options.paginationClass) {\n\t\t\t\t\tpagString += 'class=\"' + this.options.paginationClass + '\"';\n\t\t\t\t}\n\t\t\t\tpagString += '>';\n\n\t\t\t\tpagString += '<li><button class=\"slick-pag-first\"><svg><use xlink:href=\"#arrow-left-2\" /></svg></button></li>';\n\t\t\t\tpagString += '<li><button class=\"slick-pag-prev\"><svg><use xlink:href=\"#arrow-left\" /></svg></button></li>';\n\n\t\t\t\tfor (var i = 0; i <= this.getDotCount(); i += 1) {\n\t\t\t\t\tpagString += '<li><button data-slick-id-target=\"' + i + '\" class=\"slick-pag-number\">' + (i + 1) + '</button></li>';\n\t\t\t\t}\n\n\t\t\t\tpagString += '<li><button class=\"slick-pag-next\"><svg><use xlink:href=\"#arrow-right\" /></svg></button></li>';\n\t\t\t\tpagString += '<li><button class=\"slick-pag-last\"><svg><use xlink:href=\"#arrow-right-2\" /></svg></button></li>';\n\n\t\t\t\tpagString += '</ul>';\n\t\t\t\t$(this.options.appendPagination).html('');\n\t\t\t\tthis.$pagination = $(pagString).appendTo(this.options.appendPagination);\n\n\t\t\t\tvar paginationObject = {\n\t\t\t\t\tfirst: this.$pagination.find('.slick-pag-first'),\n\t\t\t\t\tprev: this.$pagination.find('.slick-pag-prev'),\n\t\t\t\t\tnext: this.$pagination.find('.slick-pag-next'),\n\t\t\t\t\tlast: this.$pagination.find('.slick-pag-last'),\n\t\t\t\t\tnumbers: this.$pagination.find('.slick-pag-number'),\n\t\t\t\t\tall: this.$pagination\n\t\t\t\t};\n\t\t\t\tthis.$pagination = paginationObject;\n\t\t\t\tthis.$pagination.numbers.first().parent('li').addClass('slick-active');\n\t\t\t}\n\t\t},\n\n\t\tsetProps: function setProps() {\n\t\t\tvar bodyStyle = document.body.style;\n\n\t\t\tthis.positionProp = this.options.vertical === true ? 'top' : 'left';\n\n\t\t\tif (this.positionProp === 'top') {\n\t\t\t\tthis.$slider.addClass('slick-vertical');\n\t\t\t} else {\n\t\t\t\tthis.$slider.removeClass('slick-vertical');\n\t\t\t}\n\n\t\t\tif (bodyStyle.WebkitTransition !== undefined || bodyStyle.MozTransition !== undefined || bodyStyle.msTransition !== undefined) {\n\n\t\t\t\tif (this.options.useCSS === true) {\n\t\t\t\t\tthis.cssTransitions = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.fade) {\n\t\t\t\tif (typeof this.options.zIndex === 'number') {\n\t\t\t\t\tif (this.options.zIndex < 3) {\n\t\t\t\t\t\tthis.options.zIndex = 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.options.zIndex = this.defaults.zIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (bodyStyle.OTransform !== undefined) {\n\t\t\t\tthis.animType = 'OTransform';\n\t\t\t\tthis.transformType = '-o-transform';\n\t\t\t\tthis.transitionType = 'OTransition';\n\t\t\t\tif (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) {\n\t\t\t\t\tthis.animType = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bodyStyle.MozTransform !== undefined) {\n\t\t\t\tthis.animType = 'MozTransform';\n\t\t\t\tthis.transformType = '-moz-transform';\n\t\t\t\tthis.transitionType = 'MozTransition';\n\t\t\t\tif (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) {\n\t\t\t\t\tthis.animType = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bodyStyle.webkitTransform !== undefined) {\n\t\t\t\tthis.animType = 'webkitTransform';\n\t\t\t\tthis.transformType = '-webkit-transform';\n\t\t\t\tthis.transitionType = 'webkitTransition';\n\t\t\t\tif (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) {\n\t\t\t\t\tthis.animType = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bodyStyle.msTransform !== undefined) {\n\t\t\t\tthis.animType = 'msTransform';\n\t\t\t\tthis.transformType = '-ms-transform';\n\t\t\t\tthis.transitionType = 'msTransition';\n\t\t\t\tif (bodyStyle.msTransform === undefined) {\n\t\t\t\t\tthis.animType = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bodyStyle.transform !== undefined && this.animType !== false) {\n\t\t\t\tthis.animType = 'transform';\n\t\t\t\tthis.transformType = 'transform';\n\t\t\t\tthis.transitionType = 'transition';\n\t\t\t}\n\n\t\t\tthis.transformsEnabled = this.options.useTransform && this.animType !== null && this.animType !== false;\n\t\t},\n\n\t\tstartLoad: function startLoad() {\n\t\t\tif (this.options.arrows === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$prevArrow.hide();\n\t\t\t\tthis.$nextArrow.hide();\n\t\t\t}\n\n\t\t\tif (this.options.dots === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$dots.hide();\n\t\t\t}\n\n\t\t\tif (this.options.pagination === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$pagination.all.hide();\n\t\t\t}\n\n\t\t\tthis.$slider.addClass('slick-loading');\n\t\t},\n\n\t\tloadSlider: function loadSlider() {\n\t\t\tthis.setPosition();\n\n\t\t\tthis.$slideTrack.css({\n\t\t\t\topacity: 1\n\t\t\t});\n\n\t\t\tthis.$slider.removeClass('slick-loading');\n\n\t\t\tthis.initUI();\n\n\t\t\tif (this.options.lazyLoad === 'progressive') {\n\t\t\t\tthis.progressiveLazyLoad();\n\t\t\t}\n\t\t},\n\n\t\tinitUI: function initUI() {\n\t\t\tif (this.options.arrows === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$prevArrow.show();\n\t\t\t\tthis.$nextArrow.show();\n\t\t\t}\n\n\t\t\tif (this.options.dots === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$dots.show();\n\t\t\t}\n\n\t\t\tif (this.options.pagination === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$pagination.all.show();\n\t\t\t}\n\n\t\t\tif (this.options.autoplay === true) {\n\t\t\t\tthis.autoPlay();\n\t\t\t}\n\t\t}\n\t};\n\n\tvar updates = {\n\t\tupdateArrows: function updateArrows() {\n\t\t\tif (this.options.arrows === true && this.slideCount > this.options.slidesToShow && !this.options.infinite) {\n\t\t\t\tthis.$prevArrow.removeClass('slick-disabled');\n\t\t\t\tthis.$nextArrow.removeClass('slick-disabled');\n\n\t\t\t\tif (this.currentSlide === 0) {\n\t\t\t\t\tthis.$prevArrow.addClass('slick-disabled');\n\t\t\t\t\tthis.$nextArrow.removeClass('slick-disabled');\n\t\t\t\t} else if (this.currentSlide >= this.slideCount - this.options.slidesToShow) {\n\t\t\t\t\tthis.$nextArrow.addClass('slick-disabled');\n\t\t\t\t\tthis.$prevArrow.removeClass('slick-disabled');\n\t\t\t\t} else if (this.currentSlide >= this.slideCount - 1) {\n\t\t\t\t\tthis.$nextArrow.addClass('slick-disabled');\n\t\t\t\t\tthis.$prevArrow.removeClass('slick-disabled');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupdateDots: function updateDots() {\n\t\t\tif (this.$dots !== null) {\n\t\t\t\tthis.$dots.find('li').removeClass('slick-active');\n\t\t\t\tthis.$dots.find('li').eq(Math.floor(this.currentSlide / this.options.slidesToScroll)).addClass('slick-active');\n\t\t\t}\n\t\t},\n\n\t\tupdatePagination: function updatePagination() {\n\t\t\tif (this.$pagination !== null) {\n\t\t\t\tthis.$pagination.numbers.parents().removeClass('slick-active');\n\t\t\t\tthis.$pagination.numbers.eq(Math.floor(this.currentSlide / this.options.slidesToScroll)).parent('li').addClass('slick-active');\n\n\t\t\t\tthis.$pagination.first.removeClass('slick-disabled');\n\t\t\t\tthis.$pagination.prev.removeClass('slick-disabled');\n\t\t\t\tthis.$pagination.next.removeClass('slick-disabled');\n\t\t\t\tthis.$pagination.last.removeClass('slick-disabled');\n\n\t\t\t\tif (this.currentSlide === 0) {\n\t\t\t\t\tthis.$pagination.first.addClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.prev.addClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.next.removeClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.last.removeClass('slick-disabled');\n\t\t\t\t} else if (this.currentSlide >= this.slideCount - this.options.slidesToShow) {\n\t\t\t\t\tthis.$pagination.first.removeClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.prev.removeClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.next.addClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.last.addClass('slick-disabled');\n\t\t\t\t} else if (this.currentSlide >= this.slideCount - 1) {\n\t\t\t\t\tthis.$pagination.first.removeClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.prev.removeClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.next.addClass('slick-disabled');\n\t\t\t\t\tthis.$pagination.last.addClass('slick-disabled');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tsetSlideClasses: function setSlideClasses(index) {\n\t\t\tvar allSlides, indexOffset, remainder;\n\n\t\t\tallSlides = this.$slider.find('.slick-slide').removeClass('slick-active slick-current');\n\n\t\t\tthis.$slides.eq(index).addClass('slick-current');\n\n\t\t\tif (index >= 0 && index <= this.slideCount - this.options.slidesToShow) {\n\t\t\t\tthis.$slides.slice(index, index + this.options.slidesToShow).addClass('slick-active');\n\t\t\t} else if (allSlides.length <= this.options.slidesToShow) {\n\t\t\t\tallSlides.addClass('slick-active');\n\t\t\t} else {\n\t\t\t\tremainder = this.slideCount % this.options.slidesToShow;\n\t\t\t\tindexOffset = this.options.infinite === true ? this.options.slidesToShow + index : index;\n\n\t\t\t\tif (this.options.slidesToShow === this.options.slidesToScroll && this.slideCount - index < this.options.slidesToShow) {\n\t\t\t\t\tallSlides.slice(indexOffset - (this.options.slidesToShow - remainder), indexOffset + remainder).addClass('slick-active');\n\t\t\t\t} else {\n\t\t\t\t\tallSlides.slice(indexOffset, indexOffset + this.options.slidesToShow).addClass('slick-active');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.lazyLoad === 'ondemand') {\n\t\t\t\tthis.lazyLoad();\n\t\t\t}\n\t\t},\n\n\t\tsetPosition: function setPosition() {\n\t\t\tthis.setDimensions();\n\n\t\t\tthis.setHeight();\n\n\t\t\tif (this.options.fade === false) {\n\t\t\t\tthis.setCSS(this.getLeft(this.currentSlide));\n\t\t\t} else {\n\t\t\t\tthis.setFade();\n\t\t\t}\n\n\t\t\tthis.$slider.trigger('setPosition', [this]);\n\t\t},\n\n\t\tsetDimensions: function setDimensions() {\n\t\t\tif (this.options.vertical === true) {\n\t\t\t\tthis.$list.height(this.$slides.first().outerHeight(true) * this.options.slidesToShow);\n\t\t\t}\n\n\t\t\tthis.listWidth = this.$list.width();\n\t\t\tthis.listHeight = this.$list.height();\n\n\t\t\tif (this.options.vertical === false && this.options.variableWidth === false) {\n\t\t\t\tthis.slideWidth = Math.ceil(this.listWidth / this.options.slidesToShow);\n\t\t\t\tthis.$slideTrack.width(Math.ceil(this.slideWidth * this.$slideTrack.children('.slick-slide').length));\n\t\t\t} else if (this.options.variableWidth === true) {\n\t\t\t\tthis.$slideTrack.width(5000 * this.slideCount);\n\t\t\t} else {\n\t\t\t\tthis.slideWidth = Math.ceil(this.listWidth);\n\t\t\t\tthis.$slideTrack.height(Math.ceil(this.$slides.first().outerHeight(true) * this.$slideTrack.children('.slick-slide').length));\n\t\t\t}\n\n\t\t\tvar offset = this.$slides.first().outerWidth(true) - this.$slides.first().width();\n\t\t\tif (this.options.variableWidth === false) {\n\t\t\t\tthis.$slideTrack.children('.slick-slide').width(this.slideWidth - offset);\n\t\t\t}\n\t\t},\n\n\t\tsetHeight: function setHeight() {\n\t\t\tif (this.options.slidesToShow === 1 && this.options.adaptiveHeight === true && this.options.vertical === false) {\n\t\t\t\tvar targetHeight = this.$slides.eq(this.currentSlide).outerHeight(true);\n\t\t\t\tthis.$list.css('height', targetHeight);\n\t\t\t}\n\t\t},\n\n\t\tsetCSS: function setCSS(position) {\n\t\t\tvar positionProps = {};\n\n\t\t\tvar x = this.positionProp === 'left' ? Math.ceil(position) + 'px' : '0px';\n\t\t\tvar y = this.positionProp === 'top' ? Math.ceil(position) + 'px' : '0px';\n\n\t\t\tpositionProps[this.positionProp] = position;\n\n\t\t\tif (this.transformsEnabled === false) {\n\t\t\t\tthis.$slideTrack.css(positionProps);\n\t\t\t} else {\n\t\t\t\tpositionProps = {};\n\t\t\t\tif (this.cssTransitions === false) {\n\t\t\t\t\tpositionProps[this.animType] = 'translate(' + x + ', ' + y + ')';\n\t\t\t\t\tthis.$slideTrack.css(positionProps);\n\t\t\t\t} else {\n\t\t\t\t\tpositionProps[this.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n\t\t\t\t\tthis.$slideTrack.css(positionProps);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tsetFade: function setFade() {\n\t\t\tvar targetLeft;\n\n\t\t\tthis.$slides.each(function (index, element) {\n\t\t\t\ttargetLeft = this.slideWidth * index * -1;\n\t\t\t\t$(element).css({\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tleft: targetLeft,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tzIndex: this.options.zIndex - 2,\n\t\t\t\t\topacity: 0\n\t\t\t\t});\n\t\t\t}.bind(this));\n\n\t\t\tthis.$slides.eq(this.currentSlide).css({\n\t\t\t\tzIndex: this.options.zIndex - 1,\n\t\t\t\topacity: 1\n\t\t\t});\n\t\t}\n\t};\n\n\tvar responsive = {\n\t\tregisterBreakpoints: function registerBreakpoints() {\n\t\t\tvar breakpoint,\n\t\t\t    currentBreakpoint,\n\t\t\t    length,\n\t\t\t    responsiveSettings = this.options.responsive || null;\n\n\t\t\tif ($.type(responsiveSettings) === \"array\" && responsiveSettings.length) {\n\t\t\t\tthis.respondTo = this.options.respondTo || 'window';\n\n\t\t\t\tfor (breakpoint in responsiveSettings) {\n\t\t\t\t\tlength = this.breakpoints.length - 1;\n\t\t\t\t\tcurrentBreakpoint = responsiveSettings[breakpoint].breakpoint;\n\n\t\t\t\t\tif (responsiveSettings.hasOwnProperty(breakpoint)) {\n\t\t\t\t\t\t// loop through the breakpoints and cut out any existing\n\t\t\t\t\t\t// ones with the same breakpoint number, we don't want dupes.\n\t\t\t\t\t\twhile (length >= 0) {\n\t\t\t\t\t\t\tif (this.breakpoints[length] && this.breakpoints[length] === currentBreakpoint) {\n\t\t\t\t\t\t\t\tthis.breakpoints.splice(length, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlength--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.breakpoints.push(currentBreakpoint);\n\t\t\t\t\t\tthis.breakpointCallbacks[currentBreakpoint] = responsiveSettings[breakpoint].callback;\n\t\t\t\t\t\tthis.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.breakpoints.sort(function (a, b) {\n\t\t\t\t\treturn this.options.mobileFirst ? a - b : b - a;\n\t\t\t\t}.bind(this));\n\t\t\t}\n\t\t},\n\n\t\tcheckResponsive: function checkResponsive(initial, forceUpdate) {\n\t\t\tvar breakpoint,\n\t\t\t    targetBreakpoint,\n\t\t\t    respondToWidth,\n\t\t\t    triggerBreakpoint = false;\n\t\t\tvar sliderWidth = this.$slider.width();\n\t\t\tvar windowWidth = window.innerWidth || $(window).width();\n\n\t\t\tif (this.respondTo === 'window') {\n\t\t\t\trespondToWidth = windowWidth;\n\t\t\t} else if (this.respondTo === 'slider') {\n\t\t\t\trespondToWidth = sliderWidth;\n\t\t\t} else if (this.respondTo === 'min') {\n\t\t\t\trespondToWidth = Math.min(windowWidth, sliderWidth);\n\t\t\t}\n\n\t\t\tif (this.options.responsive && this.options.responsive.length && this.options.responsive !== null) {\n\n\t\t\t\ttargetBreakpoint = null;\n\n\t\t\t\tfor (breakpoint in this.breakpoints) {\n\t\t\t\t\tif (this.breakpoints.hasOwnProperty(breakpoint)) {\n\t\t\t\t\t\tif (this.originalSettings.mobileFirst === false) {\n\t\t\t\t\t\t\tif (respondToWidth < this.breakpoints[breakpoint]) {\n\t\t\t\t\t\t\t\ttargetBreakpoint = this.breakpoints[breakpoint];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (respondToWidth > this.breakpoints[breakpoint]) {\n\t\t\t\t\t\t\t\ttargetBreakpoint = this.breakpoints[breakpoint];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (targetBreakpoint !== null) {\n\t\t\t\t\tif (this.activeBreakpoint !== null) {\n\t\t\t\t\t\tif (targetBreakpoint !== this.activeBreakpoint || forceUpdate) {\n\t\t\t\t\t\t\tthis.activeBreakpoint = targetBreakpoint;\n\n\t\t\t\t\t\t\tif (this.breakpointSettings[targetBreakpoint] === 'unslick') {\n\t\t\t\t\t\t\t\tthis.unslick(targetBreakpoint);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.options = $.extend({}, this.originalSettings, this.breakpointSettings[targetBreakpoint]);\n\n\t\t\t\t\t\t\t\tif (initial === true) {\n\t\t\t\t\t\t\t\t\tthis.currentSlide = this.options.initialSlide;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.refresh(initial);\n\n\t\t\t\t\t\t\t\tif (this.breakpointCallbacks[targetBreakpoint]) {\n\t\t\t\t\t\t\t\t\tthis.breakpointCallbacks[targetBreakpoint](this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttriggerBreakpoint = targetBreakpoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.activeBreakpoint = targetBreakpoint;\n\n\t\t\t\t\t\tif (this.breakpointSettings[targetBreakpoint] === 'unslick') {\n\t\t\t\t\t\t\tthis.unslick(targetBreakpoint);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.options = $.extend({}, this.originalSettings, this.breakpointSettings[targetBreakpoint]);\n\n\t\t\t\t\t\t\tif (initial === true) {\n\t\t\t\t\t\t\t\tthis.currentSlide = this.options.initialSlide;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.refresh(initial);\n\n\t\t\t\t\t\t\tif (this.breakpointCallbacks[targetBreakpoint]) {\n\t\t\t\t\t\t\t\tthis.breakpointCallbacks[targetBreakpoint](this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttriggerBreakpoint = targetBreakpoint;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tif (this.activeBreakpoint !== null) {\n\t\t\t\t\t\tthis.activeBreakpoint = null;\n\t\t\t\t\t\tthis.options = this.originalSettings;\n\n\t\t\t\t\t\tif (initial === true) {\n\t\t\t\t\t\t\tthis.currentSlide = this.options.initialSlide;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.refresh(initial);\n\n\t\t\t\t\t\tif (this.breakpointCallbacks[targetBreakpoint]) {\n\t\t\t\t\t\t\tthis.breakpointCallbacks[targetBreakpoint](this);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttriggerBreakpoint = targetBreakpoint;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// only trigger breakpoints during an actual break. not on initialize.\n\t\t\t\tif (!initial && triggerBreakpoint !== false) {\n\t\t\t\t\tthis.$slider.trigger('breakpoint', [this, triggerBreakpoint]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar util = {\n\t\tgetLeft: function getLeft(slideIndex) {\n\t\t\tvar targetLeft,\n\t\t\t    verticalHeight,\n\t\t\t    verticalOffset = 0,\n\t\t\t    targetSlide;\n\n\t\t\tthis.slideOffset = 0;\n\t\t\tverticalHeight = this.$slides.first().outerHeight(true);\n\n\t\t\tif (this.options.infinite === true) {\n\t\t\t\tif (this.slideCount > this.options.slidesToShow) {\n\t\t\t\t\tthis.slideOffset = this.slideWidth * this.options.slidesToShow * -1;\n\t\t\t\t\tverticalOffset = verticalHeight * this.options.slidesToShow * -1;\n\t\t\t\t}\n\t\t\t\tif (this.slideCount % this.options.slidesToScroll !== 0) {\n\t\t\t\t\tif (slideIndex + this.options.slidesToScroll > this.slideCount && this.slideCount > this.options.slidesToShow) {\n\t\t\t\t\t\tif (slideIndex > this.slideCount) {\n\t\t\t\t\t\t\tthis.slideOffset = (this.options.slidesToShow - (slideIndex - this.slideCount)) * this.slideWidth * -1;\n\t\t\t\t\t\t\tverticalOffset = (this.options.slidesToShow - (slideIndex - this.slideCount)) * verticalHeight * -1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.slideOffset = this.slideCount % this.options.slidesToScroll * this.slideWidth * -1;\n\t\t\t\t\t\t\tverticalOffset = this.slideCount % this.options.slidesToScroll * verticalHeight * -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (slideIndex + this.options.slidesToShow > this.slideCount) {\n\t\t\t\t\tthis.slideOffset = (slideIndex + this.options.slidesToShow - this.slideCount) * this.slideWidth;\n\t\t\t\t\tverticalOffset = (slideIndex + this.options.slidesToShow - this.slideCount) * verticalHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.slideCount <= this.options.slidesToShow) {\n\t\t\t\tthis.slideOffset = 0;\n\t\t\t\tverticalOffset = 0;\n\t\t\t}\n\n\t\t\tif (this.options.vertical === false) {\n\t\t\t\ttargetLeft = slideIndex * this.slideWidth * -1 + this.slideOffset;\n\t\t\t} else {\n\t\t\t\ttargetLeft = slideIndex * verticalHeight * -1 + verticalOffset;\n\t\t\t}\n\n\t\t\tif (this.options.variableWidth === true) {\n\n\t\t\t\tif (this.slideCount <= this.options.slidesToShow || this.options.infinite === false) {\n\t\t\t\t\ttargetSlide = this.$slideTrack.children('.slick-slide').eq(slideIndex);\n\t\t\t\t} else {\n\t\t\t\t\ttargetSlide = this.$slideTrack.children('.slick-slide').eq(slideIndex + this.options.slidesToShow);\n\t\t\t\t}\n\n\t\t\t\ttargetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n\t\t\t}\n\n\t\t\treturn targetLeft;\n\t\t},\n\n\t\tcheckNavigable: function checkNavigable(index) {\n\t\t\tvar navigables, prevNavigable;\n\n\t\t\tnavigables = this.getNavigableIndexes();\n\t\t\tprevNavigable = 0;\n\t\t\tif (index > navigables[navigables.length - 1]) {\n\t\t\t\tindex = navigables[navigables.length - 1];\n\t\t\t} else {\n\t\t\t\tfor (var n in navigables) {\n\t\t\t\t\tif (index < navigables[n]) {\n\t\t\t\t\t\tindex = prevNavigable;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tprevNavigable = navigables[n];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn index;\n\t\t},\n\n\t\tgetNavigableIndexes: function getNavigableIndexes() {\n\t\t\tvar breakPoint = 0,\n\t\t\t    counter = 0,\n\t\t\t    indexes = [],\n\t\t\t    max;\n\n\t\t\tif (this.options.infinite === false) {\n\t\t\t\tmax = this.slideCount;\n\t\t\t} else {\n\t\t\t\tbreakPoint = this.options.slidesToScroll * -1;\n\t\t\t\tcounter = this.options.slidesToScroll * -1;\n\t\t\t\tmax = this.slideCount * 2;\n\t\t\t}\n\n\t\t\twhile (breakPoint < max) {\n\t\t\t\tindexes.push(breakPoint);\n\t\t\t\tbreakPoint = counter + this.options.slidesToScroll;\n\t\t\t\tcounter += this.options.slidesToScroll <= this.options.slidesToShow ? this.options.slidesToScroll : this.options.slidesToShow;\n\t\t\t}\n\n\t\t\treturn indexes;\n\t\t},\n\n\t\tgetSlideCount: function getSlideCount() {\n\t\t\tvar slidesTraversed, swipedSlide;\n\n\t\t\tif (this.options.swipeToSlide === true) {\n\t\t\t\tthis.$slideTrack.find('.slick-slide').each(function (index, slide) {\n\t\t\t\t\tif (slide.offsetLeft + $(slide).outerWidth() / 2 > this.swipeLeft * -1) {\n\t\t\t\t\t\tswipedSlide = slide;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tslidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - this.currentSlide) || 1;\n\n\t\t\t\treturn slidesTraversed;\n\t\t\t} else {\n\t\t\t\treturn this.options.slidesToScroll;\n\t\t\t}\n\t\t},\n\n\t\tgetDotCount: function getDotCount() {\n\t\t\tvar breakPoint = 0;\n\t\t\tvar counter = 0;\n\t\t\tvar pagerQty = 0;\n\n\t\t\tif (this.options.infinite === true) {\n\t\t\t\twhile (breakPoint < this.slideCount) {\n\t\t\t\t\t++pagerQty;\n\t\t\t\t\tbreakPoint = counter + this.options.slidesToScroll;\n\t\t\t\t\tcounter += this.options.slidesToScroll <= this.options.slidesToShow ? this.options.slidesToScroll : this.options.slidesToShow;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile (breakPoint < this.slideCount) {\n\t\t\t\t\t++pagerQty;\n\t\t\t\t\tbreakPoint = counter + this.options.slidesToScroll;\n\t\t\t\t\tcounter += this.options.slidesToScroll <= this.options.slidesToShow ? this.options.slidesToScroll : this.options.slidesToShow;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn pagerQty - 1;\n\t\t},\n\n\t\tasNavFor: function asNavFor(index) {\n\t\t\tvar asNavFor = this.options.asNavFor;\n\n\t\t\tif (asNavFor && asNavFor !== null) {\n\t\t\t\tasNavFor = $(asNavFor).not(this.$slider);\n\t\t\t}\n\n\t\t\tif (asNavFor !== null && (typeof asNavFor === \"undefined\" ? \"undefined\" : _typeof(asNavFor)) === 'object') {\n\t\t\t\tasNavFor.each(function (i, element) {\n\t\t\t\t\tvar target = $(element).rdslick('getSlick');\n\t\t\t\t\tif (!target.unslicked) {\n\t\t\t\t\t\ttarget.slideHandler(index, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tswipeDirection: function swipeDirection() {\n\t\t\tvar xDist, yDist, r, swipeAngle;\n\n\t\t\txDist = this.touchObject.startX - this.touchObject.curX;\n\t\t\tyDist = this.touchObject.startY - this.touchObject.curY;\n\t\t\tr = Math.atan2(yDist, xDist);\n\n\t\t\tswipeAngle = Math.round(r * 180 / Math.PI);\n\t\t\tif (swipeAngle < 0) {\n\t\t\t\tswipeAngle = 360 - Math.abs(swipeAngle);\n\t\t\t}\n\n\t\t\tif (swipeAngle <= 45 && swipeAngle >= 0) {\n\t\t\t\treturn 'left';\n\t\t\t}\n\n\t\t\tif (swipeAngle <= 360 && swipeAngle >= 315) {\n\t\t\t\treturn 'left';\n\t\t\t}\n\n\t\t\tif (swipeAngle >= 135 && swipeAngle <= 225) {\n\t\t\t\treturn 'right';\n\t\t\t}\n\n\t\t\tif (this.options.verticalSwiping === true) {\n\t\t\t\tif (swipeAngle >= 35 && swipeAngle <= 135) {\n\t\t\t\t\treturn 'left';\n\t\t\t\t} else {\n\t\t\t\t\treturn 'right';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 'vertical';\n\t\t},\n\n\t\tvisibility: function visibility() {\n\t\t\tif (document[this.hidden]) {\n\t\t\t\tthis.paused = true;\n\t\t\t\tthis.autoPlayClear();\n\t\t\t} else {\n\t\t\t\tif (this.options.autoplay === true) {\n\t\t\t\t\tthis.paused = false;\n\t\t\t\t\tthis.autoPlay();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function destroy(refresh) {\n\t\t\tthis.autoPlayClear();\n\t\t\tthis.touchObject = {};\n\t\t\tthis.cleanUpEvents();\n\n\t\t\t$('.slick-cloned', this.$slider).detach();\n\n\t\t\tif (this.$dots) {\n\t\t\t\tthis.$dots.remove();\n\t\t\t}\n\n\t\t\tif (this.$pagination) {\n\t\t\t\tthis.$pagination.all.remove();\n\t\t\t}\n\n\t\t\tif (this.$prevArrow && this.$prevArrow.length) {\n\t\t\t\tthis.$prevArrow.removeClass('slick-disabled slick-arrow slick-hidden').css(\"display\", \"\");\n\n\t\t\t\tif (this.htmlExpr.test(this.options.prevArrow)) {\n\t\t\t\t\tthis.$prevArrow.remove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.$nextArrow && this.$nextArrow.length) {\n\t\t\t\tthis.$nextArrow.removeClass('slick-disabled slick-arrow slick-hidden').css(\"display\", \"\");\n\n\t\t\t\tif (this.htmlExpr.test(this.options.nextArrow)) {\n\t\t\t\t\tthis.$nextArrow.remove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.$slides) {\n\t\t\t\tthis.$slides.removeClass('slick-slide slick-active slick-center slick-visible slick-current').removeAttr('data-slick-index').each(function () {\n\t\t\t\t\t$(this).attr('style', $(this).data('originalStyling'));\n\t\t\t\t});\n\t\t\t\tthis.$slideTrack.children(this.options.slide).detach();\n\t\t\t\tthis.$slideTrack.detach();\n\t\t\t\tthis.$list.detach();\n\t\t\t\tthis.$slider.append(this.$slides);\n\t\t\t}\n\n\t\t\tthis.cleanUpRows();\n\n\t\t\tthis.$slider.removeClass('slick-slider');\n\t\t\tthis.$slider.removeClass('slick-initialized');\n\n\t\t\tthis.unslicked = true;\n\n\t\t\tif (!refresh) {\n\t\t\t\tthis.$slider.trigger('destroy', [this]);\n\t\t\t}\n\t\t},\n\n\t\tunslick: function unslick(fromBreakpoint) {\n\t\t\tthis.$slider.trigger('unslick', [this, fromBreakpoint]);\n\t\t\tthis.destroy();\n\t\t},\n\n\t\trefresh: function refresh(initializing) {\n\t\t\tvar currentSlide, firstVisible;\n\n\t\t\tfirstVisible = this.slideCount - this.options.slidesToShow;\n\n\t\t\t// check that the new breakpoint can actually accept the\n\t\t\t// \"current slide\" as the current slide, otherwise we need\n\t\t\t// to set it to the closest possible value.\n\t\t\tif (!this.options.infinite) {\n\t\t\t\tif (this.slideCount <= this.options.slidesToShow) {\n\t\t\t\t\tthis.currentSlide = 0;\n\t\t\t\t} else if (this.currentSlide > firstVisible) {\n\t\t\t\t\tthis.currentSlide = firstVisible;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrentSlide = this.currentSlide;\n\n\t\t\tthis.destroy(true);\n\n\t\t\t$.extend(this, this.initials, { currentSlide: currentSlide });\n\n\t\t\tthis.init();\n\n\t\t\tif (!initializing) {\n\t\t\t\tthis.changeSlide({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tmessage: 'index',\n\t\t\t\t\t\tindex: currentSlide\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t}\n\t\t},\n\n\t\tcleanUpRows: function cleanUpRows() {\n\t\t\tvar originalSlides;\n\n\t\t\tif (this.options.rows > 1) {\n\t\t\t\toriginalSlides = this.$slides.children().children();\n\t\t\t\toriginalSlides.removeAttr('style');\n\t\t\t\tthis.$slider.html(originalSlides);\n\t\t\t}\n\t\t},\n\n\t\tunload: function unload() {\n\t\t\t$('.slick-cloned', this.$slider).remove();\n\n\t\t\tif (this.$dots) {\n\t\t\t\tthis.$dots.remove();\n\t\t\t}\n\n\t\t\tif (this.$pagination) {\n\t\t\t\tthis.$pagination.all.remove();\n\t\t\t}\n\n\t\t\tif (this.$prevArrow && this.htmlExpr.test(this.options.prevArrow)) {\n\t\t\t\tthis.$prevArrow.remove();\n\t\t\t}\n\n\t\t\tif (this.$nextArrow && this.htmlExpr.test(this.options.nextArrow)) {\n\t\t\t\tthis.$nextArrow.remove();\n\t\t\t}\n\n\t\t\tthis.$slides.removeClass('slick-slide slick-active slick-visible slick-current').css('width', '');\n\t\t},\n\n\t\treinit: function reinit() {\n\t\t\tthis.$slides = this.$slideTrack.children(this.options.slide).addClass('slick-slide');\n\n\t\t\tthis.slideCount = this.$slides.length;\n\n\t\t\tif (this.currentSlide >= this.slideCount && this.currentSlide !== 0) {\n\t\t\t\tthis.currentSlide = this.currentSlide - this.options.slidesToScroll;\n\t\t\t}\n\n\t\t\tif (this.slideCount <= this.options.slidesToShow) {\n\t\t\t\tthis.currentSlide = 0;\n\t\t\t}\n\n\t\t\tthis.registerBreakpoints();\n\n\t\t\tthis.setProps();\n\t\t\tthis.setupInfinite();\n\t\t\tthis.buildArrows();\n\t\t\tthis.updateArrows();\n\t\t\tthis.initArrowEvents();\n\t\t\tthis.buildDots();\n\t\t\tthis.updateDots();\n\t\t\tthis.updatePagination();\n\t\t\tthis.initDotEvents();\n\t\t\tthis.initPaginationEvents();\n\n\t\t\tthis.checkResponsive(false, true);\n\n\t\t\tif (this.options.focusOnSelect === true) {\n\t\t\t\t$(this.$slideTrack).children().on('click.slick', this.selectHandler);\n\t\t\t}\n\n\t\t\tthis.setSlideClasses(0);\n\n\t\t\tthis.setPosition();\n\n\t\t\tthis.$slider.trigger('reInit', [this]);\n\n\t\t\tif (this.options.autoplay === true) {\n\t\t\t\tthis.focusHandler();\n\t\t\t}\n\t\t},\n\n\t\tgetIndexFromID: function getIndexFromID(slickID) {\n\t\t\tif (typeof slickID !== \"string\") {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tvar slide = this.$list.find('[data-' + this.options.sliderIDData + '=' + slickID + ']').first();\n\n\t\t\tif (slide.length) {\n\t\t\t\treturn slide.data('slick-index') || 0;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t};\n\n\tvar events = {\n\t\tinitializeEvents: function initializeEvents() {\n\t\t\tthis.initArrowEvents();\n\t\t\tthis.initDotEvents();\n\t\t\tthis.initPaginationEvents();\n\n\t\t\tthis.$list.on('touchstart.slick mousedown.slick', {\n\t\t\t\taction: 'start'\n\t\t\t}, this.swipeHandler);\n\n\t\t\tthis.$list.on('touchmove.slick mousemove.slick', {\n\t\t\t\taction: 'move'\n\t\t\t}, this.swipeHandler);\n\n\t\t\tthis.$list.on('touchend.slick mouseup.slick', {\n\t\t\t\taction: 'end'\n\t\t\t}, this.swipeHandler);\n\n\t\t\tthis.$list.on('touchcancel.slick mouseleave.slick', {\n\t\t\t\taction: 'end'\n\t\t\t}, this.swipeHandler);\n\n\t\t\tthis.$list.on('click.slick', this.clickHandler);\n\n\t\t\t$(document).on(this.visibilityChange, this.visibility.bind(this));\n\n\t\t\tthis.$list.on('mouseenter.slick', this.setPaused.bind(this, true));\n\t\t\tthis.$list.on('mouseleave.slick', this.setPaused.bind(this, false));\n\n\t\t\tif (this.options.focusOnSelect === true) {\n\t\t\t\t$(this.$slideTrack).children().on('click.slick', this.selectHandler);\n\t\t\t}\n\n\t\t\t$(window).on('orientationchange.slick.slick-' + this.instanceUid, this.orientationChange.bind(this));\n\n\t\t\t$(window).on('resize.slick.slick-' + this.instanceUid, this.resize.bind(this));\n\n\t\t\t$('[draggable!=true]', this.$slideTrack).on('dragstart', this.preventDefault);\n\n\t\t\t$(window).on('load.slick.slick-' + this.instanceUid, this.setPosition);\n\t\t\t$(document).on('ready.slick.slick-' + this.instanceUid, this.setPosition);\n\n\t\t\tif (this.options.hashLink) {\n\t\t\t\t$(window).on('hashchange.slick.slick-' + this.instanceUid, this.hashHandle);\n\t\t\t}\n\t\t},\n\n\t\tcleanUpEvents: function cleanUpEvents() {\n\t\t\tif (this.options.dots && this.$dots !== null) {\n\t\t\t\t$('li', this.$dots).off('click.slick', this.changeSlide);\n\n\t\t\t\tif (this.options.pauseOnDotsHover === true && this.options.autoplay === true) {\n\t\t\t\t\t$('li', this.$dots).off('mouseenter.slick', $.proxy(this.setPaused, this, true)).off('mouseleave.slick', $.proxy(this.setPaused, this, false));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.pangnation && this.$pangnation.all !== null) {\n\t\t\t\tthis.$pagination.numbers.off('click.slick', function (e) {\n\t\t\t\t\tthis.changeSlide({\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tmessage: 'index',\n\t\t\t\t\t\t\tindex: $(e.target).data('slick-id-target')\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}.bind(this));\n\n\t\t\t\tthis.$pagination.prev.off('click.slick', {\n\t\t\t\t\tmessage: 'previous'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$pagination.next.off('click.slick', {\n\t\t\t\t\tmessage: 'next'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$pagination.first.off('click.slick', {\n\t\t\t\t\tmessage: 'first'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$pagination.last.off('click.slick', {\n\t\t\t\t\tmessage: 'last'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tif (this.options.pagination === true && this.options.pauseOnDotsHover === true && this.options.autoplay === true) {\n\t\t\t\t\tthis.$pagination.numbers.parents().off('mouseenter.slick', this.setPaused.bind(this, true)).off('mouseleave.slick', this.setPaused.bind(this, false));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.arrows === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$prevArrow && this.$prevArrow.off('click.slick', this.changeSlide);\n\t\t\t\tthis.$nextArrow && this.$nextArrow.off('click.slick', this.changeSlide);\n\t\t\t}\n\n\t\t\tthis.$list.off('touchstart.slick mousedown.slick', this.swipeHandler);\n\t\t\tthis.$list.off('touchmove.slick mousemove.slick', this.swipeHandler);\n\t\t\tthis.$list.off('touchend.slick mouseup.slick', this.swipeHandler);\n\t\t\tthis.$list.off('touchcancel.slick mouseleave.slick', this.swipeHandler);\n\n\t\t\tthis.$list.off('click.slick', this.clickHandler);\n\n\t\t\t$(document).off(this.visibilityChange, this.visibility);\n\n\t\t\tthis.$list.off('mouseenter.slick', this.setPaused.bind(this, true));\n\t\t\tthis.$list.off('mouseleave.slick', this.setPaused.bind(this, false));\n\n\t\t\tif (this.options.focusOnSelect === true) {\n\t\t\t\t$(this.$slideTrack).children().off('click.slick', this.selectHandler);\n\t\t\t}\n\n\t\t\t$(window).off('orientationchange.slick.slick-' + this.instanceUid, this.orientationChange);\n\n\t\t\t$(window).off('resize.slick.slick-' + this.instanceUid, this.resize);\n\n\t\t\t$('[draggable!=true]', this.$slideTrack).off('dragstart', this.preventDefault);\n\n\t\t\t$(window).off('load.slick.slick-' + this.instanceUid, this.setPosition);\n\t\t\t$(document).off('ready.slick.slick-' + this.instanceUid, this.setPosition);\n\n\t\t\tif (this.options.hashLink) {\n\t\t\t\t$(window).off('hashchange.slick.slick-' + this.instanceUid, this.hashHandle);\n\t\t\t}\n\t\t},\n\n\t\tinitArrowEvents: function initArrowEvents() {\n\t\t\tif (this.options.arrows === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$prevArrow.on('click.slick', {\n\t\t\t\t\tmessage: 'previous'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$nextArrow.on('click.slick', {\n\t\t\t\t\tmessage: 'next'\n\t\t\t\t}, this.changeSlide);\n\t\t\t}\n\t\t},\n\n\t\tinitDotEvents: function initDotEvents() {\n\t\t\tif (this.options.dots === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\t$('li', this.$dots).on('click.slick', {\n\t\t\t\t\tmessage: 'index'\n\t\t\t\t}, this.changeSlide);\n\t\t\t}\n\n\t\t\tif (this.options.dots === true && this.options.pauseOnDotsHover === true && this.options.autoplay === true) {\n\t\t\t\t$('li', this.$dots).on('mouseenter.slick', this.setPaused.bind(this, true)).on('mouseleave.slick', this.setPaused.bind(this, false));\n\t\t\t}\n\t\t},\n\n\t\tinitPaginationEvents: function initPaginationEvents() {\n\t\t\tif (this.options.pagination === true && this.slideCount > this.options.slidesToShow) {\n\t\t\t\tthis.$pagination.numbers.on('click.slick', function (e) {\n\t\t\t\t\tthis.changeSlide({\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tmessage: 'index',\n\t\t\t\t\t\t\tindex: $(e.target).data('slick-id-target')\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}.bind(this));\n\n\t\t\t\tthis.$pagination.prev.on('click.slick', {\n\t\t\t\t\tmessage: 'previous'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$pagination.next.on('click.slick', {\n\t\t\t\t\tmessage: 'next'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$pagination.first.on('click.slick', {\n\t\t\t\t\tmessage: 'first'\n\t\t\t\t}, this.changeSlide);\n\n\t\t\t\tthis.$pagination.last.on('click.slick', {\n\t\t\t\t\tmessage: 'last'\n\t\t\t\t}, this.changeSlide);\n\t\t\t}\n\n\t\t\tif (this.options.pagination === true && this.options.pauseOnDotsHover === true && this.options.autoplay === true) {\n\t\t\t\tthis.$pagination.numbers.parents().on('mouseenter.slick', this.setPaused.bind(this, true)).on('mouseleave.slick', this.setPaused.bind(this, false));\n\t\t\t}\n\t\t},\n\n\t\tswipeHandler: function swipeHandler(event) {\n\t\t\tif (this.options.swipe === false || 'ontouchend' in document && this.options.swipe === false) {\n\t\t\t\treturn;\n\t\t\t} else if (this.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ? event.originalEvent.touches.length : 1;\n\n\t\t\tthis.touchObject.minSwipe = this.listWidth / this.options.touchThreshold;\n\n\t\t\tif (this.options.verticalSwiping === true) {\n\t\t\t\tthis.touchObject.minSwipe = this.listHeight / this.options.touchThreshold;\n\t\t\t}\n\n\t\t\tswitch (event.data.action) {\n\t\t\t\tcase 'start':\n\t\t\t\t\tthis.swipeStart(event);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'move':\n\t\t\t\t\tthis.swipeMove(event);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'end':\n\t\t\t\t\tthis.swipeEnd(event);\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t},\n\n\t\tswipeStart: function swipeStart(event) {\n\t\t\tvar touches;\n\n\t\t\tif (this.touchObject.fingerCount !== 1 || this.slideCount <= this.options.slidesToShow) {\n\t\t\t\tthis.touchObject = {};\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n\t\t\t\ttouches = event.originalEvent.touches[0];\n\t\t\t}\n\n\t\t\tthis.touchObject.startX = this.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n\t\t\tthis.touchObject.startY = this.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\n\t\t\tthis.dragging = true;\n\t\t},\n\n\t\tswipeMove: function swipeMove(event) {\n\t\t\tvar curLeft, swipeDirection, swipeLength, positionOffset, touches;\n\n\t\t\ttouches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\n\t\t\tif (!this.dragging || touches && touches.length !== 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tcurLeft = this.getLeft(this.currentSlide);\n\n\t\t\tthis.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n\t\t\tthis.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\n\t\t\tthis.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(this.touchObject.curX - this.touchObject.startX, 2)));\n\n\t\t\tif (this.options.verticalSwiping === true) {\n\t\t\t\tthis.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(this.touchObject.curY - this.touchObject.startY, 2)));\n\t\t\t}\n\n\t\t\tswipeDirection = this.swipeDirection();\n\n\t\t\tif (swipeDirection === 'vertical') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (event.originalEvent !== undefined && this.touchObject.swipeLength > 4) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tpositionOffset = this.touchObject.curX > this.touchObject.startX ? 1 : -1;\n\t\t\tif (this.options.verticalSwiping === true) {\n\t\t\t\tpositionOffset = this.touchObject.curY > this.touchObject.startY ? 1 : -1;\n\t\t\t}\n\n\t\t\tswipeLength = this.touchObject.swipeLength;\n\n\t\t\tthis.touchObject.edgeHit = false;\n\n\t\t\tif (this.options.infinite === false) {\n\t\t\t\tif (this.currentSlide === 0 && swipeDirection === 'right' || this.currentSlide >= this.getDotCount() && swipeDirection === 'left') {\n\t\t\t\t\tswipeLength = this.touchObject.swipeLength * this.options.edgeFriction;\n\t\t\t\t\tthis.touchObject.edgeHit = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.vertical === false) {\n\t\t\t\tthis.swipeLeft = curLeft + swipeLength * positionOffset;\n\t\t\t} else {\n\t\t\t\tthis.swipeLeft = curLeft + swipeLength * (this.$list.height() / this.listWidth) * positionOffset;\n\t\t\t}\n\t\t\tif (this.options.verticalSwiping === true) {\n\t\t\t\tthis.swipeLeft = curLeft + swipeLength * positionOffset;\n\t\t\t}\n\n\t\t\tif (this.options.fade === true || this.options.touchMove === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.animating === true) {\n\t\t\t\tthis.swipeLeft = null;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.setCSS(this.swipeLeft);\n\t\t},\n\n\t\tswipeEnd: function swipeEnd() {\n\t\t\tvar slideCount;\n\n\t\t\tthis.dragging = false;\n\n\t\t\tthis.shouldClick = this.touchObject.swipeLength > 10 ? false : true;\n\n\t\t\tif (this.touchObject.curX === undefined) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.touchObject.edgeHit === true) {\n\t\t\t\tthis.$slider.trigger('edge', [this, this.swipeDirection()]);\n\t\t\t}\n\n\t\t\tif (this.touchObject.swipeLength >= this.touchObject.minSwipe) {\n\n\t\t\t\tswitch (this.swipeDirection()) {\n\t\t\t\t\tcase 'left':\n\t\t\t\t\t\tslideCount = this.options.swipeToSlide ? this.checkNavigable(this.currentSlide + this.getSlideCount()) : this.currentSlide + this.getSlideCount();\n\t\t\t\t\t\tthis.slideHandler(slideCount);\n\t\t\t\t\t\tthis.currentDirection = 0;\n\t\t\t\t\t\tthis.touchObject = {};\n\t\t\t\t\t\tthis.$slider.trigger('swipe', [this, 'left']);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'right':\n\t\t\t\t\t\tslideCount = this.options.swipeToSlide ? this.checkNavigable(this.currentSlide - this.getSlideCount()) : this.currentSlide - this.getSlideCount();\n\t\t\t\t\t\tthis.slideHandler(slideCount);\n\t\t\t\t\t\tthis.currentDirection = 1;\n\t\t\t\t\t\tthis.touchObject = {};\n\t\t\t\t\t\tthis.$slider.trigger('swipe', [this, 'right']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.touchObject.startX !== this.touchObject.curX) {\n\t\t\t\t\tthis.slideHandler(this.currentSlide);\n\t\t\t\t\tthis.touchObject = {};\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tslideHandler: function slideHandler(index, sync, dontAnimate) {\n\t\t\tvar targetSlide,\n\t\t\t    animSlide,\n\t\t\t    oldSlide,\n\t\t\t    slideLeft,\n\t\t\t    targetLeft = null;\n\n\t\t\tsync = sync || false;\n\n\t\t\tif (this.animating === true && this.options.waitForAnimate === true) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.options.fade === true && this.currentSlide === index) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.slideCount <= this.options.slidesToShow) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (sync === false) {\n\t\t\t\tthis.asNavFor(index);\n\t\t\t}\n\n\t\t\ttargetSlide = index;\n\t\t\ttargetLeft = this.getLeft(targetSlide);\n\t\t\tslideLeft = this.getLeft(this.currentSlide);\n\n\t\t\tthis.currentLeft = this.swipeLeft === null ? slideLeft : this.swipeLeft;\n\n\t\t\tif (this.options.infinite === false && (index < 0 || index > this.getDotCount() * this.options.slidesToScroll)) {\n\t\t\t\tif (this.options.fade === false) {\n\t\t\t\t\ttargetSlide = this.currentSlide;\n\t\t\t\t\tif (dontAnimate !== true) {\n\t\t\t\t\t\tthis.animateSlide(slideLeft, function () {\n\t\t\t\t\t\t\tthis.postSlide(targetSlide);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.postSlide(targetSlide);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else if (this.options.infinite === false && (index < 0 || index > this.slideCount - this.options.slidesToScroll)) {\n\t\t\t\tif (this.options.fade === false) {\n\t\t\t\t\ttargetSlide = this.currentSlide;\n\t\t\t\t\tif (dontAnimate !== true) {\n\t\t\t\t\t\tthis.animateSlide(slideLeft, function () {\n\t\t\t\t\t\t\tthis.postSlide(targetSlide);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.postSlide(targetSlide);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.options.autoplay === true) {\n\t\t\t\tclearInterval(this.autoPlayTimer);\n\t\t\t}\n\n\t\t\tif (targetSlide < 0) {\n\t\t\t\tif (this.slideCount % this.options.slidesToScroll !== 0) {\n\t\t\t\t\tanimSlide = this.slideCount - this.slideCount % this.options.slidesToScroll;\n\t\t\t\t} else {\n\t\t\t\t\tanimSlide = this.slideCount + targetSlide;\n\t\t\t\t}\n\t\t\t} else if (targetSlide >= this.slideCount) {\n\t\t\t\tif (this.slideCount % this.options.slidesToScroll !== 0) {\n\t\t\t\t\tanimSlide = 0;\n\t\t\t\t} else {\n\t\t\t\t\tanimSlide = targetSlide - this.slideCount;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanimSlide = targetSlide;\n\t\t\t}\n\n\t\t\tthis.animating = true;\n\n\t\t\tthis.$slider.trigger('beforeChange', [this, this.currentSlide, animSlide]);\n\n\t\t\toldSlide = this.currentSlide;\n\t\t\tthis.currentSlide = animSlide;\n\n\t\t\tthis.setSlideClasses(this.currentSlide);\n\n\t\t\tthis.updateDots();\n\t\t\tthis.updatePagination();\n\t\t\tthis.updateArrows();\n\n\t\t\tif (this.options.fade === true) {\n\t\t\t\tif (dontAnimate !== true) {\n\n\t\t\t\t\tthis.fadeSlideOut(oldSlide);\n\n\t\t\t\t\tthis.fadeSlide(animSlide, function () {\n\t\t\t\t\t\tthis.postSlide(animSlide);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.postSlide(animSlide);\n\t\t\t\t}\n\t\t\t\tthis.animateHeight();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (dontAnimate !== true) {\n\t\t\t\tthis.animateSlide(targetLeft, function () {\n\t\t\t\t\tthis.postSlide(animSlide);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.postSlide(animSlide);\n\t\t\t}\n\t\t},\n\n\t\tclickHandler: function clickHandler(event) {\n\t\t\tif (this.shouldClick === false) {\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\tselectHandler: function selectHandler(event) {\n\t\t\tvar targetElement = $(event.target).is('.slick-slide') ? $(event.target) : $(event.target).parents('.slick-slide');\n\n\t\t\tvar index = parseInt(targetElement.attr('data-slick-index'));\n\n\t\t\tif (!index) {\n\t\t\t\tindex = 0;\n\t\t\t}\n\n\t\t\tif (this.slideCount <= this.options.slidesToShow) {\n\t\t\t\tthis.setSlideClasses(index);\n\t\t\t\tthis.asNavFor(index);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.slideHandler(index);\n\t\t},\n\n\t\torientationChange: function orientationChange() {\n\t\t\tthis.checkResponsive();\n\t\t\tthis.setPosition();\n\t\t},\n\n\t\tresize: function resize() {\n\t\t\tif ($(window).width() !== this.windowWidth) {\n\t\t\t\tclearTimeout(this.windowDelay);\n\n\t\t\t\tthis.windowDelay = window.setTimeout(function () {\n\t\t\t\t\tthis.windowWidth = $(window).width();\n\t\t\t\t\tthis.checkResponsive();\n\t\t\t\t\tif (!this.unslicked) {\n\t\t\t\t\t\tthis.setPosition();\n\t\t\t\t\t}\n\t\t\t\t}.bind(this), 50);\n\t\t\t}\n\t\t},\n\n\t\tfocusHandler: function focusHandler() {\n\t\t\tthis.$slider.on('focus.slick blur.slick', '*', function (event) {\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\tvar sf = $(this);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (this.isPlay) {\n\t\t\t\t\t\tif (sf.is(':focus')) {\n\t\t\t\t\t\t\tthis.autoPlayClear();\n\t\t\t\t\t\t\tthis.paused = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.paused = false;\n\t\t\t\t\t\t\tthis.autoPlay();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}.bind(this), 0);\n\t\t\t});\n\t\t},\n\n\t\thashHandle: function hashHandle() {\n\t\t\tvar hash = window.location.hash;\n\t\t\tif (hash) {\n\t\t\t\thash = hash.substr(1);\n\t\t\t\tthis.changeSlide({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tmessage: 'indexID',\n\t\t\t\t\t\tindexID: hash\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar slideControllers = {\n\t\tautoPlay: function autoPlay() {\n\t\t\tif (this.autoPlayTimer) {\n\t\t\t\tclearInterval(this.autoPlayTimer);\n\t\t\t}\n\n\t\t\tif (this.slideCount > this.options.slidesToShow && this.paused !== true) {\n\t\t\t\tthis.autoPlayTimer = setInterval(this.autoPlayIterator, this.options.autoplaySpeed);\n\t\t\t}\n\t\t},\n\n\t\tautoPlayClear: function autoPlayClear() {\n\t\t\tif (this.autoPlayTimer) {\n\t\t\t\tclearInterval(this.autoPlayTimer);\n\t\t\t}\n\t\t},\n\n\t\tautoPlayIterator: function autoPlayIterator() {\n\t\t\tif (this.options.infinite === false) {\n\t\t\t\tif (this.direction === 1) {\n\n\t\t\t\t\tif (this.currentSlide + 1 === this.slideCount - 1) {\n\t\t\t\t\t\tthis.direction = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.slideHandler(this.currentSlide + this.options.slidesToScroll);\n\t\t\t\t} else {\n\n\t\t\t\t\tif (this.currentSlide - 1 === 0) {\n\t\t\t\t\t\tthis.direction = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.slideHandler(this.currentSlide - this.options.slidesToScroll);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.slideHandler(this.currentSlide + this.options.slidesToScroll);\n\t\t\t}\n\t\t},\n\n\t\tsetPaused: function setPaused(paused) {\n\t\t\tif (this.options.autoplay === true && this.options.pauseOnHover === true) {\n\t\t\t\tthis.paused = paused;\n\t\t\t\tif (!paused) {\n\t\t\t\t\tthis.autoPlay();\n\t\t\t\t} else {\n\t\t\t\t\tthis.autoPlayClear();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tchangeSlide: function changeSlide(event, dontAnimate) {\n\t\t\tvar $target = $(event.target),\n\t\t\t    indexOffset,\n\t\t\t    slideOffset,\n\t\t\t    unevenOffset,\n\t\t\t    index;\n\n\t\t\t// If target is a link, prevent default action.\n\t\t\tif ($target.is('a')) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\t// If target is not the <li> element (ie: a child), find the <li>.\n\t\t\tif (!$target.is('li')) {\n\t\t\t\t$target = $target.closest('li');\n\t\t\t}\n\n\t\t\tunevenOffset = this.slideCount % this.options.slidesToScroll !== 0;\n\t\t\tindexOffset = unevenOffset ? 0 : (this.slideCount - this.currentSlide) % this.options.slidesToScroll;\n\n\t\t\tswitch (event.data.message) {\n\t\t\t\tcase 'previous':\n\t\t\t\t\tslideOffset = indexOffset === 0 ? this.options.slidesToScroll : this.options.slidesToShow - indexOffset;\n\t\t\t\t\tif (this.slideCount > this.options.slidesToShow) {\n\t\t\t\t\t\tthis.slideHandler(this.currentSlide - slideOffset, false, dontAnimate);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'next':\n\t\t\t\t\tslideOffset = indexOffset === 0 ? this.options.slidesToScroll : indexOffset;\n\t\t\t\t\tif (this.slideCount > this.options.slidesToShow) {\n\t\t\t\t\t\tthis.slideHandler(this.currentSlide + slideOffset, false, dontAnimate);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'first':\n\t\t\t\t\tthis.slideHandler(0, false, dontAnimate);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'last':\n\t\t\t\t\tthis.slideHandler(this.slideCount - 1, false, dontAnimate);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'index':\n\t\t\t\t\tindex = event.data.index === 0 ? 0 : event.data.index || $target.index() * this.options.slidesToScroll;\n\n\t\t\t\t\tthis.slideHandler(this.checkNavigable(index), false, dontAnimate);\n\t\t\t\t\t$target.children().trigger('focus');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'indexID':\n\t\t\t\t\tif (this.options.infinite) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex = this.getIndexFromID(event.data.indexID);\n\t\t\t\t\tthis.slideHandler(this.checkNavigable(index), false, dontAnimate);\n\t\t\t\t\t$target.children().trigger('focus');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\n\t\tanimateSlide: function animateSlide(targetLeft, callback) {\n\t\t\tvar animProps = {};\n\n\t\t\tthis.animateHeight();\n\n\t\t\tthis.applyTransition();\n\t\t\ttargetLeft = Math.ceil(targetLeft);\n\n\t\t\tif (this.options.vertical === false) {\n\t\t\t\tanimProps[this.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n\t\t\t} else {\n\t\t\t\tanimProps[this.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n\t\t\t}\n\t\t\tthis.$slideTrack.css(animProps);\n\n\t\t\tif (callback) {\n\t\t\t\tsetTimeout(function () {\n\n\t\t\t\t\tthis.disableTransition();\n\n\t\t\t\t\tcallback.call(this);\n\t\t\t\t}.bind(this), this.options.speed);\n\t\t\t}\n\t\t},\n\n\t\tapplyTransition: function applyTransition(slide) {\n\t\t\tvar transition = {};\n\n\t\t\tif (this.options.fade === false) {\n\t\t\t\ttransition[this.transitionType] = this.transformType + ' ' + this.options.speed + 'ms ' + this.options.cssEase;\n\t\t\t} else {\n\t\t\t\ttransition[this.transitionType] = 'opacity ' + this.options.speed + 'ms ' + this.options.cssEase;\n\t\t\t}\n\n\t\t\tif (this.options.fade === false) {\n\t\t\t\tthis.$slideTrack.css(transition);\n\t\t\t} else {\n\t\t\t\tthis.$slides.eq(slide).css(transition);\n\t\t\t}\n\t\t},\n\n\t\tdisableTransition: function disableTransition(slide) {\n\t\t\tvar transition = {};\n\n\t\t\ttransition[this.transitionType] = '';\n\n\t\t\tif (this.options.fade === false) {\n\t\t\t\tthis.$slideTrack.css(transition);\n\t\t\t} else {\n\t\t\t\tthis.$slides.eq(slide).css(transition);\n\t\t\t}\n\t\t},\n\n\t\tpostSlide: function postSlide(index) {\n\t\t\tthis.$slider.trigger('afterChange', [this, index]);\n\n\t\t\tthis.animating = false;\n\n\t\t\tthis.setPosition();\n\n\t\t\tthis.swipeLeft = null;\n\n\t\t\tif (this.options.autoplay === true && this.paused === false) {\n\t\t\t\tthis.autoPlay();\n\t\t\t}\n\t\t},\n\n\t\tfadeSlideOut: function fadeSlideOut(slideIndex) {\n\t\t\tif (this.cssTransitions === false) {\n\n\t\t\t\tthis.$slides.eq(slideIndex).animate({\n\t\t\t\t\topacity: 0,\n\t\t\t\t\tzIndex: this.options.zIndex - 2\n\t\t\t\t}, this.options.speed, this.options.easing);\n\t\t\t} else {\n\n\t\t\t\tthis.applyTransition(slideIndex);\n\n\t\t\t\tthis.$slides.eq(slideIndex).css({\n\t\t\t\t\topacity: 0,\n\t\t\t\t\tzIndex: this.options.zIndex - 2\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tfadeSlide: function fadeSlide(slideIndex, callback) {\n\t\t\tif (this.cssTransitions === false) {\n\n\t\t\t\tthis.$slides.eq(slideIndex).css({\n\t\t\t\t\tzIndex: this.options.zIndex\n\t\t\t\t});\n\n\t\t\t\tthis.$slides.eq(slideIndex).animate({\n\t\t\t\t\topacity: 1\n\t\t\t\t}, this.options.speed, this.options.easing, callback);\n\t\t\t} else {\n\n\t\t\t\tthis.applyTransition(slideIndex);\n\n\t\t\t\tthis.$slides.eq(slideIndex).css({\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tzIndex: this.options.zIndex\n\t\t\t\t});\n\n\t\t\t\tif (callback) {\n\t\t\t\t\tsetTimeout(function () {\n\n\t\t\t\t\t\tthis.disableTransition(slideIndex);\n\n\t\t\t\t\t\tcallback.call(this);\n\t\t\t\t\t}.bind(this), this.options.speed);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tanimateHeight: function animateHeight() {\n\t\t\tif (this.options.slidesToShow === 1 && this.options.adaptiveHeight === true && this.options.vertical === false) {\n\t\t\t\tvar targetHeight = this.$slides.eq(this.currentSlide).outerHeight(true);\n\t\t\t\tthis.$list.animate({\n\t\t\t\t\theight: targetHeight\n\t\t\t\t}, this.options.speed);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar slickMethods = {\n\t\taddSlide: function addSlide(markup, index, addBefore) {\n\t\t\tif (typeof index === 'boolean') {\n\t\t\t\taddBefore = index;\n\t\t\t\tindex = null;\n\t\t\t} else if (index < 0 || index >= this.slideCount) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.unload();\n\n\t\t\tif (typeof index === 'number') {\n\t\t\t\tif (index === 0 && this.$slides.length === 0) {\n\t\t\t\t\t$(markup).appendTo(this.$slideTrack);\n\t\t\t\t} else if (addBefore) {\n\t\t\t\t\t$(markup).insertBefore(this.$slides.eq(index));\n\t\t\t\t} else {\n\t\t\t\t\t$(markup).insertAfter(this.$slides.eq(index));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (addBefore === true) {\n\t\t\t\t\t$(markup).prependTo(this.$slideTrack);\n\t\t\t\t} else {\n\t\t\t\t\t$(markup).appendTo(this.$slideTrack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.$slides = this.$slideTrack.children(this.options.slide);\n\n\t\t\tthis.$slideTrack.children(this.options.slide).detach();\n\n\t\t\tthis.$slideTrack.append(this.$slides);\n\n\t\t\tthis.$slides.each(function (index, element) {\n\t\t\t\t$(element).attr('data-slick-index', index);\n\t\t\t});\n\n\t\t\tthis.$slidesCache = this.$slides;\n\n\t\t\tthis.reinit();\n\t\t},\n\n\t\tremoveSlide: function removeSlide(index, removeBefore, removeAll) {\n\t\t\tif (typeof index === 'boolean') {\n\t\t\t\tremoveBefore = index;\n\t\t\t\tindex = removeBefore === true ? 0 : this.slideCount - 1;\n\t\t\t} else {\n\t\t\t\tindex = removeBefore === true ? --index : index;\n\t\t\t}\n\n\t\t\tif (this.slideCount < 1 || index < 0 || index > this.slideCount - 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.unload();\n\n\t\t\tif (removeAll === true) {\n\t\t\t\tthis.$slideTrack.children().remove();\n\t\t\t} else {\n\t\t\t\tthis.$slideTrack.children(this.options.slide).eq(index).remove();\n\t\t\t}\n\n\t\t\tthis.$slides = this.$slideTrack.children(this.options.slide);\n\n\t\t\tthis.$slideTrack.children(this.options.slide).detach();\n\n\t\t\tthis.$slideTrack.append(this.$slides);\n\n\t\t\tthis.$slidesCache = this.$slides;\n\n\t\t\tthis.reinit();\n\t\t},\n\n\t\tgetCurrent: function getCurrent() {\n\t\t\treturn this.currentSlide;\n\t\t},\n\n\t\tgetOption: function getOption(option) {\n\t\t\treturn this.options[option];\n\t\t},\n\n\t\tsetOption: function setOption(option, value, refresh) {\n\t\t\tvar length, item;\n\n\t\t\tif (option === \"responsive\" && $.type(value) === \"array\") {\n\t\t\t\tfor (item in value) {\n\t\t\t\t\tif ($.type(this.options.responsive) !== \"array\") {\n\t\t\t\t\t\tthis.options.responsive = [value[item]];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlength = this.options.responsive.length - 1;\n\t\t\t\t\t\t// loop through the responsive object and splice out duplicates.\n\t\t\t\t\t\twhile (length >= 0) {\n\t\t\t\t\t\t\tif (this.options.responsive[length].breakpoint === value[item].breakpoint) {\n\t\t\t\t\t\t\t\tthis.options.responsive.splice(length, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlength--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.options.responsive.push(value[item]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.options[option] = value;\n\t\t\t}\n\n\t\t\tif (refresh === true) {\n\t\t\t\tthis.unload();\n\t\t\t\tthis.reinit();\n\t\t\t}\n\t\t},\n\n\t\tgoTo: function goTo(slide, dontAnimate) {\n\t\t\tthis.changeSlide({\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'index',\n\t\t\t\t\tindex: parseInt(slide)\n\t\t\t\t}\n\t\t\t}, dontAnimate);\n\t\t},\n\n\t\tgoToID: function goToID(slideID, dontAnimate) {\n\t\t\tthis.changeSlide({\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'indexID',\n\t\t\t\t\tindexID: slideID\n\t\t\t\t}\n\t\t\t}, dontAnimate);\n\t\t},\n\n\t\tpause: function pause() {\n\t\t\tthis.autoPlayClear();\n\t\t\tthis.paused = true;\n\t\t},\n\n\t\tplay: function play() {\n\t\t\tthis.paused = false;\n\t\t\tthis.autoPlay();\n\t\t},\n\n\t\tprev: function prev() {\n\t\t\tthis.changeSlide({\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'previous'\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tnext: function next() {\n\t\t\tthis.changeSlide({\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: 'next'\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tgetSlick: function getSlick() {\n\t\t\treturn this;\n\t\t}\n\t};\n\n\tvar lazyLoad = {\n\t\tlazyLoad: function lazyLoad() {\n\t\t\tvar loadRange, cloneRange, rangeStart, rangeEnd;\n\n\t\t\tvar loadSlides = function loadSlides(slides) {\n\t\t\t\tslides.each(function (index, element) {\n\t\t\t\t\tvar url = $(element).data(this.options.lazyLoadData);\n\t\t\t\t\tvar lazyCB = this.options.lazyLoadCB;\n\t\t\t\t\tvar resetSlide = this.animateHeight.bind(this);\n\t\t\t\t\tif (!url) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t$(element).addClass('slick-slide-lazy-loading');\n\t\t\t\t\t$.ajax(url).done(function (data) {\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t$(element).html(data);\n\t\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\t\tif (lazyCB) {\n\t\t\t\t\t\t\t\t\tlazyCB(element);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresetSlide();\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t}).always(function () {\n\t\t\t\t\t\t$(element).removeClass('slick-slide-lazy-loading slick-slide-lazy');\n\t\t\t\t\t});\n\t\t\t\t}.bind(this));\n\t\t\t};\n\n\t\t\tloadSlides = loadSlides.bind(this);\n\n\t\t\trangeStart = this.options.infinite ? this.options.slidesToShow + this.currentSlide : this.currentSlide;\n\t\t\trangeEnd = rangeStart + this.options.slidesToShow;\n\t\t\tif (this.options.fade === true) {\n\t\t\t\tif (rangeStart > 0) {\n\t\t\t\t\trangeStart--;\n\t\t\t\t}\n\t\t\t\tif (rangeEnd <= this.slideCount) {\n\t\t\t\t\trangeEnd++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tloadRange = this.$slides.slice(rangeStart, rangeEnd);\n\t\t\tloadSlides(loadRange);\n\n\t\t\tif (this.slideCount <= this.options.slidesToShow) {\n\t\t\t\tcloneRange = this.$slider.find('.slick-slide');\n\t\t\t\tloadSlides(cloneRange);\n\t\t\t} else if (this.currentSlide >= this.slideCount - this.options.slidesToShow) {\n\t\t\t\tcloneRange = this.$slider.find('.slick-cloned').slice(0, this.options.slidesToShow);\n\t\t\t\tloadSlides(cloneRange);\n\t\t\t} else if (this.currentSlide === 0) {\n\t\t\t\tcloneRange = this.$slider.find('.slick-cloned').slice(this.options.slidesToShow * -1);\n\t\t\t\tloadSlides(cloneRange);\n\t\t\t}\n\t\t},\n\n\t\tprogressiveLazyLoad: function progressiveLazyLoad() {\n\t\t\tthis.$list.find('[data-' + this.options.lazyLoadData + ']').each(function (index, element) {\n\t\t\t\tvar url = $(element).data(this.options.lazyLoadData);\n\t\t\t\tif (!url) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$(element).addClass('slick-slide-lazy-loading');\n\t\t\t\t$.ajax(url).done(function (data) {\n\t\t\t\t\t$(element).html(data);\n\t\t\t\t}).always(function () {\n\t\t\t\t\t$(element).removeClass('slick-slide-lazy-loading slick-slide-lazy');\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t}\n\t};\n\n\tvar Slick = {\n\t\tsetup: setup,\n\t\tinit: init,\n\n\t\t//build actions\n\t\tbuildRows: buildActions.buildRows,\n\t\tbuildOut: buildActions.buildOut,\n\t\tsetupInfinite: buildActions.setupInfinite,\n\t\tbuildArrows: buildActions.buildArrows,\n\t\tbuildDots: buildActions.buildDots,\n\t\tbuildPagination: buildActions.buildPagination,\n\t\tsetProps: buildActions.setProps,\n\t\tstartLoad: buildActions.startLoad,\n\t\tloadSlider: buildActions.loadSlider,\n\t\tinitUI: buildActions.initUI,\n\n\t\t//update actions\n\t\tupdateArrows: updates.updateArrows,\n\t\tupdateDots: updates.updateDots,\n\t\tupdatePagination: updates.updatePagination,\n\t\tsetSlideClasses: updates.setSlideClasses,\n\t\tsetPosition: updates.setPosition,\n\t\tsetDimensions: updates.setDimensions,\n\t\tsetHeight: updates.setHeight,\n\t\tsetCSS: updates.setCSS,\n\t\tsetFade: updates.setFade,\n\n\t\t//responsive\n\t\tregisterBreakpoints: responsive.registerBreakpoints,\n\t\tcheckResponsive: responsive.checkResponsive,\n\n\t\t//util\n\t\tgetLeft: util.getLeft,\n\t\tcheckNavigable: util.checkNavigable,\n\t\tgetNavigableIndexes: util.getNavigableIndexes,\n\t\tgetSlideCount: util.getSlideCount,\n\t\tgetDotCount: util.getDotCount,\n\t\tasNavFor: util.asNavFor,\n\t\tswipeDirection: util.swipeDirection,\n\t\tvisibility: util.visibility,\n\t\tdestroy: util.destroy,\n\t\tunslick: util.unslick,\n\t\trefresh: util.refresh,\n\t\tcleanUpRows: util.cleanUpRows,\n\t\tunload: util.unload,\n\t\treinit: util.reinit,\n\t\tgetIndexFromID: util.getIndexFromID,\n\n\t\t//events\n\t\tinitializeEvents: events.initializeEvents,\n\t\tcleanUpEvents: events.cleanUpEvents,\n\t\tinitArrowEvents: events.initArrowEvents,\n\t\tinitDotEvents: events.initDotEvents,\n\t\tinitPaginationEvents: events.initPaginationEvents,\n\t\tswipeHandler: events.swipeHandler,\n\t\tswipeStart: events.swipeStart,\n\t\tswipeMove: events.swipeMove,\n\t\tswipeEnd: events.swipeEnd,\n\t\tslideHandler: events.slideHandler,\n\t\tclickHandler: events.clickHandler,\n\t\tkeyHandler: events.keyHandler,\n\t\tselectHandler: events.selectHandler,\n\t\torientationChange: events.orientationChange,\n\t\tresize: events.resize,\n\t\tfocusHandler: events.focusHandler,\n\t\thashHandle: events.hashHandle,\n\n\t\t//slide controllers\n\t\tautoPlay: slideControllers.autoPlay,\n\t\tautoPlayClear: slideControllers.autoPlayClear,\n\t\tautoPlayIterator: slideControllers.autoPlayIterator,\n\t\tchangeSlide: slideControllers.changeSlide,\n\t\tsetPaused: slideControllers.setPaused,\n\t\tanimateSlide: slideControllers.animateSlide,\n\t\tapplyTransition: slideControllers.applyTransition,\n\t\tdisableTransition: slideControllers.disableTransition,\n\t\tpostSlide: slideControllers.postSlide,\n\t\tfadeSlideOut: slideControllers.fadeSlideOut,\n\t\tfadeSlide: slideControllers.fadeSlide,\n\t\tanimateHeight: slideControllers.animateHeight,\n\n\t\t//lazyLoad\n\t\tlazyLoad: lazyLoad.lazyLoad,\n\t\tprogressiveLazyLoad: lazyLoad.progressiveLazyLoad,\n\n\t\t//slick methods\n\t\taddSlide: slickMethods.addSlide,\n\t\tremoveSlide: slickMethods.removeSlide,\n\t\tgetCurrent: slickMethods.getCurrent,\n\t\tgetOption: slickMethods.getOption,\n\t\tsetOption: slickMethods.setOption,\n\t\tgoTo: slickMethods.goTo,\n\t\tpause: slickMethods.pause,\n\t\tplay: slickMethods.play,\n\t\tprev: slickMethods.prev,\n\t\tnext: slickMethods.next,\n\t\tgoToID: slickMethods.goToID,\n\t\tgetSlick: slickMethods.getSlick,\n\n\t\tslickAdd: slickMethods.addSlide,\n\t\tslickRemove: slickMethods.removeSlide,\n\t\tslickCurrentSlide: slickMethods.getCurrent,\n\t\tslickGetOption: slickMethods.getOption,\n\t\tslickSetOption: slickMethods.setOption,\n\t\tslickGoTo: slickMethods.goTo,\n\t\tslickPause: slickMethods.pause,\n\t\tslickPlay: slickMethods.play,\n\t\tslickPrev: slickMethods.prev,\n\t\tslickNext: slickMethods.next,\n\t\tslickGoToID: slickMethods.goToID\n\t};\n\n\tfunction setup(element, settings) {\n\t\tthis.defaults = {\n\t\t\tadaptiveHeight: false,\n\t\t\tappendArrows: $(element),\n\t\t\tappendDots: $(element),\n\t\t\tarrows: true,\n\t\t\tasNavFor: null,\n\t\t\tprevArrow: '<button class=\"slick-prev\">Previous</button>',\n\t\t\tnextArrow: '<button class=\"slick-next\">Next</button>',\n\t\t\tautoplay: false,\n\t\t\tautoplaySpeed: 3000,\n\t\t\tcssEase: 'ease',\n\t\t\tcustomPaging: function customPaging(slider, i) {\n\t\t\t\treturn '<button class=\"slick-number\">' + (i + 1) + '</button>';\n\t\t\t},\n\t\t\tdots: false,\n\t\t\tdotsClass: 'slick-dots',\n\t\t\thashLink: false,\n\t\t\tsliderIDData: 'slick-id',\n\t\t\tdraggable: true,\n\t\t\tedgeFriction: 0.35,\n\t\t\tfade: false,\n\t\t\tfocusOnSelect: false,\n\t\t\tinfinite: false,\n\t\t\tinitialSlide: 0,\n\t\t\tlazyLoad: 'ondemand',\n\t\t\tlazyLoadData: 'slick-slide-lazyload',\n\t\t\tlazyLoadCB: null,\n\t\t\tmobileFirst: false,\n\t\t\tpauseOnHover: true,\n\t\t\tpauseOnDotsHover: false,\n\t\t\trespondTo: 'window',\n\t\t\tresponsive: null,\n\t\t\trows: 1,\n\t\t\tslide: '',\n\t\t\tslidesPerRow: 1,\n\t\t\tslidesToShow: 1,\n\t\t\tslidesToScroll: 1,\n\t\t\tspeed: 500,\n\t\t\tswipe: true,\n\t\t\tswipeToSlide: false,\n\t\t\ttouchMove: true,\n\t\t\ttouchThreshold: 5,\n\t\t\tuseCSS: true,\n\t\t\tuseTransform: true,\n\t\t\tvariableWidth: false,\n\t\t\tvertical: false,\n\t\t\tverticalSwiping: false,\n\t\t\twaitForAnimate: true,\n\t\t\tzIndex: 1000,\n\t\t\tpagination: false,\n\t\t\tpaginationClass: 'slick-pagination',\n\t\t\tappendPagination: $(element)\n\t\t};\n\n\t\tthis.initials = {\n\t\t\tanimating: false,\n\t\t\tdragging: false,\n\t\t\tautoPlayTimer: null,\n\t\t\tcurrentDirection: 0,\n\t\t\tcurrentLeft: null,\n\t\t\tcurrentSlide: 0,\n\t\t\tdirection: 1,\n\t\t\t$dots: null,\n\t\t\t$pagination: null,\n\t\t\tlistWidth: null,\n\t\t\tlistHeight: null,\n\t\t\tloadIndex: 0,\n\t\t\t$nextArrow: null,\n\t\t\t$prevArrow: null,\n\t\t\tslideCount: null,\n\t\t\tslideWidth: null,\n\t\t\t$slideTrack: null,\n\t\t\t$slides: null,\n\t\t\tsliding: false,\n\t\t\tslideOffset: 0,\n\t\t\tswipeLeft: null,\n\t\t\t$list: null,\n\t\t\ttouchObject: {},\n\t\t\ttransformsEnabled: false,\n\t\t\tunslicked: false\n\t\t};\n\n\t\t$.extend(this, this.initials);\n\n\t\tthis.activeBreakpoint = null;\n\t\tthis.animType = null;\n\t\tthis.animProp = null;\n\t\tthis.breakpoints = [];\n\t\tthis.breakpointSettings = [];\n\t\tthis.breakpointCallbacks = [];\n\t\tthis.cssTransitions = false;\n\t\tthis.hidden = 'hidden';\n\t\tthis.paused = false;\n\t\tthis.positionProp = null;\n\t\tthis.respondTo = null;\n\t\tthis.rowCount = 1;\n\t\tthis.shouldClick = true;\n\t\tthis.$slider = $(element);\n\t\tthis.$slidesCache = null;\n\t\tthis.transformType = null;\n\t\tthis.transitionType = null;\n\t\tthis.visibilityChange = 'visibilitychange';\n\t\tthis.windowWidth = 0;\n\t\tthis.windowTimer = null;\n\n\t\tvar dataSettings = $(element).data('slick') || {};\n\n\t\tthis.options = $.extend({}, this.defaults, dataSettings, settings);\n\n\t\tthis.currentSlide = this.options.initialSlide;\n\n\t\tthis.originalSettings = this.options;\n\n\t\tif (typeof document.mozHidden !== 'undefined') {\n\t\t\tthis.hidden = 'mozHidden';\n\t\t\tthis.visibilityChange = 'mozvisibilitychange';\n\t\t} else if (typeof document.webkitHidden !== 'undefined') {\n\t\t\tthis.hidden = 'webkitHidden';\n\t\t\tthis.visibilityChange = 'webkitvisibilitychange';\n\t\t}\n\n\t\tthis.autoPlay = this.autoPlay.bind(this);\n\t\tthis.autoPlayClear = this.autoPlayClear.bind(this);\n\t\tthis.autoPlayIterator = this.autoPlayIterator.bind(this);\n\t\tthis.changeSlide = this.changeSlide.bind(this);\n\t\tthis.clickHandler = this.clickHandler.bind(this);\n\t\tthis.selectHandler = this.selectHandler.bind(this);\n\t\tthis.setPosition = this.setPosition.bind(this);\n\t\tthis.swipeHandler = this.swipeHandler.bind(this);\n\t\tthis.disableTransition = this.disableTransition.bind(this);\n\t\tthis.focusHandler = this.focusHandler.bind(this);\n\t\tthis.hashHandle = this.hashHandle.bind(this);\n\n\t\tthis.instanceUid = instanceUid++;\n\n\t\t// A simple way to check for HTML strings\n\t\t// Strict HTML recognition (must start with <)\n\t\t// Extracted from jQuery v1.11 source\n\t\tthis.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\n\t\tthis.registerBreakpoints();\n\t\tthis.init(true);\n\t\tthis.checkResponsive(true);\n\n\t\treturn this;\n\t}\n\n\tfunction init(creation) {\n\t\tif (!$(this.$slider).hasClass('slick-initialized')) {\n\t\t\t$(this.$slider).addClass('slick-initialized');\n\n\t\t\tthis.buildRows();\n\t\t\tthis.buildOut();\n\t\t\tthis.setProps();\n\t\t\tthis.startLoad();\n\t\t\tthis.loadSlider();\n\t\t\tthis.initializeEvents();\n\t\t\tthis.updateArrows();\n\t\t\tthis.updateDots();\n\t\t\tthis.updatePagination();\n\n\t\t\tif (this.options.hashLink) {\n\t\t\t\tthis.hashHandle();\n\t\t\t}\n\t\t}\n\n\t\tif (creation) {\n\t\t\tthis.$slider.trigger('init', [this]);\n\t\t}\n\t}\n\n\treturn function () {\n\t\tvar opt = arguments[0],\n\t\t    args = Array.prototype.slice.call(arguments, 1),\n\t\t    length = this.length,\n\t\t    i,\n\t\t    ret,\n\t\t    _ = this;\n\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tif ((typeof opt === \"undefined\" ? \"undefined\" : _typeof(opt)) === 'object' || typeof opt === 'undefined') {\n\t\t\t\t_[i].slick = Object.create(Slick).setup(_[i], opt);\n\t\t\t} else {\n\t\t\t\tret = _[i].slick[opt].apply(_[i].slick, args);\n\t\t\t}\n\t\t\tif (typeof ret !== 'undefined') {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn _;\n\t};\n}, _jquery2.default);\n\n},{\"./../../vendor/jquery/dist/jquery\":6}]},{},[3])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"sourceRoot":"/source/"}